// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common_settings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Uplay.Settings {

  /// <summary>Holder for reflection information generated from common_settings.proto</summary>
  public static partial class CommonSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for common_settings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVjb21tb25fc2V0dGluZ3MucHJvdG8SFG1nLnByb3RvY29sLnNldHRpbmdz",
            "GiBnb29nbGUvcHJvdG9idWYvZGVzY3JpcHRvci5wcm90byLWAgoEVXNlchIb",
            "Cg1zeW5jc2F2ZWdhbWVzGAEgASgIOgR0cnVlEhYKB29mZmxpbmUYAiABKAg6",
            "BWZhbHNlElMKDWNsb3NlYmVoYXZpb3IYAyABKA4yIy5tZy5wcm90b2NvbC5z",
            "ZXR0aW5ncy5DbG9zZUJlaGF2aW9yOhdDbG9zZUJlaGF2aW9yX1VuZGVmaW5l",
            "ZBJHCgtsYW5kaW5ncGFnZRgEIAEoDjIhLm1nLnByb3RvY29sLnNldHRpbmdz",
            "LkxhbmRpbmdQYWdlOg9MYW5kaW5nUGFnZU5ld3MSJQoWc3RhcnRfb25fd2lu",
            "ZG93c19zdGFydBgFIAEoCDoFZmFsc2USLAoebm9uX2ZyaWVuZF9nYW1lX2lu",
            "dml0ZV9lbmFibGVkGAYgASgIOgR0cnVlEiYKF2xhbmRpbmdwYWdlX3NldF9i",
            "eV91c2VyGAcgASgIOgVmYWxzZSJ7CgdPdmVybGF5EhUKB2VuYWJsZWQYASAB",
            "KAg6BHRydWUSHgoPZm9yY2V1bmhvb2tnYW1lGAIgASgIOgVmYWxzZRIaCgtm",
            "cHNfZW5hYmxlZBgDIAEoCDoFZmFsc2USHQoPd2FybmluZ19lbmFibGVkGAQg",
            "ASgIOgR0cnVlIh8KCExhbmd1YWdlEhMKBGNvZGUYASABKAk6BWVuLVVTIu0B",
            "CgRNaXNjEhwKFGluc3RhbGxlcl9jYWNoZV9wYXRoGAEgASgJEhwKFHNjcmVl",
            "bnNob3Rfcm9vdF9wYXRoGAIgASgJEjEKImVuYWJsZV9zY3JlZW5zaG90c19v",
            "bl9hY2hpZXZlbWVudHMYAyABKAg6BWZhbHNlEh4KFmdhbWVfaW5zdGFsbGF0",
            "aW9uX3BhdGgYBCABKAkSJAoWZW5hYmxlX2F1dG9fd2FsbF9wb3N0cxgFIAEo",
            "CDoEdHJ1ZRIwCiFzYXZlX3NjcmVlbnNob3RfdW5jb21wcmVzc2VkX2NvcHkY",
            "BiABKAg6BWZhbHNlImoKCFBvc2l0aW9uEg8KBGxlZnQYASABKA06ATASDgoD",
            "dG9wGAIgASgNOgEwEhAKBXdpZHRoGAMgASgNOgEwEhEKBmhlaWdodBgEIAEo",
            "DToBMBIYCgltYXhpbWl6ZWQYBSABKAg6BWZhbHNlIokBChFNb2RlbGVzc1Bv",
            "c2l0aW9ucxI2Cg5mcmllbmRzX3dpbmRvdxgBIAEoCzIeLm1nLnByb3RvY29s",
            "LnNldHRpbmdzLlBvc2l0aW9uEjwKFGNvbnZlcnNhdGlvbnNfd2luZG93GAIg",
            "ASgLMh4ubWcucHJvdG9jb2wuc2V0dGluZ3MuUG9zaXRpb24iLQoHTWFzdGVy",
            "cxIQCgh1c2VybmFtZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSJtCgZIb3Rr",
            "ZXkSEgoHa2V5Q29kZRgBIAEoDToBMBIXCghhbHRTdGF0ZRgCIAEoCDoFZmFs",
            "c2USGQoKc2hpZnRTdGF0ZRgDIAEoCDoFZmFsc2USGwoMY29udHJvbFN0YXRl",
            "GAQgASgIOgVmYWxzZSJiCglEb3dubG9hZHMSFwoFbGltaXQYASABKAQ6CDEw",
            "MDAwMDAwEhsKDGxpbWl0RW5hYmxlZBgCIAEoCDoFZmFsc2USHwoRcGF1c2VP",
            "bkdhbWVMYXVuY2gYAyABKAg6BHRydWUiHQoFQmV0YXMSFAoFb3B0SW4YASAB",
            "KAg6BWZhbHNlIiUKDEF1dG9QYXRjaGluZxIVCgdlbmFibGVkGAEgASgIOgR0",
            "cnVlIiIKCVNwb3RsaWdodBIVCgdlbmFibGVkGAEgASgIOgR0cnVlIjIKDUNv",
            "bnZlcnNhdGlvbnMSIQoSdGFza2JhclRhYnNFbmFibGVkGAEgASgIOgVmYWxz",
            "ZSIcCgRFcGljEhQKDGV4Y2hhbmdlQ29kZRgBIAEoCSIsChBCcmFuZGVkSW5z",
            "dGFsbGVyEhgKEHBlbmRpbmdfcHJvdG9jb2wYASABKAkiJQoLQ29ubmVjdFZp",
            "ZXcSFgoHZW5hYmxlZBgBIAEoCDoFZmFsc2UixgIKCVNoYXJlUGxheRITCgdi",
            "aXRyYXRlGAEgASgNOgIyMBIfChFkaXNwbGF5T25ib2FyZGluZxgCIAEoCDoE",
            "dHJ1ZRIrCh1tb3VzZUFuZEtleWJvYXJkQWNjZXNzQWxsb3dlZBgDIAEoCDoE",
            "dHJ1ZRIiChRnYW1lcGFkQWNjZXNzQWxsb3dlZBgEIAEoCDoEdHJ1ZRIfChFk",
            "aXNwbGF5V2l6YXJkVG91chgFIAEoCDoEdHJ1ZRIqCh9sYXN0VGltZUZlZWRC",
            "YWNrV2luZG93RGlzcGxheWVkGAYgASgNOgEwEhsKEG5iQnV5R2FtZVJlZnVz",
            "ZWQYByABKA06ATASHQoSbmJGZWVkYmFja1VuZmlsbGVkGAggASgNOgEwEhgK",
            "CnJlc29sdXRpb24YCSABKA06BDEwODASDwoDZnBzGAogASgNOgI2MCIkCgpS",
            "ZW1vdGVQbGF5EhYKB2FsbG93ZWQYASABKAg6BWZhbHNlKmEKDUNsb3NlQmVo",
            "YXZpb3ISGwoXQ2xvc2VCZWhhdmlvcl9VbmRlZmluZWQQABIXChNDbG9zZUJl",
            "aGF2aW9yX0Nsb3NlEAESGgoWQ2xvc2VCZWhhdmlvcl9NaW5pbWl6ZRACKnEK",
            "C0xhbmRpbmdQYWdlEhMKD0xhbmRpbmdQYWdlTmV3cxAAEhQKEExhbmRpbmdQ",
            "YWdlR2FtZXMQARIdChlMYW5kaW5nUGFnZUxhc3RQbGF5ZWRHYW1lEAISGAoU",
            "TGFuZGluZ1BhZ2VVcGxheVBsdXMQAzo9ChRkaXNhYmxlU3RhdHNUcmFja2lu",
            "ZxIdLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE9wdGlvbnMY0IYDIAEoCDpGChtk",
            "aXNhYmxlTWVzc2FnZVN0YXRzVHJhY2tpbmcSHy5nb29nbGUucHJvdG9idWYu",
            "TWVzc2FnZU9wdGlvbnMY0YYDIAEoCA=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Uplay.Settings.CloseBehavior), typeof(global::Uplay.Settings.LandingPage), }, new pb::Extension[] { CommonSettingsExtensions.DisableStatsTracking, CommonSettingsExtensions.DisableMessageStatsTracking }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.User), global::Uplay.Settings.User.Parser, new[]{ "Syncsavegames", "Offline", "Closebehavior", "Landingpage", "StartOnWindowsStart", "NonFriendGameInviteEnabled", "LandingpageSetByUser" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Overlay), global::Uplay.Settings.Overlay.Parser, new[]{ "Enabled", "Forceunhookgame", "FpsEnabled", "WarningEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Language), global::Uplay.Settings.Language.Parser, new[]{ "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Misc), global::Uplay.Settings.Misc.Parser, new[]{ "InstallerCachePath", "ScreenshotRootPath", "EnableScreenshotsOnAchievements", "GameInstallationPath", "EnableAutoWallPosts", "SaveScreenshotUncompressedCopy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Position), global::Uplay.Settings.Position.Parser, new[]{ "Left", "Top", "Width", "Height", "Maximized" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.ModelessPositions), global::Uplay.Settings.ModelessPositions.Parser, new[]{ "FriendsWindow", "ConversationsWindow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Masters), global::Uplay.Settings.Masters.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Hotkey), global::Uplay.Settings.Hotkey.Parser, new[]{ "KeyCode", "AltState", "ShiftState", "ControlState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Downloads), global::Uplay.Settings.Downloads.Parser, new[]{ "Limit", "LimitEnabled", "PauseOnGameLaunch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Betas), global::Uplay.Settings.Betas.Parser, new[]{ "OptIn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.AutoPatching), global::Uplay.Settings.AutoPatching.Parser, new[]{ "Enabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Spotlight), global::Uplay.Settings.Spotlight.Parser, new[]{ "Enabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Conversations), global::Uplay.Settings.Conversations.Parser, new[]{ "TaskbarTabsEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Epic), global::Uplay.Settings.Epic.Parser, new[]{ "ExchangeCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.BrandedInstaller), global::Uplay.Settings.BrandedInstaller.Parser, new[]{ "PendingProtocol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.ConnectView), global::Uplay.Settings.ConnectView.Parser, new[]{ "Enabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.SharePlay), global::Uplay.Settings.SharePlay.Parser, new[]{ "Bitrate", "DisplayOnboarding", "MouseAndKeyboardAccessAllowed", "GamepadAccessAllowed", "DisplayWizardTour", "LastTimeFeedBackWindowDisplayed", "NbBuyGameRefused", "NbFeedbackUnfilled", "Resolution", "Fps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.RemotePlay), global::Uplay.Settings.RemotePlay.Parser, new[]{ "Allowed" }, null, null, null, null)
          }));
    }
    #endregion

  }
  /// <summary>Holder for extension identifiers generated from the top level of common_settings.proto</summary>
  public static partial class CommonSettingsExtensions {
    public static readonly pb::Extension<global::Google.Protobuf.Reflection.FieldOptions, bool> DisableStatsTracking =
      new pb::Extension<global::Google.Protobuf.Reflection.FieldOptions, bool>(50000, pb::FieldCodec.ForBool(400000, false));
    public static readonly pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, bool> DisableMessageStatsTracking =
      new pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, bool>(50001, pb::FieldCodec.ForBool(400008, false));
  }

  #region Enums
  public enum CloseBehavior {
    [pbr::OriginalName("CloseBehavior_Undefined")] Undefined = 0,
    [pbr::OriginalName("CloseBehavior_Close")] Close = 1,
    [pbr::OriginalName("CloseBehavior_Minimize")] Minimize = 2,
  }

  public enum LandingPage {
    [pbr::OriginalName("LandingPageNews")] News = 0,
    [pbr::OriginalName("LandingPageGames")] Games = 1,
    [pbr::OriginalName("LandingPageLastPlayedGame")] LastPlayedGame = 2,
    [pbr::OriginalName("LandingPageUplayPlus")] UplayPlus = 3,
  }

  #endregion

  #region Messages
  public sealed partial class User : pb::IMessage<User>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User(User other) : this() {
      _hasBits0 = other._hasBits0;
      syncsavegames_ = other.syncsavegames_;
      offline_ = other.offline_;
      closebehavior_ = other.closebehavior_;
      landingpage_ = other.landingpage_;
      startOnWindowsStart_ = other.startOnWindowsStart_;
      nonFriendGameInviteEnabled_ = other.nonFriendGameInviteEnabled_;
      landingpageSetByUser_ = other.landingpageSetByUser_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "syncsavegames" field.</summary>
    public const int SyncsavegamesFieldNumber = 1;
    private readonly static bool SyncsavegamesDefaultValue = true;

    private bool syncsavegames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Syncsavegames {
      get { if ((_hasBits0 & 1) != 0) { return syncsavegames_; } else { return SyncsavegamesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        syncsavegames_ = value;
      }
    }
    /// <summary>Gets whether the "syncsavegames" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSyncsavegames {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "syncsavegames" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSyncsavegames() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "offline" field.</summary>
    public const int OfflineFieldNumber = 2;
    private readonly static bool OfflineDefaultValue = false;

    private bool offline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Offline {
      get { if ((_hasBits0 & 2) != 0) { return offline_; } else { return OfflineDefaultValue; } }
      set {
        _hasBits0 |= 2;
        offline_ = value;
      }
    }
    /// <summary>Gets whether the "offline" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOffline {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "offline" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOffline() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "closebehavior" field.</summary>
    public const int ClosebehaviorFieldNumber = 3;
    private readonly static global::Uplay.Settings.CloseBehavior ClosebehaviorDefaultValue = global::Uplay.Settings.CloseBehavior.Undefined;

    private global::Uplay.Settings.CloseBehavior closebehavior_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.CloseBehavior Closebehavior {
      get { if ((_hasBits0 & 4) != 0) { return closebehavior_; } else { return ClosebehaviorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        closebehavior_ = value;
      }
    }
    /// <summary>Gets whether the "closebehavior" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClosebehavior {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "closebehavior" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClosebehavior() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "landingpage" field.</summary>
    public const int LandingpageFieldNumber = 4;
    private readonly static global::Uplay.Settings.LandingPage LandingpageDefaultValue = global::Uplay.Settings.LandingPage.News;

    private global::Uplay.Settings.LandingPage landingpage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.LandingPage Landingpage {
      get { if ((_hasBits0 & 8) != 0) { return landingpage_; } else { return LandingpageDefaultValue; } }
      set {
        _hasBits0 |= 8;
        landingpage_ = value;
      }
    }
    /// <summary>Gets whether the "landingpage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLandingpage {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "landingpage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLandingpage() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "start_on_windows_start" field.</summary>
    public const int StartOnWindowsStartFieldNumber = 5;
    private readonly static bool StartOnWindowsStartDefaultValue = false;

    private bool startOnWindowsStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StartOnWindowsStart {
      get { if ((_hasBits0 & 16) != 0) { return startOnWindowsStart_; } else { return StartOnWindowsStartDefaultValue; } }
      set {
        _hasBits0 |= 16;
        startOnWindowsStart_ = value;
      }
    }
    /// <summary>Gets whether the "start_on_windows_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartOnWindowsStart {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "start_on_windows_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartOnWindowsStart() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "non_friend_game_invite_enabled" field.</summary>
    public const int NonFriendGameInviteEnabledFieldNumber = 6;
    private readonly static bool NonFriendGameInviteEnabledDefaultValue = true;

    private bool nonFriendGameInviteEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NonFriendGameInviteEnabled {
      get { if ((_hasBits0 & 32) != 0) { return nonFriendGameInviteEnabled_; } else { return NonFriendGameInviteEnabledDefaultValue; } }
      set {
        _hasBits0 |= 32;
        nonFriendGameInviteEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "non_friend_game_invite_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNonFriendGameInviteEnabled {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "non_friend_game_invite_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNonFriendGameInviteEnabled() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "landingpage_set_by_user" field.</summary>
    public const int LandingpageSetByUserFieldNumber = 7;
    private readonly static bool LandingpageSetByUserDefaultValue = false;

    private bool landingpageSetByUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LandingpageSetByUser {
      get { if ((_hasBits0 & 64) != 0) { return landingpageSetByUser_; } else { return LandingpageSetByUserDefaultValue; } }
      set {
        _hasBits0 |= 64;
        landingpageSetByUser_ = value;
      }
    }
    /// <summary>Gets whether the "landingpage_set_by_user" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLandingpageSetByUser {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "landingpage_set_by_user" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLandingpageSetByUser() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Syncsavegames != other.Syncsavegames) return false;
      if (Offline != other.Offline) return false;
      if (Closebehavior != other.Closebehavior) return false;
      if (Landingpage != other.Landingpage) return false;
      if (StartOnWindowsStart != other.StartOnWindowsStart) return false;
      if (NonFriendGameInviteEnabled != other.NonFriendGameInviteEnabled) return false;
      if (LandingpageSetByUser != other.LandingpageSetByUser) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSyncsavegames) hash ^= Syncsavegames.GetHashCode();
      if (HasOffline) hash ^= Offline.GetHashCode();
      if (HasClosebehavior) hash ^= Closebehavior.GetHashCode();
      if (HasLandingpage) hash ^= Landingpage.GetHashCode();
      if (HasStartOnWindowsStart) hash ^= StartOnWindowsStart.GetHashCode();
      if (HasNonFriendGameInviteEnabled) hash ^= NonFriendGameInviteEnabled.GetHashCode();
      if (HasLandingpageSetByUser) hash ^= LandingpageSetByUser.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSyncsavegames) {
        output.WriteRawTag(8);
        output.WriteBool(Syncsavegames);
      }
      if (HasOffline) {
        output.WriteRawTag(16);
        output.WriteBool(Offline);
      }
      if (HasClosebehavior) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Closebehavior);
      }
      if (HasLandingpage) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Landingpage);
      }
      if (HasStartOnWindowsStart) {
        output.WriteRawTag(40);
        output.WriteBool(StartOnWindowsStart);
      }
      if (HasNonFriendGameInviteEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(NonFriendGameInviteEnabled);
      }
      if (HasLandingpageSetByUser) {
        output.WriteRawTag(56);
        output.WriteBool(LandingpageSetByUser);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSyncsavegames) {
        output.WriteRawTag(8);
        output.WriteBool(Syncsavegames);
      }
      if (HasOffline) {
        output.WriteRawTag(16);
        output.WriteBool(Offline);
      }
      if (HasClosebehavior) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Closebehavior);
      }
      if (HasLandingpage) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Landingpage);
      }
      if (HasStartOnWindowsStart) {
        output.WriteRawTag(40);
        output.WriteBool(StartOnWindowsStart);
      }
      if (HasNonFriendGameInviteEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(NonFriendGameInviteEnabled);
      }
      if (HasLandingpageSetByUser) {
        output.WriteRawTag(56);
        output.WriteBool(LandingpageSetByUser);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSyncsavegames) {
        size += 1 + 1;
      }
      if (HasOffline) {
        size += 1 + 1;
      }
      if (HasClosebehavior) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Closebehavior);
      }
      if (HasLandingpage) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Landingpage);
      }
      if (HasStartOnWindowsStart) {
        size += 1 + 1;
      }
      if (HasNonFriendGameInviteEnabled) {
        size += 1 + 1;
      }
      if (HasLandingpageSetByUser) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.HasSyncsavegames) {
        Syncsavegames = other.Syncsavegames;
      }
      if (other.HasOffline) {
        Offline = other.Offline;
      }
      if (other.HasClosebehavior) {
        Closebehavior = other.Closebehavior;
      }
      if (other.HasLandingpage) {
        Landingpage = other.Landingpage;
      }
      if (other.HasStartOnWindowsStart) {
        StartOnWindowsStart = other.StartOnWindowsStart;
      }
      if (other.HasNonFriendGameInviteEnabled) {
        NonFriendGameInviteEnabled = other.NonFriendGameInviteEnabled;
      }
      if (other.HasLandingpageSetByUser) {
        LandingpageSetByUser = other.LandingpageSetByUser;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Syncsavegames = input.ReadBool();
            break;
          }
          case 16: {
            Offline = input.ReadBool();
            break;
          }
          case 24: {
            Closebehavior = (global::Uplay.Settings.CloseBehavior) input.ReadEnum();
            break;
          }
          case 32: {
            Landingpage = (global::Uplay.Settings.LandingPage) input.ReadEnum();
            break;
          }
          case 40: {
            StartOnWindowsStart = input.ReadBool();
            break;
          }
          case 48: {
            NonFriendGameInviteEnabled = input.ReadBool();
            break;
          }
          case 56: {
            LandingpageSetByUser = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Syncsavegames = input.ReadBool();
            break;
          }
          case 16: {
            Offline = input.ReadBool();
            break;
          }
          case 24: {
            Closebehavior = (global::Uplay.Settings.CloseBehavior) input.ReadEnum();
            break;
          }
          case 32: {
            Landingpage = (global::Uplay.Settings.LandingPage) input.ReadEnum();
            break;
          }
          case 40: {
            StartOnWindowsStart = input.ReadBool();
            break;
          }
          case 48: {
            NonFriendGameInviteEnabled = input.ReadBool();
            break;
          }
          case 56: {
            LandingpageSetByUser = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Overlay : pb::IMessage<Overlay>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Overlay> _parser = new pb::MessageParser<Overlay>(() => new Overlay());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Overlay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Overlay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Overlay(Overlay other) : this() {
      _hasBits0 = other._hasBits0;
      enabled_ = other.enabled_;
      forceunhookgame_ = other.forceunhookgame_;
      fpsEnabled_ = other.fpsEnabled_;
      warningEnabled_ = other.warningEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Overlay Clone() {
      return new Overlay(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private readonly static bool EnabledDefaultValue = true;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "forceunhookgame" field.</summary>
    public const int ForceunhookgameFieldNumber = 2;
    private readonly static bool ForceunhookgameDefaultValue = false;

    private bool forceunhookgame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Forceunhookgame {
      get { if ((_hasBits0 & 2) != 0) { return forceunhookgame_; } else { return ForceunhookgameDefaultValue; } }
      set {
        _hasBits0 |= 2;
        forceunhookgame_ = value;
      }
    }
    /// <summary>Gets whether the "forceunhookgame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForceunhookgame {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "forceunhookgame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForceunhookgame() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "fps_enabled" field.</summary>
    public const int FpsEnabledFieldNumber = 3;
    private readonly static bool FpsEnabledDefaultValue = false;

    private bool fpsEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FpsEnabled {
      get { if ((_hasBits0 & 4) != 0) { return fpsEnabled_; } else { return FpsEnabledDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fpsEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "fps_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFpsEnabled {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fps_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFpsEnabled() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "warning_enabled" field.</summary>
    public const int WarningEnabledFieldNumber = 4;
    private readonly static bool WarningEnabledDefaultValue = true;

    private bool warningEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WarningEnabled {
      get { if ((_hasBits0 & 8) != 0) { return warningEnabled_; } else { return WarningEnabledDefaultValue; } }
      set {
        _hasBits0 |= 8;
        warningEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "warning_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWarningEnabled {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "warning_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWarningEnabled() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Overlay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Overlay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      if (Forceunhookgame != other.Forceunhookgame) return false;
      if (FpsEnabled != other.FpsEnabled) return false;
      if (WarningEnabled != other.WarningEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (HasForceunhookgame) hash ^= Forceunhookgame.GetHashCode();
      if (HasFpsEnabled) hash ^= FpsEnabled.GetHashCode();
      if (HasWarningEnabled) hash ^= WarningEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (HasForceunhookgame) {
        output.WriteRawTag(16);
        output.WriteBool(Forceunhookgame);
      }
      if (HasFpsEnabled) {
        output.WriteRawTag(24);
        output.WriteBool(FpsEnabled);
      }
      if (HasWarningEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(WarningEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (HasForceunhookgame) {
        output.WriteRawTag(16);
        output.WriteBool(Forceunhookgame);
      }
      if (HasFpsEnabled) {
        output.WriteRawTag(24);
        output.WriteBool(FpsEnabled);
      }
      if (HasWarningEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(WarningEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (HasForceunhookgame) {
        size += 1 + 1;
      }
      if (HasFpsEnabled) {
        size += 1 + 1;
      }
      if (HasWarningEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Overlay other) {
      if (other == null) {
        return;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      if (other.HasForceunhookgame) {
        Forceunhookgame = other.Forceunhookgame;
      }
      if (other.HasFpsEnabled) {
        FpsEnabled = other.FpsEnabled;
      }
      if (other.HasWarningEnabled) {
        WarningEnabled = other.WarningEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 16: {
            Forceunhookgame = input.ReadBool();
            break;
          }
          case 24: {
            FpsEnabled = input.ReadBool();
            break;
          }
          case 32: {
            WarningEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 16: {
            Forceunhookgame = input.ReadBool();
            break;
          }
          case 24: {
            FpsEnabled = input.ReadBool();
            break;
          }
          case 32: {
            WarningEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Language : pb::IMessage<Language>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Language> _parser = new pb::MessageParser<Language>(() => new Language());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Language> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Language() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Language(Language other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Language Clone() {
      return new Language(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static string CodeDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("ZW4tVVM="), 0, 5);

    private string code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      code_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Language);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Language other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Language other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Misc : pb::IMessage<Misc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Misc> _parser = new pb::MessageParser<Misc>(() => new Misc());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Misc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Misc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Misc(Misc other) : this() {
      _hasBits0 = other._hasBits0;
      installerCachePath_ = other.installerCachePath_;
      screenshotRootPath_ = other.screenshotRootPath_;
      enableScreenshotsOnAchievements_ = other.enableScreenshotsOnAchievements_;
      gameInstallationPath_ = other.gameInstallationPath_;
      enableAutoWallPosts_ = other.enableAutoWallPosts_;
      saveScreenshotUncompressedCopy_ = other.saveScreenshotUncompressedCopy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Misc Clone() {
      return new Misc(this);
    }

    /// <summary>Field number for the "installer_cache_path" field.</summary>
    public const int InstallerCachePathFieldNumber = 1;
    private readonly static string InstallerCachePathDefaultValue = "";

    private string installerCachePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstallerCachePath {
      get { return installerCachePath_ ?? InstallerCachePathDefaultValue; }
      set {
        installerCachePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "installer_cache_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstallerCachePath {
      get { return installerCachePath_ != null; }
    }
    /// <summary>Clears the value of the "installer_cache_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstallerCachePath() {
      installerCachePath_ = null;
    }

    /// <summary>Field number for the "screenshot_root_path" field.</summary>
    public const int ScreenshotRootPathFieldNumber = 2;
    private readonly static string ScreenshotRootPathDefaultValue = "";

    private string screenshotRootPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ScreenshotRootPath {
      get { return screenshotRootPath_ ?? ScreenshotRootPathDefaultValue; }
      set {
        screenshotRootPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "screenshot_root_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScreenshotRootPath {
      get { return screenshotRootPath_ != null; }
    }
    /// <summary>Clears the value of the "screenshot_root_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScreenshotRootPath() {
      screenshotRootPath_ = null;
    }

    /// <summary>Field number for the "enable_screenshots_on_achievements" field.</summary>
    public const int EnableScreenshotsOnAchievementsFieldNumber = 3;
    private readonly static bool EnableScreenshotsOnAchievementsDefaultValue = false;

    private bool enableScreenshotsOnAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableScreenshotsOnAchievements {
      get { if ((_hasBits0 & 1) != 0) { return enableScreenshotsOnAchievements_; } else { return EnableScreenshotsOnAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enableScreenshotsOnAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "enable_screenshots_on_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableScreenshotsOnAchievements {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enable_screenshots_on_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableScreenshotsOnAchievements() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_installation_path" field.</summary>
    public const int GameInstallationPathFieldNumber = 4;
    private readonly static string GameInstallationPathDefaultValue = "";

    private string gameInstallationPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameInstallationPath {
      get { return gameInstallationPath_ ?? GameInstallationPathDefaultValue; }
      set {
        gameInstallationPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_installation_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameInstallationPath {
      get { return gameInstallationPath_ != null; }
    }
    /// <summary>Clears the value of the "game_installation_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameInstallationPath() {
      gameInstallationPath_ = null;
    }

    /// <summary>Field number for the "enable_auto_wall_posts" field.</summary>
    public const int EnableAutoWallPostsFieldNumber = 5;
    private readonly static bool EnableAutoWallPostsDefaultValue = true;

    private bool enableAutoWallPosts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableAutoWallPosts {
      get { if ((_hasBits0 & 2) != 0) { return enableAutoWallPosts_; } else { return EnableAutoWallPostsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        enableAutoWallPosts_ = value;
      }
    }
    /// <summary>Gets whether the "enable_auto_wall_posts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableAutoWallPosts {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "enable_auto_wall_posts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableAutoWallPosts() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "save_screenshot_uncompressed_copy" field.</summary>
    public const int SaveScreenshotUncompressedCopyFieldNumber = 6;
    private readonly static bool SaveScreenshotUncompressedCopyDefaultValue = false;

    private bool saveScreenshotUncompressedCopy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SaveScreenshotUncompressedCopy {
      get { if ((_hasBits0 & 4) != 0) { return saveScreenshotUncompressedCopy_; } else { return SaveScreenshotUncompressedCopyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        saveScreenshotUncompressedCopy_ = value;
      }
    }
    /// <summary>Gets whether the "save_screenshot_uncompressed_copy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSaveScreenshotUncompressedCopy {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "save_screenshot_uncompressed_copy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSaveScreenshotUncompressedCopy() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Misc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Misc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstallerCachePath != other.InstallerCachePath) return false;
      if (ScreenshotRootPath != other.ScreenshotRootPath) return false;
      if (EnableScreenshotsOnAchievements != other.EnableScreenshotsOnAchievements) return false;
      if (GameInstallationPath != other.GameInstallationPath) return false;
      if (EnableAutoWallPosts != other.EnableAutoWallPosts) return false;
      if (SaveScreenshotUncompressedCopy != other.SaveScreenshotUncompressedCopy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInstallerCachePath) hash ^= InstallerCachePath.GetHashCode();
      if (HasScreenshotRootPath) hash ^= ScreenshotRootPath.GetHashCode();
      if (HasEnableScreenshotsOnAchievements) hash ^= EnableScreenshotsOnAchievements.GetHashCode();
      if (HasGameInstallationPath) hash ^= GameInstallationPath.GetHashCode();
      if (HasEnableAutoWallPosts) hash ^= EnableAutoWallPosts.GetHashCode();
      if (HasSaveScreenshotUncompressedCopy) hash ^= SaveScreenshotUncompressedCopy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInstallerCachePath) {
        output.WriteRawTag(10);
        output.WriteString(InstallerCachePath);
      }
      if (HasScreenshotRootPath) {
        output.WriteRawTag(18);
        output.WriteString(ScreenshotRootPath);
      }
      if (HasEnableScreenshotsOnAchievements) {
        output.WriteRawTag(24);
        output.WriteBool(EnableScreenshotsOnAchievements);
      }
      if (HasGameInstallationPath) {
        output.WriteRawTag(34);
        output.WriteString(GameInstallationPath);
      }
      if (HasEnableAutoWallPosts) {
        output.WriteRawTag(40);
        output.WriteBool(EnableAutoWallPosts);
      }
      if (HasSaveScreenshotUncompressedCopy) {
        output.WriteRawTag(48);
        output.WriteBool(SaveScreenshotUncompressedCopy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInstallerCachePath) {
        output.WriteRawTag(10);
        output.WriteString(InstallerCachePath);
      }
      if (HasScreenshotRootPath) {
        output.WriteRawTag(18);
        output.WriteString(ScreenshotRootPath);
      }
      if (HasEnableScreenshotsOnAchievements) {
        output.WriteRawTag(24);
        output.WriteBool(EnableScreenshotsOnAchievements);
      }
      if (HasGameInstallationPath) {
        output.WriteRawTag(34);
        output.WriteString(GameInstallationPath);
      }
      if (HasEnableAutoWallPosts) {
        output.WriteRawTag(40);
        output.WriteBool(EnableAutoWallPosts);
      }
      if (HasSaveScreenshotUncompressedCopy) {
        output.WriteRawTag(48);
        output.WriteBool(SaveScreenshotUncompressedCopy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInstallerCachePath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstallerCachePath);
      }
      if (HasScreenshotRootPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScreenshotRootPath);
      }
      if (HasEnableScreenshotsOnAchievements) {
        size += 1 + 1;
      }
      if (HasGameInstallationPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameInstallationPath);
      }
      if (HasEnableAutoWallPosts) {
        size += 1 + 1;
      }
      if (HasSaveScreenshotUncompressedCopy) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Misc other) {
      if (other == null) {
        return;
      }
      if (other.HasInstallerCachePath) {
        InstallerCachePath = other.InstallerCachePath;
      }
      if (other.HasScreenshotRootPath) {
        ScreenshotRootPath = other.ScreenshotRootPath;
      }
      if (other.HasEnableScreenshotsOnAchievements) {
        EnableScreenshotsOnAchievements = other.EnableScreenshotsOnAchievements;
      }
      if (other.HasGameInstallationPath) {
        GameInstallationPath = other.GameInstallationPath;
      }
      if (other.HasEnableAutoWallPosts) {
        EnableAutoWallPosts = other.EnableAutoWallPosts;
      }
      if (other.HasSaveScreenshotUncompressedCopy) {
        SaveScreenshotUncompressedCopy = other.SaveScreenshotUncompressedCopy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InstallerCachePath = input.ReadString();
            break;
          }
          case 18: {
            ScreenshotRootPath = input.ReadString();
            break;
          }
          case 24: {
            EnableScreenshotsOnAchievements = input.ReadBool();
            break;
          }
          case 34: {
            GameInstallationPath = input.ReadString();
            break;
          }
          case 40: {
            EnableAutoWallPosts = input.ReadBool();
            break;
          }
          case 48: {
            SaveScreenshotUncompressedCopy = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InstallerCachePath = input.ReadString();
            break;
          }
          case 18: {
            ScreenshotRootPath = input.ReadString();
            break;
          }
          case 24: {
            EnableScreenshotsOnAchievements = input.ReadBool();
            break;
          }
          case 34: {
            GameInstallationPath = input.ReadString();
            break;
          }
          case 40: {
            EnableAutoWallPosts = input.ReadBool();
            break;
          }
          case 48: {
            SaveScreenshotUncompressedCopy = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position(Position other) : this() {
      _hasBits0 = other._hasBits0;
      left_ = other.left_;
      top_ = other.top_;
      width_ = other.width_;
      height_ = other.height_;
      maximized_ = other.maximized_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 1;
    private readonly static uint LeftDefaultValue = 0;

    private uint left_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Left {
      get { if ((_hasBits0 & 1) != 0) { return left_; } else { return LeftDefaultValue; } }
      set {
        _hasBits0 |= 1;
        left_ = value;
      }
    }
    /// <summary>Gets whether the "left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeft {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeft() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 2;
    private readonly static uint TopDefaultValue = 0;

    private uint top_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Top {
      get { if ((_hasBits0 & 2) != 0) { return top_; } else { return TopDefaultValue; } }
      set {
        _hasBits0 |= 2;
        top_ = value;
      }
    }
    /// <summary>Gets whether the "top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTop {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTop() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 4) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 8) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 8;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "maximized" field.</summary>
    public const int MaximizedFieldNumber = 5;
    private readonly static bool MaximizedDefaultValue = false;

    private bool maximized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Maximized {
      get { if ((_hasBits0 & 16) != 0) { return maximized_; } else { return MaximizedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        maximized_ = value;
      }
    }
    /// <summary>Gets whether the "maximized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaximized {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "maximized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaximized() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Left != other.Left) return false;
      if (Top != other.Top) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Maximized != other.Maximized) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeft) hash ^= Left.GetHashCode();
      if (HasTop) hash ^= Top.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasMaximized) hash ^= Maximized.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteUInt32(Left);
      }
      if (HasTop) {
        output.WriteRawTag(16);
        output.WriteUInt32(Top);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (HasMaximized) {
        output.WriteRawTag(40);
        output.WriteBool(Maximized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteUInt32(Left);
      }
      if (HasTop) {
        output.WriteRawTag(16);
        output.WriteUInt32(Top);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (HasMaximized) {
        output.WriteRawTag(40);
        output.WriteBool(Maximized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeft) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Left);
      }
      if (HasTop) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Top);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (HasMaximized) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.HasLeft) {
        Left = other.Left;
      }
      if (other.HasTop) {
        Top = other.Top;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasMaximized) {
        Maximized = other.Maximized;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Left = input.ReadUInt32();
            break;
          }
          case 16: {
            Top = input.ReadUInt32();
            break;
          }
          case 24: {
            Width = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            Maximized = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Left = input.ReadUInt32();
            break;
          }
          case 16: {
            Top = input.ReadUInt32();
            break;
          }
          case 24: {
            Width = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            Maximized = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ModelessPositions : pb::IMessage<ModelessPositions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModelessPositions> _parser = new pb::MessageParser<ModelessPositions>(() => new ModelessPositions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ModelessPositions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModelessPositions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModelessPositions(ModelessPositions other) : this() {
      friendsWindow_ = other.friendsWindow_ != null ? other.friendsWindow_.Clone() : null;
      conversationsWindow_ = other.conversationsWindow_ != null ? other.conversationsWindow_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModelessPositions Clone() {
      return new ModelessPositions(this);
    }

    /// <summary>Field number for the "friends_window" field.</summary>
    public const int FriendsWindowFieldNumber = 1;
    private global::Uplay.Settings.Position friendsWindow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Position FriendsWindow {
      get { return friendsWindow_; }
      set {
        friendsWindow_ = value;
      }
    }

    /// <summary>Field number for the "conversations_window" field.</summary>
    public const int ConversationsWindowFieldNumber = 2;
    private global::Uplay.Settings.Position conversationsWindow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Position ConversationsWindow {
      get { return conversationsWindow_; }
      set {
        conversationsWindow_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ModelessPositions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ModelessPositions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FriendsWindow, other.FriendsWindow)) return false;
      if (!object.Equals(ConversationsWindow, other.ConversationsWindow)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (friendsWindow_ != null) hash ^= FriendsWindow.GetHashCode();
      if (conversationsWindow_ != null) hash ^= ConversationsWindow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (friendsWindow_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FriendsWindow);
      }
      if (conversationsWindow_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationsWindow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (friendsWindow_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FriendsWindow);
      }
      if (conversationsWindow_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationsWindow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (friendsWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendsWindow);
      }
      if (conversationsWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationsWindow);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ModelessPositions other) {
      if (other == null) {
        return;
      }
      if (other.friendsWindow_ != null) {
        if (friendsWindow_ == null) {
          FriendsWindow = new global::Uplay.Settings.Position();
        }
        FriendsWindow.MergeFrom(other.FriendsWindow);
      }
      if (other.conversationsWindow_ != null) {
        if (conversationsWindow_ == null) {
          ConversationsWindow = new global::Uplay.Settings.Position();
        }
        ConversationsWindow.MergeFrom(other.ConversationsWindow);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (friendsWindow_ == null) {
              FriendsWindow = new global::Uplay.Settings.Position();
            }
            input.ReadMessage(FriendsWindow);
            break;
          }
          case 18: {
            if (conversationsWindow_ == null) {
              ConversationsWindow = new global::Uplay.Settings.Position();
            }
            input.ReadMessage(ConversationsWindow);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (friendsWindow_ == null) {
              FriendsWindow = new global::Uplay.Settings.Position();
            }
            input.ReadMessage(FriendsWindow);
            break;
          }
          case 18: {
            if (conversationsWindow_ == null) {
              ConversationsWindow = new global::Uplay.Settings.Position();
            }
            input.ReadMessage(ConversationsWindow);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Masters : pb::IMessage<Masters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Masters> _parser = new pb::MessageParser<Masters>(() => new Masters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Masters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Masters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Masters(Masters other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Masters Clone() {
      return new Masters(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Masters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Masters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Masters other) {
      if (other == null) {
        return;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Hotkey : pb::IMessage<Hotkey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Hotkey> _parser = new pb::MessageParser<Hotkey>(() => new Hotkey());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Hotkey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hotkey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hotkey(Hotkey other) : this() {
      _hasBits0 = other._hasBits0;
      keyCode_ = other.keyCode_;
      altState_ = other.altState_;
      shiftState_ = other.shiftState_;
      controlState_ = other.controlState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hotkey Clone() {
      return new Hotkey(this);
    }

    /// <summary>Field number for the "keyCode" field.</summary>
    public const int KeyCodeFieldNumber = 1;
    private readonly static uint KeyCodeDefaultValue = 0;

    private uint keyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KeyCode {
      get { if ((_hasBits0 & 1) != 0) { return keyCode_; } else { return KeyCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        keyCode_ = value;
      }
    }
    /// <summary>Gets whether the "keyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKeyCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "keyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKeyCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "altState" field.</summary>
    public const int AltStateFieldNumber = 2;
    private readonly static bool AltStateDefaultValue = false;

    private bool altState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AltState {
      get { if ((_hasBits0 & 2) != 0) { return altState_; } else { return AltStateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        altState_ = value;
      }
    }
    /// <summary>Gets whether the "altState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAltState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "altState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAltState() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "shiftState" field.</summary>
    public const int ShiftStateFieldNumber = 3;
    private readonly static bool ShiftStateDefaultValue = false;

    private bool shiftState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShiftState {
      get { if ((_hasBits0 & 4) != 0) { return shiftState_; } else { return ShiftStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        shiftState_ = value;
      }
    }
    /// <summary>Gets whether the "shiftState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShiftState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "shiftState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShiftState() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "controlState" field.</summary>
    public const int ControlStateFieldNumber = 4;
    private readonly static bool ControlStateDefaultValue = false;

    private bool controlState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ControlState {
      get { if ((_hasBits0 & 8) != 0) { return controlState_; } else { return ControlStateDefaultValue; } }
      set {
        _hasBits0 |= 8;
        controlState_ = value;
      }
    }
    /// <summary>Gets whether the "controlState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControlState {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "controlState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControlState() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Hotkey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Hotkey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KeyCode != other.KeyCode) return false;
      if (AltState != other.AltState) return false;
      if (ShiftState != other.ShiftState) return false;
      if (ControlState != other.ControlState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasKeyCode) hash ^= KeyCode.GetHashCode();
      if (HasAltState) hash ^= AltState.GetHashCode();
      if (HasShiftState) hash ^= ShiftState.GetHashCode();
      if (HasControlState) hash ^= ControlState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasKeyCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(KeyCode);
      }
      if (HasAltState) {
        output.WriteRawTag(16);
        output.WriteBool(AltState);
      }
      if (HasShiftState) {
        output.WriteRawTag(24);
        output.WriteBool(ShiftState);
      }
      if (HasControlState) {
        output.WriteRawTag(32);
        output.WriteBool(ControlState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasKeyCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(KeyCode);
      }
      if (HasAltState) {
        output.WriteRawTag(16);
        output.WriteBool(AltState);
      }
      if (HasShiftState) {
        output.WriteRawTag(24);
        output.WriteBool(ShiftState);
      }
      if (HasControlState) {
        output.WriteRawTag(32);
        output.WriteBool(ControlState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasKeyCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KeyCode);
      }
      if (HasAltState) {
        size += 1 + 1;
      }
      if (HasShiftState) {
        size += 1 + 1;
      }
      if (HasControlState) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Hotkey other) {
      if (other == null) {
        return;
      }
      if (other.HasKeyCode) {
        KeyCode = other.KeyCode;
      }
      if (other.HasAltState) {
        AltState = other.AltState;
      }
      if (other.HasShiftState) {
        ShiftState = other.ShiftState;
      }
      if (other.HasControlState) {
        ControlState = other.ControlState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            KeyCode = input.ReadUInt32();
            break;
          }
          case 16: {
            AltState = input.ReadBool();
            break;
          }
          case 24: {
            ShiftState = input.ReadBool();
            break;
          }
          case 32: {
            ControlState = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            KeyCode = input.ReadUInt32();
            break;
          }
          case 16: {
            AltState = input.ReadBool();
            break;
          }
          case 24: {
            ShiftState = input.ReadBool();
            break;
          }
          case 32: {
            ControlState = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Downloads : pb::IMessage<Downloads>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Downloads> _parser = new pb::MessageParser<Downloads>(() => new Downloads());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Downloads> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downloads() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downloads(Downloads other) : this() {
      _hasBits0 = other._hasBits0;
      limit_ = other.limit_;
      limitEnabled_ = other.limitEnabled_;
      pauseOnGameLaunch_ = other.pauseOnGameLaunch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downloads Clone() {
      return new Downloads(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private readonly static ulong LimitDefaultValue = 10000000UL;

    private ulong limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "limitEnabled" field.</summary>
    public const int LimitEnabledFieldNumber = 2;
    private readonly static bool LimitEnabledDefaultValue = false;

    private bool limitEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitEnabled {
      get { if ((_hasBits0 & 2) != 0) { return limitEnabled_; } else { return LimitEnabledDefaultValue; } }
      set {
        _hasBits0 |= 2;
        limitEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "limitEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitEnabled {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "limitEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitEnabled() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pauseOnGameLaunch" field.</summary>
    public const int PauseOnGameLaunchFieldNumber = 3;
    private readonly static bool PauseOnGameLaunchDefaultValue = true;

    private bool pauseOnGameLaunch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PauseOnGameLaunch {
      get { if ((_hasBits0 & 4) != 0) { return pauseOnGameLaunch_; } else { return PauseOnGameLaunchDefaultValue; } }
      set {
        _hasBits0 |= 4;
        pauseOnGameLaunch_ = value;
      }
    }
    /// <summary>Gets whether the "pauseOnGameLaunch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPauseOnGameLaunch {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pauseOnGameLaunch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPauseOnGameLaunch() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Downloads);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Downloads other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (LimitEnabled != other.LimitEnabled) return false;
      if (PauseOnGameLaunch != other.PauseOnGameLaunch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasLimitEnabled) hash ^= LimitEnabled.GetHashCode();
      if (HasPauseOnGameLaunch) hash ^= PauseOnGameLaunch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLimit) {
        output.WriteRawTag(8);
        output.WriteUInt64(Limit);
      }
      if (HasLimitEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(LimitEnabled);
      }
      if (HasPauseOnGameLaunch) {
        output.WriteRawTag(24);
        output.WriteBool(PauseOnGameLaunch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLimit) {
        output.WriteRawTag(8);
        output.WriteUInt64(Limit);
      }
      if (HasLimitEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(LimitEnabled);
      }
      if (HasPauseOnGameLaunch) {
        output.WriteRawTag(24);
        output.WriteBool(PauseOnGameLaunch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (HasLimitEnabled) {
        size += 1 + 1;
      }
      if (HasPauseOnGameLaunch) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Downloads other) {
      if (other == null) {
        return;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasLimitEnabled) {
        LimitEnabled = other.LimitEnabled;
      }
      if (other.HasPauseOnGameLaunch) {
        PauseOnGameLaunch = other.PauseOnGameLaunch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadUInt64();
            break;
          }
          case 16: {
            LimitEnabled = input.ReadBool();
            break;
          }
          case 24: {
            PauseOnGameLaunch = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadUInt64();
            break;
          }
          case 16: {
            LimitEnabled = input.ReadBool();
            break;
          }
          case 24: {
            PauseOnGameLaunch = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Betas : pb::IMessage<Betas>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Betas> _parser = new pb::MessageParser<Betas>(() => new Betas());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Betas> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Betas() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Betas(Betas other) : this() {
      _hasBits0 = other._hasBits0;
      optIn_ = other.optIn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Betas Clone() {
      return new Betas(this);
    }

    /// <summary>Field number for the "optIn" field.</summary>
    public const int OptInFieldNumber = 1;
    private readonly static bool OptInDefaultValue = false;

    private bool optIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OptIn {
      get { if ((_hasBits0 & 1) != 0) { return optIn_; } else { return OptInDefaultValue; } }
      set {
        _hasBits0 |= 1;
        optIn_ = value;
      }
    }
    /// <summary>Gets whether the "optIn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOptIn {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "optIn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptIn() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Betas);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Betas other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OptIn != other.OptIn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOptIn) hash ^= OptIn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOptIn) {
        output.WriteRawTag(8);
        output.WriteBool(OptIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOptIn) {
        output.WriteRawTag(8);
        output.WriteBool(OptIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOptIn) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Betas other) {
      if (other == null) {
        return;
      }
      if (other.HasOptIn) {
        OptIn = other.OptIn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OptIn = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OptIn = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AutoPatching : pb::IMessage<AutoPatching>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AutoPatching> _parser = new pb::MessageParser<AutoPatching>(() => new AutoPatching());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AutoPatching> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoPatching() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoPatching(AutoPatching other) : this() {
      _hasBits0 = other._hasBits0;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoPatching Clone() {
      return new AutoPatching(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private readonly static bool EnabledDefaultValue = true;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AutoPatching);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AutoPatching other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AutoPatching other) {
      if (other == null) {
        return;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Spotlight : pb::IMessage<Spotlight>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Spotlight> _parser = new pb::MessageParser<Spotlight>(() => new Spotlight());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Spotlight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spotlight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spotlight(Spotlight other) : this() {
      _hasBits0 = other._hasBits0;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spotlight Clone() {
      return new Spotlight(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private readonly static bool EnabledDefaultValue = true;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Spotlight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Spotlight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Spotlight other) {
      if (other == null) {
        return;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Conversations : pb::IMessage<Conversations>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Conversations> _parser = new pb::MessageParser<Conversations>(() => new Conversations());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Conversations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Conversations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Conversations(Conversations other) : this() {
      _hasBits0 = other._hasBits0;
      taskbarTabsEnabled_ = other.taskbarTabsEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Conversations Clone() {
      return new Conversations(this);
    }

    /// <summary>Field number for the "taskbarTabsEnabled" field.</summary>
    public const int TaskbarTabsEnabledFieldNumber = 1;
    private readonly static bool TaskbarTabsEnabledDefaultValue = false;

    private bool taskbarTabsEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TaskbarTabsEnabled {
      get { if ((_hasBits0 & 1) != 0) { return taskbarTabsEnabled_; } else { return TaskbarTabsEnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        taskbarTabsEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "taskbarTabsEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTaskbarTabsEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "taskbarTabsEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskbarTabsEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Conversations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Conversations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskbarTabsEnabled != other.TaskbarTabsEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTaskbarTabsEnabled) hash ^= TaskbarTabsEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTaskbarTabsEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(TaskbarTabsEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTaskbarTabsEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(TaskbarTabsEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTaskbarTabsEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Conversations other) {
      if (other == null) {
        return;
      }
      if (other.HasTaskbarTabsEnabled) {
        TaskbarTabsEnabled = other.TaskbarTabsEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskbarTabsEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TaskbarTabsEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Epic : pb::IMessage<Epic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Epic> _parser = new pb::MessageParser<Epic>(() => new Epic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Epic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Epic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Epic(Epic other) : this() {
      exchangeCode_ = other.exchangeCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Epic Clone() {
      return new Epic(this);
    }

    /// <summary>Field number for the "exchangeCode" field.</summary>
    public const int ExchangeCodeFieldNumber = 1;
    private readonly static string ExchangeCodeDefaultValue = "";

    private string exchangeCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExchangeCode {
      get { return exchangeCode_ ?? ExchangeCodeDefaultValue; }
      set {
        exchangeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "exchangeCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExchangeCode {
      get { return exchangeCode_ != null; }
    }
    /// <summary>Clears the value of the "exchangeCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExchangeCode() {
      exchangeCode_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Epic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Epic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExchangeCode != other.ExchangeCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasExchangeCode) hash ^= ExchangeCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasExchangeCode) {
        output.WriteRawTag(10);
        output.WriteString(ExchangeCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasExchangeCode) {
        output.WriteRawTag(10);
        output.WriteString(ExchangeCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasExchangeCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExchangeCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Epic other) {
      if (other == null) {
        return;
      }
      if (other.HasExchangeCode) {
        ExchangeCode = other.ExchangeCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExchangeCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ExchangeCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BrandedInstaller : pb::IMessage<BrandedInstaller>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BrandedInstaller> _parser = new pb::MessageParser<BrandedInstaller>(() => new BrandedInstaller());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BrandedInstaller> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrandedInstaller() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrandedInstaller(BrandedInstaller other) : this() {
      pendingProtocol_ = other.pendingProtocol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrandedInstaller Clone() {
      return new BrandedInstaller(this);
    }

    /// <summary>Field number for the "pending_protocol" field.</summary>
    public const int PendingProtocolFieldNumber = 1;
    private readonly static string PendingProtocolDefaultValue = "";

    private string pendingProtocol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PendingProtocol {
      get { return pendingProtocol_ ?? PendingProtocolDefaultValue; }
      set {
        pendingProtocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pending_protocol" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPendingProtocol {
      get { return pendingProtocol_ != null; }
    }
    /// <summary>Clears the value of the "pending_protocol" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPendingProtocol() {
      pendingProtocol_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BrandedInstaller);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BrandedInstaller other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PendingProtocol != other.PendingProtocol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPendingProtocol) hash ^= PendingProtocol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPendingProtocol) {
        output.WriteRawTag(10);
        output.WriteString(PendingProtocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPendingProtocol) {
        output.WriteRawTag(10);
        output.WriteString(PendingProtocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPendingProtocol) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PendingProtocol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BrandedInstaller other) {
      if (other == null) {
        return;
      }
      if (other.HasPendingProtocol) {
        PendingProtocol = other.PendingProtocol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PendingProtocol = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PendingProtocol = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConnectView : pb::IMessage<ConnectView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectView> _parser = new pb::MessageParser<ConnectView>(() => new ConnectView());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConnectView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectView(ConnectView other) : this() {
      _hasBits0 = other._hasBits0;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConnectView Clone() {
      return new ConnectView(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private readonly static bool EnabledDefaultValue = false;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConnectView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConnectView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConnectView other) {
      if (other == null) {
        return;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharePlay : pb::IMessage<SharePlay>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharePlay> _parser = new pb::MessageParser<SharePlay>(() => new SharePlay());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SharePlay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlay(SharePlay other) : this() {
      _hasBits0 = other._hasBits0;
      bitrate_ = other.bitrate_;
      displayOnboarding_ = other.displayOnboarding_;
      mouseAndKeyboardAccessAllowed_ = other.mouseAndKeyboardAccessAllowed_;
      gamepadAccessAllowed_ = other.gamepadAccessAllowed_;
      displayWizardTour_ = other.displayWizardTour_;
      lastTimeFeedBackWindowDisplayed_ = other.lastTimeFeedBackWindowDisplayed_;
      nbBuyGameRefused_ = other.nbBuyGameRefused_;
      nbFeedbackUnfilled_ = other.nbFeedbackUnfilled_;
      resolution_ = other.resolution_;
      fps_ = other.fps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlay Clone() {
      return new SharePlay(this);
    }

    /// <summary>Field number for the "bitrate" field.</summary>
    public const int BitrateFieldNumber = 1;
    private readonly static uint BitrateDefaultValue = 20;

    private uint bitrate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bitrate {
      get { if ((_hasBits0 & 1) != 0) { return bitrate_; } else { return BitrateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bitrate_ = value;
      }
    }
    /// <summary>Gets whether the "bitrate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBitrate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bitrate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBitrate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "displayOnboarding" field.</summary>
    public const int DisplayOnboardingFieldNumber = 2;
    private readonly static bool DisplayOnboardingDefaultValue = true;

    private bool displayOnboarding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisplayOnboarding {
      get { if ((_hasBits0 & 2) != 0) { return displayOnboarding_; } else { return DisplayOnboardingDefaultValue; } }
      set {
        _hasBits0 |= 2;
        displayOnboarding_ = value;
      }
    }
    /// <summary>Gets whether the "displayOnboarding" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayOnboarding {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "displayOnboarding" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayOnboarding() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "mouseAndKeyboardAccessAllowed" field.</summary>
    public const int MouseAndKeyboardAccessAllowedFieldNumber = 3;
    private readonly static bool MouseAndKeyboardAccessAllowedDefaultValue = true;

    private bool mouseAndKeyboardAccessAllowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MouseAndKeyboardAccessAllowed {
      get { if ((_hasBits0 & 4) != 0) { return mouseAndKeyboardAccessAllowed_; } else { return MouseAndKeyboardAccessAllowedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mouseAndKeyboardAccessAllowed_ = value;
      }
    }
    /// <summary>Gets whether the "mouseAndKeyboardAccessAllowed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMouseAndKeyboardAccessAllowed {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "mouseAndKeyboardAccessAllowed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMouseAndKeyboardAccessAllowed() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gamepadAccessAllowed" field.</summary>
    public const int GamepadAccessAllowedFieldNumber = 4;
    private readonly static bool GamepadAccessAllowedDefaultValue = true;

    private bool gamepadAccessAllowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GamepadAccessAllowed {
      get { if ((_hasBits0 & 8) != 0) { return gamepadAccessAllowed_; } else { return GamepadAccessAllowedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gamepadAccessAllowed_ = value;
      }
    }
    /// <summary>Gets whether the "gamepadAccessAllowed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamepadAccessAllowed {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gamepadAccessAllowed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamepadAccessAllowed() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "displayWizardTour" field.</summary>
    public const int DisplayWizardTourFieldNumber = 5;
    private readonly static bool DisplayWizardTourDefaultValue = true;

    private bool displayWizardTour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisplayWizardTour {
      get { if ((_hasBits0 & 16) != 0) { return displayWizardTour_; } else { return DisplayWizardTourDefaultValue; } }
      set {
        _hasBits0 |= 16;
        displayWizardTour_ = value;
      }
    }
    /// <summary>Gets whether the "displayWizardTour" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayWizardTour {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "displayWizardTour" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayWizardTour() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "lastTimeFeedBackWindowDisplayed" field.</summary>
    public const int LastTimeFeedBackWindowDisplayedFieldNumber = 6;
    private readonly static uint LastTimeFeedBackWindowDisplayedDefaultValue = 0;

    private uint lastTimeFeedBackWindowDisplayed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LastTimeFeedBackWindowDisplayed {
      get { if ((_hasBits0 & 32) != 0) { return lastTimeFeedBackWindowDisplayed_; } else { return LastTimeFeedBackWindowDisplayedDefaultValue; } }
      set {
        _hasBits0 |= 32;
        lastTimeFeedBackWindowDisplayed_ = value;
      }
    }
    /// <summary>Gets whether the "lastTimeFeedBackWindowDisplayed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastTimeFeedBackWindowDisplayed {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "lastTimeFeedBackWindowDisplayed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastTimeFeedBackWindowDisplayed() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "nbBuyGameRefused" field.</summary>
    public const int NbBuyGameRefusedFieldNumber = 7;
    private readonly static uint NbBuyGameRefusedDefaultValue = 0;

    private uint nbBuyGameRefused_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbBuyGameRefused {
      get { if ((_hasBits0 & 64) != 0) { return nbBuyGameRefused_; } else { return NbBuyGameRefusedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        nbBuyGameRefused_ = value;
      }
    }
    /// <summary>Gets whether the "nbBuyGameRefused" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbBuyGameRefused {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "nbBuyGameRefused" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbBuyGameRefused() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "nbFeedbackUnfilled" field.</summary>
    public const int NbFeedbackUnfilledFieldNumber = 8;
    private readonly static uint NbFeedbackUnfilledDefaultValue = 0;

    private uint nbFeedbackUnfilled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbFeedbackUnfilled {
      get { if ((_hasBits0 & 128) != 0) { return nbFeedbackUnfilled_; } else { return NbFeedbackUnfilledDefaultValue; } }
      set {
        _hasBits0 |= 128;
        nbFeedbackUnfilled_ = value;
      }
    }
    /// <summary>Gets whether the "nbFeedbackUnfilled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbFeedbackUnfilled {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "nbFeedbackUnfilled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbFeedbackUnfilled() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "resolution" field.</summary>
    public const int ResolutionFieldNumber = 9;
    private readonly static uint ResolutionDefaultValue = 1080;

    private uint resolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Resolution {
      get { if ((_hasBits0 & 256) != 0) { return resolution_; } else { return ResolutionDefaultValue; } }
      set {
        _hasBits0 |= 256;
        resolution_ = value;
      }
    }
    /// <summary>Gets whether the "resolution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResolution {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "resolution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResolution() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "fps" field.</summary>
    public const int FpsFieldNumber = 10;
    private readonly static uint FpsDefaultValue = 60;

    private uint fps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Fps {
      get { if ((_hasBits0 & 512) != 0) { return fps_; } else { return FpsDefaultValue; } }
      set {
        _hasBits0 |= 512;
        fps_ = value;
      }
    }
    /// <summary>Gets whether the "fps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFps {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "fps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFps() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SharePlay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SharePlay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bitrate != other.Bitrate) return false;
      if (DisplayOnboarding != other.DisplayOnboarding) return false;
      if (MouseAndKeyboardAccessAllowed != other.MouseAndKeyboardAccessAllowed) return false;
      if (GamepadAccessAllowed != other.GamepadAccessAllowed) return false;
      if (DisplayWizardTour != other.DisplayWizardTour) return false;
      if (LastTimeFeedBackWindowDisplayed != other.LastTimeFeedBackWindowDisplayed) return false;
      if (NbBuyGameRefused != other.NbBuyGameRefused) return false;
      if (NbFeedbackUnfilled != other.NbFeedbackUnfilled) return false;
      if (Resolution != other.Resolution) return false;
      if (Fps != other.Fps) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBitrate) hash ^= Bitrate.GetHashCode();
      if (HasDisplayOnboarding) hash ^= DisplayOnboarding.GetHashCode();
      if (HasMouseAndKeyboardAccessAllowed) hash ^= MouseAndKeyboardAccessAllowed.GetHashCode();
      if (HasGamepadAccessAllowed) hash ^= GamepadAccessAllowed.GetHashCode();
      if (HasDisplayWizardTour) hash ^= DisplayWizardTour.GetHashCode();
      if (HasLastTimeFeedBackWindowDisplayed) hash ^= LastTimeFeedBackWindowDisplayed.GetHashCode();
      if (HasNbBuyGameRefused) hash ^= NbBuyGameRefused.GetHashCode();
      if (HasNbFeedbackUnfilled) hash ^= NbFeedbackUnfilled.GetHashCode();
      if (HasResolution) hash ^= Resolution.GetHashCode();
      if (HasFps) hash ^= Fps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBitrate) {
        output.WriteRawTag(8);
        output.WriteUInt32(Bitrate);
      }
      if (HasDisplayOnboarding) {
        output.WriteRawTag(16);
        output.WriteBool(DisplayOnboarding);
      }
      if (HasMouseAndKeyboardAccessAllowed) {
        output.WriteRawTag(24);
        output.WriteBool(MouseAndKeyboardAccessAllowed);
      }
      if (HasGamepadAccessAllowed) {
        output.WriteRawTag(32);
        output.WriteBool(GamepadAccessAllowed);
      }
      if (HasDisplayWizardTour) {
        output.WriteRawTag(40);
        output.WriteBool(DisplayWizardTour);
      }
      if (HasLastTimeFeedBackWindowDisplayed) {
        output.WriteRawTag(48);
        output.WriteUInt32(LastTimeFeedBackWindowDisplayed);
      }
      if (HasNbBuyGameRefused) {
        output.WriteRawTag(56);
        output.WriteUInt32(NbBuyGameRefused);
      }
      if (HasNbFeedbackUnfilled) {
        output.WriteRawTag(64);
        output.WriteUInt32(NbFeedbackUnfilled);
      }
      if (HasResolution) {
        output.WriteRawTag(72);
        output.WriteUInt32(Resolution);
      }
      if (HasFps) {
        output.WriteRawTag(80);
        output.WriteUInt32(Fps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBitrate) {
        output.WriteRawTag(8);
        output.WriteUInt32(Bitrate);
      }
      if (HasDisplayOnboarding) {
        output.WriteRawTag(16);
        output.WriteBool(DisplayOnboarding);
      }
      if (HasMouseAndKeyboardAccessAllowed) {
        output.WriteRawTag(24);
        output.WriteBool(MouseAndKeyboardAccessAllowed);
      }
      if (HasGamepadAccessAllowed) {
        output.WriteRawTag(32);
        output.WriteBool(GamepadAccessAllowed);
      }
      if (HasDisplayWizardTour) {
        output.WriteRawTag(40);
        output.WriteBool(DisplayWizardTour);
      }
      if (HasLastTimeFeedBackWindowDisplayed) {
        output.WriteRawTag(48);
        output.WriteUInt32(LastTimeFeedBackWindowDisplayed);
      }
      if (HasNbBuyGameRefused) {
        output.WriteRawTag(56);
        output.WriteUInt32(NbBuyGameRefused);
      }
      if (HasNbFeedbackUnfilled) {
        output.WriteRawTag(64);
        output.WriteUInt32(NbFeedbackUnfilled);
      }
      if (HasResolution) {
        output.WriteRawTag(72);
        output.WriteUInt32(Resolution);
      }
      if (HasFps) {
        output.WriteRawTag(80);
        output.WriteUInt32(Fps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBitrate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bitrate);
      }
      if (HasDisplayOnboarding) {
        size += 1 + 1;
      }
      if (HasMouseAndKeyboardAccessAllowed) {
        size += 1 + 1;
      }
      if (HasGamepadAccessAllowed) {
        size += 1 + 1;
      }
      if (HasDisplayWizardTour) {
        size += 1 + 1;
      }
      if (HasLastTimeFeedBackWindowDisplayed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastTimeFeedBackWindowDisplayed);
      }
      if (HasNbBuyGameRefused) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbBuyGameRefused);
      }
      if (HasNbFeedbackUnfilled) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbFeedbackUnfilled);
      }
      if (HasResolution) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Resolution);
      }
      if (HasFps) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SharePlay other) {
      if (other == null) {
        return;
      }
      if (other.HasBitrate) {
        Bitrate = other.Bitrate;
      }
      if (other.HasDisplayOnboarding) {
        DisplayOnboarding = other.DisplayOnboarding;
      }
      if (other.HasMouseAndKeyboardAccessAllowed) {
        MouseAndKeyboardAccessAllowed = other.MouseAndKeyboardAccessAllowed;
      }
      if (other.HasGamepadAccessAllowed) {
        GamepadAccessAllowed = other.GamepadAccessAllowed;
      }
      if (other.HasDisplayWizardTour) {
        DisplayWizardTour = other.DisplayWizardTour;
      }
      if (other.HasLastTimeFeedBackWindowDisplayed) {
        LastTimeFeedBackWindowDisplayed = other.LastTimeFeedBackWindowDisplayed;
      }
      if (other.HasNbBuyGameRefused) {
        NbBuyGameRefused = other.NbBuyGameRefused;
      }
      if (other.HasNbFeedbackUnfilled) {
        NbFeedbackUnfilled = other.NbFeedbackUnfilled;
      }
      if (other.HasResolution) {
        Resolution = other.Resolution;
      }
      if (other.HasFps) {
        Fps = other.Fps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bitrate = input.ReadUInt32();
            break;
          }
          case 16: {
            DisplayOnboarding = input.ReadBool();
            break;
          }
          case 24: {
            MouseAndKeyboardAccessAllowed = input.ReadBool();
            break;
          }
          case 32: {
            GamepadAccessAllowed = input.ReadBool();
            break;
          }
          case 40: {
            DisplayWizardTour = input.ReadBool();
            break;
          }
          case 48: {
            LastTimeFeedBackWindowDisplayed = input.ReadUInt32();
            break;
          }
          case 56: {
            NbBuyGameRefused = input.ReadUInt32();
            break;
          }
          case 64: {
            NbFeedbackUnfilled = input.ReadUInt32();
            break;
          }
          case 72: {
            Resolution = input.ReadUInt32();
            break;
          }
          case 80: {
            Fps = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bitrate = input.ReadUInt32();
            break;
          }
          case 16: {
            DisplayOnboarding = input.ReadBool();
            break;
          }
          case 24: {
            MouseAndKeyboardAccessAllowed = input.ReadBool();
            break;
          }
          case 32: {
            GamepadAccessAllowed = input.ReadBool();
            break;
          }
          case 40: {
            DisplayWizardTour = input.ReadBool();
            break;
          }
          case 48: {
            LastTimeFeedBackWindowDisplayed = input.ReadUInt32();
            break;
          }
          case 56: {
            NbBuyGameRefused = input.ReadUInt32();
            break;
          }
          case 64: {
            NbFeedbackUnfilled = input.ReadUInt32();
            break;
          }
          case 72: {
            Resolution = input.ReadUInt32();
            break;
          }
          case 80: {
            Fps = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RemotePlay : pb::IMessage<RemotePlay>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemotePlay> _parser = new pb::MessageParser<RemotePlay>(() => new RemotePlay());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RemotePlay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.CommonSettingsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemotePlay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemotePlay(RemotePlay other) : this() {
      _hasBits0 = other._hasBits0;
      allowed_ = other.allowed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RemotePlay Clone() {
      return new RemotePlay(this);
    }

    /// <summary>Field number for the "allowed" field.</summary>
    public const int AllowedFieldNumber = 1;
    private readonly static bool AllowedDefaultValue = false;

    private bool allowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Allowed {
      get { if ((_hasBits0 & 1) != 0) { return allowed_; } else { return AllowedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        allowed_ = value;
      }
    }
    /// <summary>Gets whether the "allowed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllowed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "allowed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllowed() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RemotePlay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RemotePlay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Allowed != other.Allowed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAllowed) hash ^= Allowed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAllowed) {
        output.WriteRawTag(8);
        output.WriteBool(Allowed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAllowed) {
        output.WriteRawTag(8);
        output.WriteBool(Allowed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAllowed) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RemotePlay other) {
      if (other == null) {
        return;
      }
      if (other.HasAllowed) {
        Allowed = other.Allowed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Allowed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Allowed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
