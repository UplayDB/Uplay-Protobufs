// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: UplayAuxDll.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Uplay.Uplayauxdll {

  /// <summary>Holder for reflection information generated from UplayAuxDll.proto</summary>
  public static partial class UplayAuxDllReflection {

    #region Descriptor
    /// <summary>File descriptor for UplayAuxDll.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UplayAuxDllReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch11cGNfZHVtcF8xMC9VcGxheUF1eERsbC5wcm90bxIXbWcucHJvdG9jb2wu",
            "dXBsYXlhdXhkbGwiGgoHRGV2QXJncxIPCgd1YXRPbmx5GAEgASgIIk0KB0lu",
            "aXRSZXESDwoHdXBsYXlJZBgBIAIoDRIxCgdkZXZBcmdzGAIgASgLMiAubWcu",
            "cHJvdG9jb2wudXBsYXlhdXhkbGwuRGV2QXJncyJQCgdJbml0UnNwEjMKBnJl",
            "c3VsdBgBIAIoDjIjLm1nLnByb3RvY29sLnVwbGF5YXV4ZGxsLkluaXRSZXN1",
            "bHQSEAoIdXBsYXlQSUQYAiABKA0iGgoYSW52YWxpZGF0ZUNhY2hlZFRva2Vu",
            "UmVxIjAKGEdldENhY2hlZE9yRnJlc2hUb2tlblJlcRIUCgxyZXF1ZXN0VG9r",
            "ZW4YAiACKAwiKAoQR2V0QnVyblRpY2tldFJlcRIUCgxyZXF1ZXN0VG9rZW4Y",
            "AiACKAwiegoYR2V0Q2FjaGVkT3JGcmVzaFRva2VuUnNwEjgKBnJlc3VsdBgC",
            "IAIoDjIoLm1nLnByb3RvY29sLnVwbGF5YXV4ZGxsLk9wZXJhdGlvblJlc3Vs",
            "dBIRCgllcnJvckNvZGUYAyABKA0SEQoJZ2FtZVRva2VuGAQgASgMIosBChBH",
            "ZXRCdXJuVGlja2V0UnNwEjgKBnJlc3VsdBgCIAIoDjIoLm1nLnByb3RvY29s",
            "LnVwbGF5YXV4ZGxsLk9wZXJhdGlvblJlc3VsdBIRCgllcnJvckNvZGUYAyAB",
            "KA0SEgoKYnVyblRpY2tldBgEIAEoDBIWCg5ncmFjZVBlcmlvZFNlYxgFIAEo",
            "BCL8AQoLQWN0aXZhdGVSZXESUwoYaW52YWxpZGF0ZUNhY2hlZFRva2VuUmVx",
            "GAEgASgLMjEubWcucHJvdG9jb2wudXBsYXlhdXhkbGwuSW52YWxpZGF0ZUNh",
            "Y2hlZFRva2VuUmVxElMKGGdldENhY2hlZE9yRnJlc2hUb2tlblJlcRgCIAEo",
            "CzIxLm1nLnByb3RvY29sLnVwbGF5YXV4ZGxsLkdldENhY2hlZE9yRnJlc2hU",
            "b2tlblJlcRJDChBnZXRCdXJuVGlja2V0UmVxGAMgASgLMikubWcucHJvdG9j",
            "b2wudXBsYXlhdXhkbGwuR2V0QnVyblRpY2tldFJlcSKnAQoLQWN0aXZhdGVS",
            "c3ASUwoYZ2V0Q2FjaGVkT3JGcmVzaFRva2VuUnNwGAIgASgLMjEubWcucHJv",
            "dG9jb2wudXBsYXlhdXhkbGwuR2V0Q2FjaGVkT3JGcmVzaFRva2VuUnNwEkMK",
            "EGdldEJ1cm5UaWNrZXRSc3AYAyABKAsyKS5tZy5wcm90b2NvbC51cGxheWF1",
            "eGRsbC5HZXRCdXJuVGlja2V0UnNwIoYBCgNSZXESEQoJcmVxdWVzdElkGAEg",
            "ASgNEjEKB2luaXRSZXEYAiABKAsyIC5tZy5wcm90b2NvbC51cGxheWF1eGRs",
            "bC5Jbml0UmVxEjkKC2FjdGl2YXRlUmVxGAMgASgLMiQubWcucHJvdG9jb2wu",
            "dXBsYXlhdXhkbGwuQWN0aXZhdGVSZXEihgEKA1JzcBIRCglyZXF1ZXN0SWQY",
            "ASABKA0SMQoHaW5pdFJzcBgCIAEoCzIgLm1nLnByb3RvY29sLnVwbGF5YXV4",
            "ZGxsLkluaXRSc3ASOQoLYWN0aXZhdGVSc3AYAyABKAsyJC5tZy5wcm90b2Nv",
            "bC51cGxheWF1eGRsbC5BY3RpdmF0ZVJzcCpDCg9PcGVyYXRpb25SZXN1bHQS",
            "BgoCb2sQARITCg9pbnZhbGlkQXJndW1lbnQQAhITCg9jb25uZWN0aW9uRXJy",
            "b3IQAypeCgpJbml0UmVzdWx0EhYKEkluaXRSZXN1bHRfU3VjY2VzcxABEhYK",
            "EkluaXRSZXN1bHRfRmFpbHVyZRACEiAKHEluaXRSZXN1bHRfUmVjb25uZWN0",
            "UmVxdWlyZWQQAyrsAQoJRXJyb3JUeXBlEiUKIUVycm9yVHlwZV9BY3RpdmF0",
            "aW9uTGltaXRFeGNlZWRlZBABEh4KGkVycm9yVHlwZV9BY3RpdmF0aW9uRmFp",
            "bGVkEAISIAocRXJyb3JUeXBlX05vT25saW5lQ29ubmVjdGlvbhADEhkKFUVy",
            "cm9yVHlwZV9Ob093bmVyc2hpcBAEEhUKEUVycm9yVHlwZV9UaW1lb3V0EAUS",
            "IQodRXJyb3JUeXBlX0ludGVybmFsU2VydmVyRXJyb3IQBhIhCh1FcnJvclR5",
            "cGVfRXJyb3JEZXRhaWxDb2RlT25seRAH"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Uplay.Uplayauxdll.OperationResult), typeof(global::Uplay.Uplayauxdll.InitResult), typeof(global::Uplay.Uplayauxdll.ErrorType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.DevArgs), global::Uplay.Uplayauxdll.DevArgs.Parser, new[]{ "UatOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.InitReq), global::Uplay.Uplayauxdll.InitReq.Parser, new[]{ "UplayId", "DevArgs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.InitRsp), global::Uplay.Uplayauxdll.InitRsp.Parser, new[]{ "Result", "UplayPID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.InvalidateCachedTokenReq), global::Uplay.Uplayauxdll.InvalidateCachedTokenReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.GetCachedOrFreshTokenReq), global::Uplay.Uplayauxdll.GetCachedOrFreshTokenReq.Parser, new[]{ "RequestToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.GetBurnTicketReq), global::Uplay.Uplayauxdll.GetBurnTicketReq.Parser, new[]{ "RequestToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.GetCachedOrFreshTokenRsp), global::Uplay.Uplayauxdll.GetCachedOrFreshTokenRsp.Parser, new[]{ "Result", "ErrorCode", "GameToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.GetBurnTicketRsp), global::Uplay.Uplayauxdll.GetBurnTicketRsp.Parser, new[]{ "Result", "ErrorCode", "BurnTicket", "GracePeriodSec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.ActivateReq), global::Uplay.Uplayauxdll.ActivateReq.Parser, new[]{ "InvalidateCachedTokenReq", "GetCachedOrFreshTokenReq", "GetBurnTicketReq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.ActivateRsp), global::Uplay.Uplayauxdll.ActivateRsp.Parser, new[]{ "GetCachedOrFreshTokenRsp", "GetBurnTicketRsp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.Req), global::Uplay.Uplayauxdll.Req.Parser, new[]{ "RequestId", "InitReq", "ActivateReq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Uplayauxdll.Rsp), global::Uplay.Uplayauxdll.Rsp.Parser, new[]{ "RequestId", "InitRsp", "ActivateRsp" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OperationResult {
    [pbr::OriginalName("ok")] Ok = 1,
    [pbr::OriginalName("invalidArgument")] InvalidArgument = 2,
    [pbr::OriginalName("connectionError")] ConnectionError = 3,
  }

  public enum InitResult {
    [pbr::OriginalName("InitResult_Success")] Success = 1,
    [pbr::OriginalName("InitResult_Failure")] Failure = 2,
    [pbr::OriginalName("InitResult_ReconnectRequired")] ReconnectRequired = 3,
  }

  public enum ErrorType {
    [pbr::OriginalName("ErrorType_ActivationLimitExceeded")] ActivationLimitExceeded = 1,
    [pbr::OriginalName("ErrorType_ActivationFailed")] ActivationFailed = 2,
    [pbr::OriginalName("ErrorType_NoOnlineConnection")] NoOnlineConnection = 3,
    [pbr::OriginalName("ErrorType_NoOwnership")] NoOwnership = 4,
    [pbr::OriginalName("ErrorType_Timeout")] Timeout = 5,
    [pbr::OriginalName("ErrorType_InternalServerError")] InternalServerError = 6,
    [pbr::OriginalName("ErrorType_ErrorDetailCodeOnly")] ErrorDetailCodeOnly = 7,
  }

  #endregion

  #region Messages
  public sealed partial class DevArgs : pb::IMessage<DevArgs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DevArgs> _parser = new pb::MessageParser<DevArgs>(() => new DevArgs());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DevArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DevArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DevArgs(DevArgs other) : this() {
      _hasBits0 = other._hasBits0;
      uatOnly_ = other.uatOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DevArgs Clone() {
      return new DevArgs(this);
    }

    /// <summary>Field number for the "uatOnly" field.</summary>
    public const int UatOnlyFieldNumber = 1;
    private readonly static bool UatOnlyDefaultValue = false;

    private bool uatOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UatOnly {
      get { if ((_hasBits0 & 1) != 0) { return uatOnly_; } else { return UatOnlyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uatOnly_ = value;
      }
    }
    /// <summary>Gets whether the "uatOnly" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUatOnly {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uatOnly" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUatOnly() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DevArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DevArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UatOnly != other.UatOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUatOnly) hash ^= UatOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUatOnly) {
        output.WriteRawTag(8);
        output.WriteBool(UatOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUatOnly) {
        output.WriteRawTag(8);
        output.WriteBool(UatOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUatOnly) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DevArgs other) {
      if (other == null) {
        return;
      }
      if (other.HasUatOnly) {
        UatOnly = other.UatOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UatOnly = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UatOnly = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitReq : pb::IMessage<InitReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitReq> _parser = new pb::MessageParser<InitReq>(() => new InitReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InitReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitReq(InitReq other) : this() {
      _hasBits0 = other._hasBits0;
      uplayId_ = other.uplayId_;
      devArgs_ = other.devArgs_ != null ? other.devArgs_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitReq Clone() {
      return new InitReq(this);
    }

    /// <summary>Field number for the "uplayId" field.</summary>
    public const int UplayIdFieldNumber = 1;
    private readonly static uint UplayIdDefaultValue = 0;

    private uint uplayId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UplayId {
      get { if ((_hasBits0 & 1) != 0) { return uplayId_; } else { return UplayIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uplayId_ = value;
      }
    }
    /// <summary>Gets whether the "uplayId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUplayId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uplayId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUplayId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "devArgs" field.</summary>
    public const int DevArgsFieldNumber = 2;
    private global::Uplay.Uplayauxdll.DevArgs devArgs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.DevArgs DevArgs {
      get { return devArgs_; }
      set {
        devArgs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InitReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InitReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UplayId != other.UplayId) return false;
      if (!object.Equals(DevArgs, other.DevArgs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUplayId) hash ^= UplayId.GetHashCode();
      if (devArgs_ != null) hash ^= DevArgs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUplayId) {
        output.WriteRawTag(8);
        output.WriteUInt32(UplayId);
      }
      if (devArgs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DevArgs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUplayId) {
        output.WriteRawTag(8);
        output.WriteUInt32(UplayId);
      }
      if (devArgs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DevArgs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUplayId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UplayId);
      }
      if (devArgs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DevArgs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InitReq other) {
      if (other == null) {
        return;
      }
      if (other.HasUplayId) {
        UplayId = other.UplayId;
      }
      if (other.devArgs_ != null) {
        if (devArgs_ == null) {
          DevArgs = new global::Uplay.Uplayauxdll.DevArgs();
        }
        DevArgs.MergeFrom(other.DevArgs);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UplayId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (devArgs_ == null) {
              DevArgs = new global::Uplay.Uplayauxdll.DevArgs();
            }
            input.ReadMessage(DevArgs);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UplayId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (devArgs_ == null) {
              DevArgs = new global::Uplay.Uplayauxdll.DevArgs();
            }
            input.ReadMessage(DevArgs);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitRsp : pb::IMessage<InitRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitRsp> _parser = new pb::MessageParser<InitRsp>(() => new InitRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InitRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitRsp(InitRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      uplayPID_ = other.uplayPID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitRsp Clone() {
      return new InitRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Uplayauxdll.InitResult ResultDefaultValue = global::Uplay.Uplayauxdll.InitResult.Success;

    private global::Uplay.Uplayauxdll.InitResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.InitResult Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uplayPID" field.</summary>
    public const int UplayPIDFieldNumber = 2;
    private readonly static uint UplayPIDDefaultValue = 0;

    private uint uplayPID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UplayPID {
      get { if ((_hasBits0 & 2) != 0) { return uplayPID_; } else { return UplayPIDDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uplayPID_ = value;
      }
    }
    /// <summary>Gets whether the "uplayPID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUplayPID {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uplayPID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUplayPID() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InitRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InitRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (UplayPID != other.UplayPID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasUplayPID) hash ^= UplayPID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasUplayPID) {
        output.WriteRawTag(16);
        output.WriteUInt32(UplayPID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasUplayPID) {
        output.WriteRawTag(16);
        output.WriteUInt32(UplayPID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasUplayPID) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UplayPID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InitRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasUplayPID) {
        UplayPID = other.UplayPID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Uplayauxdll.InitResult) input.ReadEnum();
            break;
          }
          case 16: {
            UplayPID = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Uplayauxdll.InitResult) input.ReadEnum();
            break;
          }
          case 16: {
            UplayPID = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InvalidateCachedTokenReq : pb::IMessage<InvalidateCachedTokenReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InvalidateCachedTokenReq> _parser = new pb::MessageParser<InvalidateCachedTokenReq>(() => new InvalidateCachedTokenReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InvalidateCachedTokenReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InvalidateCachedTokenReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InvalidateCachedTokenReq(InvalidateCachedTokenReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InvalidateCachedTokenReq Clone() {
      return new InvalidateCachedTokenReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InvalidateCachedTokenReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InvalidateCachedTokenReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InvalidateCachedTokenReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class GetCachedOrFreshTokenReq : pb::IMessage<GetCachedOrFreshTokenReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCachedOrFreshTokenReq> _parser = new pb::MessageParser<GetCachedOrFreshTokenReq>(() => new GetCachedOrFreshTokenReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetCachedOrFreshTokenReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCachedOrFreshTokenReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCachedOrFreshTokenReq(GetCachedOrFreshTokenReq other) : this() {
      requestToken_ = other.requestToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCachedOrFreshTokenReq Clone() {
      return new GetCachedOrFreshTokenReq(this);
    }

    /// <summary>Field number for the "requestToken" field.</summary>
    public const int RequestTokenFieldNumber = 2;
    private readonly static pb::ByteString RequestTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString requestToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RequestToken {
      get { return requestToken_ ?? RequestTokenDefaultValue; }
      set {
        requestToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "requestToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestToken {
      get { return requestToken_ != null; }
    }
    /// <summary>Clears the value of the "requestToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestToken() {
      requestToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetCachedOrFreshTokenReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetCachedOrFreshTokenReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestToken != other.RequestToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestToken) hash ^= RequestToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestToken) {
        output.WriteRawTag(18);
        output.WriteBytes(RequestToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestToken) {
        output.WriteRawTag(18);
        output.WriteBytes(RequestToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RequestToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetCachedOrFreshTokenReq other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestToken) {
        RequestToken = other.RequestToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            RequestToken = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            RequestToken = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetBurnTicketReq : pb::IMessage<GetBurnTicketReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBurnTicketReq> _parser = new pb::MessageParser<GetBurnTicketReq>(() => new GetBurnTicketReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetBurnTicketReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBurnTicketReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBurnTicketReq(GetBurnTicketReq other) : this() {
      requestToken_ = other.requestToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBurnTicketReq Clone() {
      return new GetBurnTicketReq(this);
    }

    /// <summary>Field number for the "requestToken" field.</summary>
    public const int RequestTokenFieldNumber = 2;
    private readonly static pb::ByteString RequestTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString requestToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RequestToken {
      get { return requestToken_ ?? RequestTokenDefaultValue; }
      set {
        requestToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "requestToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestToken {
      get { return requestToken_ != null; }
    }
    /// <summary>Clears the value of the "requestToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestToken() {
      requestToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetBurnTicketReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetBurnTicketReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestToken != other.RequestToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestToken) hash ^= RequestToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestToken) {
        output.WriteRawTag(18);
        output.WriteBytes(RequestToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestToken) {
        output.WriteRawTag(18);
        output.WriteBytes(RequestToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RequestToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetBurnTicketReq other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestToken) {
        RequestToken = other.RequestToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            RequestToken = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            RequestToken = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetCachedOrFreshTokenRsp : pb::IMessage<GetCachedOrFreshTokenRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCachedOrFreshTokenRsp> _parser = new pb::MessageParser<GetCachedOrFreshTokenRsp>(() => new GetCachedOrFreshTokenRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetCachedOrFreshTokenRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCachedOrFreshTokenRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCachedOrFreshTokenRsp(GetCachedOrFreshTokenRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      errorCode_ = other.errorCode_;
      gameToken_ = other.gameToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCachedOrFreshTokenRsp Clone() {
      return new GetCachedOrFreshTokenRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private readonly static global::Uplay.Uplayauxdll.OperationResult ResultDefaultValue = global::Uplay.Uplayauxdll.OperationResult.Ok;

    private global::Uplay.Uplayauxdll.OperationResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.OperationResult Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 3;
    private readonly static uint ErrorCodeDefaultValue = 0;

    private uint errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ErrorCode {
      get { if ((_hasBits0 & 2) != 0) { return errorCode_; } else { return ErrorCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        errorCode_ = value;
      }
    }
    /// <summary>Gets whether the "errorCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "errorCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gameToken" field.</summary>
    public const int GameTokenFieldNumber = 4;
    private readonly static pb::ByteString GameTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString gameToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString GameToken {
      get { return gameToken_ ?? GameTokenDefaultValue; }
      set {
        gameToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gameToken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameToken {
      get { return gameToken_ != null; }
    }
    /// <summary>Clears the value of the "gameToken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameToken() {
      gameToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetCachedOrFreshTokenRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetCachedOrFreshTokenRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (GameToken != other.GameToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasErrorCode) hash ^= ErrorCode.GetHashCode();
      if (HasGameToken) hash ^= GameToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (HasErrorCode) {
        output.WriteRawTag(24);
        output.WriteUInt32(ErrorCode);
      }
      if (HasGameToken) {
        output.WriteRawTag(34);
        output.WriteBytes(GameToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (HasErrorCode) {
        output.WriteRawTag(24);
        output.WriteUInt32(ErrorCode);
      }
      if (HasGameToken) {
        output.WriteRawTag(34);
        output.WriteBytes(GameToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ErrorCode);
      }
      if (HasGameToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(GameToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetCachedOrFreshTokenRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasErrorCode) {
        ErrorCode = other.ErrorCode;
      }
      if (other.HasGameToken) {
        GameToken = other.GameToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Result = (global::Uplay.Uplayauxdll.OperationResult) input.ReadEnum();
            break;
          }
          case 24: {
            ErrorCode = input.ReadUInt32();
            break;
          }
          case 34: {
            GameToken = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            Result = (global::Uplay.Uplayauxdll.OperationResult) input.ReadEnum();
            break;
          }
          case 24: {
            ErrorCode = input.ReadUInt32();
            break;
          }
          case 34: {
            GameToken = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetBurnTicketRsp : pb::IMessage<GetBurnTicketRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBurnTicketRsp> _parser = new pb::MessageParser<GetBurnTicketRsp>(() => new GetBurnTicketRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetBurnTicketRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBurnTicketRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBurnTicketRsp(GetBurnTicketRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      errorCode_ = other.errorCode_;
      burnTicket_ = other.burnTicket_;
      gracePeriodSec_ = other.gracePeriodSec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBurnTicketRsp Clone() {
      return new GetBurnTicketRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private readonly static global::Uplay.Uplayauxdll.OperationResult ResultDefaultValue = global::Uplay.Uplayauxdll.OperationResult.Ok;

    private global::Uplay.Uplayauxdll.OperationResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.OperationResult Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 3;
    private readonly static uint ErrorCodeDefaultValue = 0;

    private uint errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ErrorCode {
      get { if ((_hasBits0 & 2) != 0) { return errorCode_; } else { return ErrorCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        errorCode_ = value;
      }
    }
    /// <summary>Gets whether the "errorCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "errorCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "burnTicket" field.</summary>
    public const int BurnTicketFieldNumber = 4;
    private readonly static pb::ByteString BurnTicketDefaultValue = pb::ByteString.Empty;

    private pb::ByteString burnTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString BurnTicket {
      get { return burnTicket_ ?? BurnTicketDefaultValue; }
      set {
        burnTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "burnTicket" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBurnTicket {
      get { return burnTicket_ != null; }
    }
    /// <summary>Clears the value of the "burnTicket" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBurnTicket() {
      burnTicket_ = null;
    }

    /// <summary>Field number for the "gracePeriodSec" field.</summary>
    public const int GracePeriodSecFieldNumber = 5;
    private readonly static ulong GracePeriodSecDefaultValue = 0UL;

    private ulong gracePeriodSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GracePeriodSec {
      get { if ((_hasBits0 & 4) != 0) { return gracePeriodSec_; } else { return GracePeriodSecDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gracePeriodSec_ = value;
      }
    }
    /// <summary>Gets whether the "gracePeriodSec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGracePeriodSec {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gracePeriodSec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGracePeriodSec() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetBurnTicketRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetBurnTicketRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (BurnTicket != other.BurnTicket) return false;
      if (GracePeriodSec != other.GracePeriodSec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasErrorCode) hash ^= ErrorCode.GetHashCode();
      if (HasBurnTicket) hash ^= BurnTicket.GetHashCode();
      if (HasGracePeriodSec) hash ^= GracePeriodSec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (HasErrorCode) {
        output.WriteRawTag(24);
        output.WriteUInt32(ErrorCode);
      }
      if (HasBurnTicket) {
        output.WriteRawTag(34);
        output.WriteBytes(BurnTicket);
      }
      if (HasGracePeriodSec) {
        output.WriteRawTag(40);
        output.WriteUInt64(GracePeriodSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (HasErrorCode) {
        output.WriteRawTag(24);
        output.WriteUInt32(ErrorCode);
      }
      if (HasBurnTicket) {
        output.WriteRawTag(34);
        output.WriteBytes(BurnTicket);
      }
      if (HasGracePeriodSec) {
        output.WriteRawTag(40);
        output.WriteUInt64(GracePeriodSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ErrorCode);
      }
      if (HasBurnTicket) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BurnTicket);
      }
      if (HasGracePeriodSec) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GracePeriodSec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetBurnTicketRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasErrorCode) {
        ErrorCode = other.ErrorCode;
      }
      if (other.HasBurnTicket) {
        BurnTicket = other.BurnTicket;
      }
      if (other.HasGracePeriodSec) {
        GracePeriodSec = other.GracePeriodSec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Result = (global::Uplay.Uplayauxdll.OperationResult) input.ReadEnum();
            break;
          }
          case 24: {
            ErrorCode = input.ReadUInt32();
            break;
          }
          case 34: {
            BurnTicket = input.ReadBytes();
            break;
          }
          case 40: {
            GracePeriodSec = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            Result = (global::Uplay.Uplayauxdll.OperationResult) input.ReadEnum();
            break;
          }
          case 24: {
            ErrorCode = input.ReadUInt32();
            break;
          }
          case 34: {
            BurnTicket = input.ReadBytes();
            break;
          }
          case 40: {
            GracePeriodSec = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivateReq : pb::IMessage<ActivateReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivateReq> _parser = new pb::MessageParser<ActivateReq>(() => new ActivateReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivateReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivateReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivateReq(ActivateReq other) : this() {
      invalidateCachedTokenReq_ = other.invalidateCachedTokenReq_ != null ? other.invalidateCachedTokenReq_.Clone() : null;
      getCachedOrFreshTokenReq_ = other.getCachedOrFreshTokenReq_ != null ? other.getCachedOrFreshTokenReq_.Clone() : null;
      getBurnTicketReq_ = other.getBurnTicketReq_ != null ? other.getBurnTicketReq_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivateReq Clone() {
      return new ActivateReq(this);
    }

    /// <summary>Field number for the "invalidateCachedTokenReq" field.</summary>
    public const int InvalidateCachedTokenReqFieldNumber = 1;
    private global::Uplay.Uplayauxdll.InvalidateCachedTokenReq invalidateCachedTokenReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.InvalidateCachedTokenReq InvalidateCachedTokenReq {
      get { return invalidateCachedTokenReq_; }
      set {
        invalidateCachedTokenReq_ = value;
      }
    }

    /// <summary>Field number for the "getCachedOrFreshTokenReq" field.</summary>
    public const int GetCachedOrFreshTokenReqFieldNumber = 2;
    private global::Uplay.Uplayauxdll.GetCachedOrFreshTokenReq getCachedOrFreshTokenReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.GetCachedOrFreshTokenReq GetCachedOrFreshTokenReq {
      get { return getCachedOrFreshTokenReq_; }
      set {
        getCachedOrFreshTokenReq_ = value;
      }
    }

    /// <summary>Field number for the "getBurnTicketReq" field.</summary>
    public const int GetBurnTicketReqFieldNumber = 3;
    private global::Uplay.Uplayauxdll.GetBurnTicketReq getBurnTicketReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.GetBurnTicketReq GetBurnTicketReq {
      get { return getBurnTicketReq_; }
      set {
        getBurnTicketReq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivateReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InvalidateCachedTokenReq, other.InvalidateCachedTokenReq)) return false;
      if (!object.Equals(GetCachedOrFreshTokenReq, other.GetCachedOrFreshTokenReq)) return false;
      if (!object.Equals(GetBurnTicketReq, other.GetBurnTicketReq)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (invalidateCachedTokenReq_ != null) hash ^= InvalidateCachedTokenReq.GetHashCode();
      if (getCachedOrFreshTokenReq_ != null) hash ^= GetCachedOrFreshTokenReq.GetHashCode();
      if (getBurnTicketReq_ != null) hash ^= GetBurnTicketReq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (invalidateCachedTokenReq_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InvalidateCachedTokenReq);
      }
      if (getCachedOrFreshTokenReq_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GetCachedOrFreshTokenReq);
      }
      if (getBurnTicketReq_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GetBurnTicketReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (invalidateCachedTokenReq_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InvalidateCachedTokenReq);
      }
      if (getCachedOrFreshTokenReq_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GetCachedOrFreshTokenReq);
      }
      if (getBurnTicketReq_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GetBurnTicketReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (invalidateCachedTokenReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvalidateCachedTokenReq);
      }
      if (getCachedOrFreshTokenReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCachedOrFreshTokenReq);
      }
      if (getBurnTicketReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBurnTicketReq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivateReq other) {
      if (other == null) {
        return;
      }
      if (other.invalidateCachedTokenReq_ != null) {
        if (invalidateCachedTokenReq_ == null) {
          InvalidateCachedTokenReq = new global::Uplay.Uplayauxdll.InvalidateCachedTokenReq();
        }
        InvalidateCachedTokenReq.MergeFrom(other.InvalidateCachedTokenReq);
      }
      if (other.getCachedOrFreshTokenReq_ != null) {
        if (getCachedOrFreshTokenReq_ == null) {
          GetCachedOrFreshTokenReq = new global::Uplay.Uplayauxdll.GetCachedOrFreshTokenReq();
        }
        GetCachedOrFreshTokenReq.MergeFrom(other.GetCachedOrFreshTokenReq);
      }
      if (other.getBurnTicketReq_ != null) {
        if (getBurnTicketReq_ == null) {
          GetBurnTicketReq = new global::Uplay.Uplayauxdll.GetBurnTicketReq();
        }
        GetBurnTicketReq.MergeFrom(other.GetBurnTicketReq);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (invalidateCachedTokenReq_ == null) {
              InvalidateCachedTokenReq = new global::Uplay.Uplayauxdll.InvalidateCachedTokenReq();
            }
            input.ReadMessage(InvalidateCachedTokenReq);
            break;
          }
          case 18: {
            if (getCachedOrFreshTokenReq_ == null) {
              GetCachedOrFreshTokenReq = new global::Uplay.Uplayauxdll.GetCachedOrFreshTokenReq();
            }
            input.ReadMessage(GetCachedOrFreshTokenReq);
            break;
          }
          case 26: {
            if (getBurnTicketReq_ == null) {
              GetBurnTicketReq = new global::Uplay.Uplayauxdll.GetBurnTicketReq();
            }
            input.ReadMessage(GetBurnTicketReq);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (invalidateCachedTokenReq_ == null) {
              InvalidateCachedTokenReq = new global::Uplay.Uplayauxdll.InvalidateCachedTokenReq();
            }
            input.ReadMessage(InvalidateCachedTokenReq);
            break;
          }
          case 18: {
            if (getCachedOrFreshTokenReq_ == null) {
              GetCachedOrFreshTokenReq = new global::Uplay.Uplayauxdll.GetCachedOrFreshTokenReq();
            }
            input.ReadMessage(GetCachedOrFreshTokenReq);
            break;
          }
          case 26: {
            if (getBurnTicketReq_ == null) {
              GetBurnTicketReq = new global::Uplay.Uplayauxdll.GetBurnTicketReq();
            }
            input.ReadMessage(GetBurnTicketReq);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivateRsp : pb::IMessage<ActivateRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivateRsp> _parser = new pb::MessageParser<ActivateRsp>(() => new ActivateRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivateRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivateRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivateRsp(ActivateRsp other) : this() {
      getCachedOrFreshTokenRsp_ = other.getCachedOrFreshTokenRsp_ != null ? other.getCachedOrFreshTokenRsp_.Clone() : null;
      getBurnTicketRsp_ = other.getBurnTicketRsp_ != null ? other.getBurnTicketRsp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivateRsp Clone() {
      return new ActivateRsp(this);
    }

    /// <summary>Field number for the "getCachedOrFreshTokenRsp" field.</summary>
    public const int GetCachedOrFreshTokenRspFieldNumber = 2;
    private global::Uplay.Uplayauxdll.GetCachedOrFreshTokenRsp getCachedOrFreshTokenRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.GetCachedOrFreshTokenRsp GetCachedOrFreshTokenRsp {
      get { return getCachedOrFreshTokenRsp_; }
      set {
        getCachedOrFreshTokenRsp_ = value;
      }
    }

    /// <summary>Field number for the "getBurnTicketRsp" field.</summary>
    public const int GetBurnTicketRspFieldNumber = 3;
    private global::Uplay.Uplayauxdll.GetBurnTicketRsp getBurnTicketRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.GetBurnTicketRsp GetBurnTicketRsp {
      get { return getBurnTicketRsp_; }
      set {
        getBurnTicketRsp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivateRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivateRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GetCachedOrFreshTokenRsp, other.GetCachedOrFreshTokenRsp)) return false;
      if (!object.Equals(GetBurnTicketRsp, other.GetBurnTicketRsp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (getCachedOrFreshTokenRsp_ != null) hash ^= GetCachedOrFreshTokenRsp.GetHashCode();
      if (getBurnTicketRsp_ != null) hash ^= GetBurnTicketRsp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (getCachedOrFreshTokenRsp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GetCachedOrFreshTokenRsp);
      }
      if (getBurnTicketRsp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GetBurnTicketRsp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (getCachedOrFreshTokenRsp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GetCachedOrFreshTokenRsp);
      }
      if (getBurnTicketRsp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GetBurnTicketRsp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (getCachedOrFreshTokenRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCachedOrFreshTokenRsp);
      }
      if (getBurnTicketRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBurnTicketRsp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivateRsp other) {
      if (other == null) {
        return;
      }
      if (other.getCachedOrFreshTokenRsp_ != null) {
        if (getCachedOrFreshTokenRsp_ == null) {
          GetCachedOrFreshTokenRsp = new global::Uplay.Uplayauxdll.GetCachedOrFreshTokenRsp();
        }
        GetCachedOrFreshTokenRsp.MergeFrom(other.GetCachedOrFreshTokenRsp);
      }
      if (other.getBurnTicketRsp_ != null) {
        if (getBurnTicketRsp_ == null) {
          GetBurnTicketRsp = new global::Uplay.Uplayauxdll.GetBurnTicketRsp();
        }
        GetBurnTicketRsp.MergeFrom(other.GetBurnTicketRsp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (getCachedOrFreshTokenRsp_ == null) {
              GetCachedOrFreshTokenRsp = new global::Uplay.Uplayauxdll.GetCachedOrFreshTokenRsp();
            }
            input.ReadMessage(GetCachedOrFreshTokenRsp);
            break;
          }
          case 26: {
            if (getBurnTicketRsp_ == null) {
              GetBurnTicketRsp = new global::Uplay.Uplayauxdll.GetBurnTicketRsp();
            }
            input.ReadMessage(GetBurnTicketRsp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (getCachedOrFreshTokenRsp_ == null) {
              GetCachedOrFreshTokenRsp = new global::Uplay.Uplayauxdll.GetCachedOrFreshTokenRsp();
            }
            input.ReadMessage(GetCachedOrFreshTokenRsp);
            break;
          }
          case 26: {
            if (getBurnTicketRsp_ == null) {
              GetBurnTicketRsp = new global::Uplay.Uplayauxdll.GetBurnTicketRsp();
            }
            input.ReadMessage(GetBurnTicketRsp);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Req : pb::IMessage<Req>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Req> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Req() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Req(Req other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      initReq_ = other.initReq_ != null ? other.initReq_.Clone() : null;
      activateReq_ = other.activateReq_ != null ? other.activateReq_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Req Clone() {
      return new Req(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "requestId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "requestId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "initReq" field.</summary>
    public const int InitReqFieldNumber = 2;
    private global::Uplay.Uplayauxdll.InitReq initReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.InitReq InitReq {
      get { return initReq_; }
      set {
        initReq_ = value;
      }
    }

    /// <summary>Field number for the "activateReq" field.</summary>
    public const int ActivateReqFieldNumber = 3;
    private global::Uplay.Uplayauxdll.ActivateReq activateReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.ActivateReq ActivateReq {
      get { return activateReq_; }
      set {
        activateReq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Req);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Req other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(InitReq, other.InitReq)) return false;
      if (!object.Equals(ActivateReq, other.ActivateReq)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (initReq_ != null) hash ^= InitReq.GetHashCode();
      if (activateReq_ != null) hash ^= ActivateReq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (initReq_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InitReq);
      }
      if (activateReq_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ActivateReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (initReq_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InitReq);
      }
      if (activateReq_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ActivateReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (initReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitReq);
      }
      if (activateReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivateReq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Req other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.initReq_ != null) {
        if (initReq_ == null) {
          InitReq = new global::Uplay.Uplayauxdll.InitReq();
        }
        InitReq.MergeFrom(other.InitReq);
      }
      if (other.activateReq_ != null) {
        if (activateReq_ == null) {
          ActivateReq = new global::Uplay.Uplayauxdll.ActivateReq();
        }
        ActivateReq.MergeFrom(other.ActivateReq);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (initReq_ == null) {
              InitReq = new global::Uplay.Uplayauxdll.InitReq();
            }
            input.ReadMessage(InitReq);
            break;
          }
          case 26: {
            if (activateReq_ == null) {
              ActivateReq = new global::Uplay.Uplayauxdll.ActivateReq();
            }
            input.ReadMessage(ActivateReq);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (initReq_ == null) {
              InitReq = new global::Uplay.Uplayauxdll.InitReq();
            }
            input.ReadMessage(InitReq);
            break;
          }
          case 26: {
            if (activateReq_ == null) {
              ActivateReq = new global::Uplay.Uplayauxdll.ActivateReq();
            }
            input.ReadMessage(ActivateReq);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Rsp : pb::IMessage<Rsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Rsp> _parser = new pb::MessageParser<Rsp>(() => new Rsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Rsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Uplayauxdll.UplayAuxDllReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Rsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Rsp(Rsp other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      initRsp_ = other.initRsp_ != null ? other.initRsp_.Clone() : null;
      activateRsp_ = other.activateRsp_ != null ? other.activateRsp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Rsp Clone() {
      return new Rsp(this);
    }

    /// <summary>Field number for the "requestId" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "requestId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "requestId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "initRsp" field.</summary>
    public const int InitRspFieldNumber = 2;
    private global::Uplay.Uplayauxdll.InitRsp initRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.InitRsp InitRsp {
      get { return initRsp_; }
      set {
        initRsp_ = value;
      }
    }

    /// <summary>Field number for the "activateRsp" field.</summary>
    public const int ActivateRspFieldNumber = 3;
    private global::Uplay.Uplayauxdll.ActivateRsp activateRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Uplayauxdll.ActivateRsp ActivateRsp {
      get { return activateRsp_; }
      set {
        activateRsp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Rsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Rsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(InitRsp, other.InitRsp)) return false;
      if (!object.Equals(ActivateRsp, other.ActivateRsp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (initRsp_ != null) hash ^= InitRsp.GetHashCode();
      if (activateRsp_ != null) hash ^= ActivateRsp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (initRsp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InitRsp);
      }
      if (activateRsp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ActivateRsp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (initRsp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InitRsp);
      }
      if (activateRsp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ActivateRsp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (initRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitRsp);
      }
      if (activateRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivateRsp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Rsp other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.initRsp_ != null) {
        if (initRsp_ == null) {
          InitRsp = new global::Uplay.Uplayauxdll.InitRsp();
        }
        InitRsp.MergeFrom(other.InitRsp);
      }
      if (other.activateRsp_ != null) {
        if (activateRsp_ == null) {
          ActivateRsp = new global::Uplay.Uplayauxdll.ActivateRsp();
        }
        ActivateRsp.MergeFrom(other.ActivateRsp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (initRsp_ == null) {
              InitRsp = new global::Uplay.Uplayauxdll.InitRsp();
            }
            input.ReadMessage(InitRsp);
            break;
          }
          case 26: {
            if (activateRsp_ == null) {
              ActivateRsp = new global::Uplay.Uplayauxdll.ActivateRsp();
            }
            input.ReadMessage(ActivateRsp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (initRsp_ == null) {
              InitRsp = new global::Uplay.Uplayauxdll.InitRsp();
            }
            input.ReadMessage(InitRsp);
            break;
          }
          case 26: {
            if (activateRsp_ == null) {
              ActivateRsp = new global::Uplay.Uplayauxdll.ActivateRsp();
            }
            input.ReadMessage(ActivateRsp);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
