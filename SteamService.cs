// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steam_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Uplay.SteamService {

  /// <summary>Holder for reflection information generated from steam_service.proto</summary>
  public static partial class SteamServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for steam_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SteamServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch91cGNfZHVtcF8xMC9zdGVhbV9zZXJ2aWNlLnByb3RvEhltZy5wcm90b2Nv",
            "bC5zdGVhbV9zZXJ2aWNlIqMBCg1TdGVhbVVzZXJJbmZvEhAKCHN0ZWFtX2lk",
            "GAEgAigJEhMKC3BlcnNvbmFuYW1lGAIgASgJEhIKCmF2YXRhcl91cmwYAyAB",
            "KAkSVwoaY29tbXVuaXR5X3Zpc2liaWxpdHlfc3RhdGUYBCABKA4yMy5tZy5w",
            "cm90b2NvbC5zdGVhbV9zZXJ2aWNlLkNvbW11bml0eVZpc2liaWxpdHlTdGF0",
            "ZSImChJHZXRTdGVhbUZyaWVuZHNSZXESEAoIc3RlYW1faWQYASACKAkihwEK",
            "EkdldFN0ZWFtRnJpZW5kc1JzcBI/Cg1zdGVhbV9mcmllbmRzGAEgAygLMigu",
            "bWcucHJvdG9jb2wuc3RlYW1fc2VydmljZS5TdGVhbVVzZXJJbmZvEg8KB3N1",
            "Y2Nlc3MYAiACKAgSHwoXcHVibGljX2FjY291bnRfcmVxdWlyZWQYAyABKAgi",
            "JwoTR2V0U3RlYW1Vc2VySW5mb1JlcRIQCghzdGVhbV9pZBgBIAIoCSJpChNH",
            "ZXRTdGVhbVVzZXJJbmZvUnNwEkEKD3N0ZWFtX3VzZXJfaW5mbxgBIAEoCzIo",
            "Lm1nLnByb3RvY29sLnN0ZWFtX3NlcnZpY2UuU3RlYW1Vc2VySW5mbxIPCgdz",
            "dWNjZXNzGAIgAigIIqQBCgNSZXESTAoVZ2V0X3N0ZWFtX2ZyaWVuZHNfcmVx",
            "GAEgASgLMi0ubWcucHJvdG9jb2wuc3RlYW1fc2VydmljZS5HZXRTdGVhbUZy",
            "aWVuZHNSZXESTwoXZ2V0X3N0ZWFtX3VzZXJfaW5mb19yZXEYAiABKAsyLi5t",
            "Zy5wcm90b2NvbC5zdGVhbV9zZXJ2aWNlLkdldFN0ZWFtVXNlckluZm9SZXEi",
            "pAEKA1JzcBJMChVnZXRfc3RlYW1fZnJpZW5kc19yc3AYASABKAsyLS5tZy5w",
            "cm90b2NvbC5zdGVhbV9zZXJ2aWNlLkdldFN0ZWFtRnJpZW5kc1JzcBJPChdn",
            "ZXRfc3RlYW1fdXNlcl9pbmZvX3JzcBgCIAEoCzIuLm1nLnByb3RvY29sLnN0",
            "ZWFtX3NlcnZpY2UuR2V0U3RlYW1Vc2VySW5mb1JzcCI7CghVcHN0cmVhbRIv",
            "CgdyZXF1ZXN0GAEgASgLMh4ubWcucHJvdG9jb2wuc3RlYW1fc2VydmljZS5S",
            "ZXEiPgoKRG93bnN0cmVhbRIwCghyZXNwb25zZRgBIAEoCzIeLm1nLnByb3Rv",
            "Y29sLnN0ZWFtX3NlcnZpY2UuUnNwKo8BChhDb21tdW5pdHlWaXNpYmlsaXR5",
            "U3RhdGUSKAokQ29tbXVuaXR5VmlzaWJpbGl0eVN0YXRlX1Vuc3VwcG9ydGVk",
            "EAASJAogQ29tbXVuaXR5VmlzaWJpbGl0eVN0YXRlX1ByaXZhdGUQARIjCh9D",
            "b21tdW5pdHlWaXNpYmlsaXR5U3RhdGVfUHVibGljEAM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Uplay.SteamService.CommunityVisibilityState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.SteamService.SteamUserInfo), global::Uplay.SteamService.SteamUserInfo.Parser, new[]{ "SteamId", "Personaname", "AvatarUrl", "CommunityVisibilityState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.SteamService.GetSteamFriendsReq), global::Uplay.SteamService.GetSteamFriendsReq.Parser, new[]{ "SteamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.SteamService.GetSteamFriendsRsp), global::Uplay.SteamService.GetSteamFriendsRsp.Parser, new[]{ "SteamFriends", "Success", "PublicAccountRequired" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.SteamService.GetSteamUserInfoReq), global::Uplay.SteamService.GetSteamUserInfoReq.Parser, new[]{ "SteamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.SteamService.GetSteamUserInfoRsp), global::Uplay.SteamService.GetSteamUserInfoRsp.Parser, new[]{ "SteamUserInfo", "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.SteamService.Req), global::Uplay.SteamService.Req.Parser, new[]{ "GetSteamFriendsReq", "GetSteamUserInfoReq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.SteamService.Rsp), global::Uplay.SteamService.Rsp.Parser, new[]{ "GetSteamFriendsRsp", "GetSteamUserInfoRsp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.SteamService.Upstream), global::Uplay.SteamService.Upstream.Parser, new[]{ "Request" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.SteamService.Downstream), global::Uplay.SteamService.Downstream.Parser, new[]{ "Response" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CommunityVisibilityState {
    [pbr::OriginalName("CommunityVisibilityState_Unsupported")] Unsupported = 0,
    [pbr::OriginalName("CommunityVisibilityState_Private")] Private = 1,
    [pbr::OriginalName("CommunityVisibilityState_Public")] Public = 3,
  }

  #endregion

  #region Messages
  public sealed partial class SteamUserInfo : pb::IMessage<SteamUserInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SteamUserInfo> _parser = new pb::MessageParser<SteamUserInfo>(() => new SteamUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SteamUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.SteamService.SteamServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SteamUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SteamUserInfo(SteamUserInfo other) : this() {
      _hasBits0 = other._hasBits0;
      steamId_ = other.steamId_;
      personaname_ = other.personaname_;
      avatarUrl_ = other.avatarUrl_;
      communityVisibilityState_ = other.communityVisibilityState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SteamUserInfo Clone() {
      return new SteamUserInfo(this);
    }

    /// <summary>Field number for the "steam_id" field.</summary>
    public const int SteamIdFieldNumber = 1;
    private readonly static string SteamIdDefaultValue = "";

    private string steamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SteamId {
      get { return steamId_ ?? SteamIdDefaultValue; }
      set {
        steamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "steam_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamId {
      get { return steamId_ != null; }
    }
    /// <summary>Clears the value of the "steam_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamId() {
      steamId_ = null;
    }

    /// <summary>Field number for the "personaname" field.</summary>
    public const int PersonanameFieldNumber = 2;
    private readonly static string PersonanameDefaultValue = "";

    private string personaname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Personaname {
      get { return personaname_ ?? PersonanameDefaultValue; }
      set {
        personaname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "personaname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPersonaname {
      get { return personaname_ != null; }
    }
    /// <summary>Clears the value of the "personaname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPersonaname() {
      personaname_ = null;
    }

    /// <summary>Field number for the "avatar_url" field.</summary>
    public const int AvatarUrlFieldNumber = 3;
    private readonly static string AvatarUrlDefaultValue = "";

    private string avatarUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvatarUrl {
      get { return avatarUrl_ ?? AvatarUrlDefaultValue; }
      set {
        avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "avatar_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvatarUrl {
      get { return avatarUrl_ != null; }
    }
    /// <summary>Clears the value of the "avatar_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvatarUrl() {
      avatarUrl_ = null;
    }

    /// <summary>Field number for the "community_visibility_state" field.</summary>
    public const int CommunityVisibilityStateFieldNumber = 4;
    private readonly static global::Uplay.SteamService.CommunityVisibilityState CommunityVisibilityStateDefaultValue = global::Uplay.SteamService.CommunityVisibilityState.Unsupported;

    private global::Uplay.SteamService.CommunityVisibilityState communityVisibilityState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.SteamService.CommunityVisibilityState CommunityVisibilityState {
      get { if ((_hasBits0 & 1) != 0) { return communityVisibilityState_; } else { return CommunityVisibilityStateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        communityVisibilityState_ = value;
      }
    }
    /// <summary>Gets whether the "community_visibility_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityVisibilityState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "community_visibility_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityVisibilityState() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SteamUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SteamUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SteamId != other.SteamId) return false;
      if (Personaname != other.Personaname) return false;
      if (AvatarUrl != other.AvatarUrl) return false;
      if (CommunityVisibilityState != other.CommunityVisibilityState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamId) hash ^= SteamId.GetHashCode();
      if (HasPersonaname) hash ^= Personaname.GetHashCode();
      if (HasAvatarUrl) hash ^= AvatarUrl.GetHashCode();
      if (HasCommunityVisibilityState) hash ^= CommunityVisibilityState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamId) {
        output.WriteRawTag(10);
        output.WriteString(SteamId);
      }
      if (HasPersonaname) {
        output.WriteRawTag(18);
        output.WriteString(Personaname);
      }
      if (HasAvatarUrl) {
        output.WriteRawTag(26);
        output.WriteString(AvatarUrl);
      }
      if (HasCommunityVisibilityState) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CommunityVisibilityState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamId) {
        output.WriteRawTag(10);
        output.WriteString(SteamId);
      }
      if (HasPersonaname) {
        output.WriteRawTag(18);
        output.WriteString(Personaname);
      }
      if (HasAvatarUrl) {
        output.WriteRawTag(26);
        output.WriteString(AvatarUrl);
      }
      if (HasCommunityVisibilityState) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CommunityVisibilityState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SteamId);
      }
      if (HasPersonaname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Personaname);
      }
      if (HasAvatarUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
      }
      if (HasCommunityVisibilityState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommunityVisibilityState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SteamUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      if (other.HasPersonaname) {
        Personaname = other.Personaname;
      }
      if (other.HasAvatarUrl) {
        AvatarUrl = other.AvatarUrl;
      }
      if (other.HasCommunityVisibilityState) {
        CommunityVisibilityState = other.CommunityVisibilityState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SteamId = input.ReadString();
            break;
          }
          case 18: {
            Personaname = input.ReadString();
            break;
          }
          case 26: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 32: {
            CommunityVisibilityState = (global::Uplay.SteamService.CommunityVisibilityState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SteamId = input.ReadString();
            break;
          }
          case 18: {
            Personaname = input.ReadString();
            break;
          }
          case 26: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 32: {
            CommunityVisibilityState = (global::Uplay.SteamService.CommunityVisibilityState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetSteamFriendsReq : pb::IMessage<GetSteamFriendsReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetSteamFriendsReq> _parser = new pb::MessageParser<GetSteamFriendsReq>(() => new GetSteamFriendsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetSteamFriendsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.SteamService.SteamServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamFriendsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamFriendsReq(GetSteamFriendsReq other) : this() {
      steamId_ = other.steamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamFriendsReq Clone() {
      return new GetSteamFriendsReq(this);
    }

    /// <summary>Field number for the "steam_id" field.</summary>
    public const int SteamIdFieldNumber = 1;
    private readonly static string SteamIdDefaultValue = "";

    private string steamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SteamId {
      get { return steamId_ ?? SteamIdDefaultValue; }
      set {
        steamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "steam_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamId {
      get { return steamId_ != null; }
    }
    /// <summary>Clears the value of the "steam_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamId() {
      steamId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetSteamFriendsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetSteamFriendsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SteamId != other.SteamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamId) hash ^= SteamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamId) {
        output.WriteRawTag(10);
        output.WriteString(SteamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamId) {
        output.WriteRawTag(10);
        output.WriteString(SteamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SteamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetSteamFriendsReq other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SteamId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SteamId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetSteamFriendsRsp : pb::IMessage<GetSteamFriendsRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetSteamFriendsRsp> _parser = new pb::MessageParser<GetSteamFriendsRsp>(() => new GetSteamFriendsRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetSteamFriendsRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.SteamService.SteamServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamFriendsRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamFriendsRsp(GetSteamFriendsRsp other) : this() {
      _hasBits0 = other._hasBits0;
      steamFriends_ = other.steamFriends_.Clone();
      success_ = other.success_;
      publicAccountRequired_ = other.publicAccountRequired_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamFriendsRsp Clone() {
      return new GetSteamFriendsRsp(this);
    }

    /// <summary>Field number for the "steam_friends" field.</summary>
    public const int SteamFriendsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uplay.SteamService.SteamUserInfo> _repeated_steamFriends_codec
        = pb::FieldCodec.ForMessage(10, global::Uplay.SteamService.SteamUserInfo.Parser);
    private readonly pbc::RepeatedField<global::Uplay.SteamService.SteamUserInfo> steamFriends_ = new pbc::RepeatedField<global::Uplay.SteamService.SteamUserInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.SteamService.SteamUserInfo> SteamFriends {
      get { return steamFriends_; }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "public_account_required" field.</summary>
    public const int PublicAccountRequiredFieldNumber = 3;
    private readonly static bool PublicAccountRequiredDefaultValue = false;

    private bool publicAccountRequired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PublicAccountRequired {
      get { if ((_hasBits0 & 2) != 0) { return publicAccountRequired_; } else { return PublicAccountRequiredDefaultValue; } }
      set {
        _hasBits0 |= 2;
        publicAccountRequired_ = value;
      }
    }
    /// <summary>Gets whether the "public_account_required" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPublicAccountRequired {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "public_account_required" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPublicAccountRequired() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetSteamFriendsRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetSteamFriendsRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!steamFriends_.Equals(other.steamFriends_)) return false;
      if (Success != other.Success) return false;
      if (PublicAccountRequired != other.PublicAccountRequired) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= steamFriends_.GetHashCode();
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (HasPublicAccountRequired) hash ^= PublicAccountRequired.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      steamFriends_.WriteTo(output, _repeated_steamFriends_codec);
      if (HasSuccess) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (HasPublicAccountRequired) {
        output.WriteRawTag(24);
        output.WriteBool(PublicAccountRequired);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      steamFriends_.WriteTo(ref output, _repeated_steamFriends_codec);
      if (HasSuccess) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (HasPublicAccountRequired) {
        output.WriteRawTag(24);
        output.WriteBool(PublicAccountRequired);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += steamFriends_.CalculateSize(_repeated_steamFriends_codec);
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (HasPublicAccountRequired) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetSteamFriendsRsp other) {
      if (other == null) {
        return;
      }
      steamFriends_.Add(other.steamFriends_);
      if (other.HasSuccess) {
        Success = other.Success;
      }
      if (other.HasPublicAccountRequired) {
        PublicAccountRequired = other.PublicAccountRequired;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            steamFriends_.AddEntriesFrom(input, _repeated_steamFriends_codec);
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 24: {
            PublicAccountRequired = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            steamFriends_.AddEntriesFrom(ref input, _repeated_steamFriends_codec);
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 24: {
            PublicAccountRequired = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetSteamUserInfoReq : pb::IMessage<GetSteamUserInfoReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetSteamUserInfoReq> _parser = new pb::MessageParser<GetSteamUserInfoReq>(() => new GetSteamUserInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetSteamUserInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.SteamService.SteamServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamUserInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamUserInfoReq(GetSteamUserInfoReq other) : this() {
      steamId_ = other.steamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamUserInfoReq Clone() {
      return new GetSteamUserInfoReq(this);
    }

    /// <summary>Field number for the "steam_id" field.</summary>
    public const int SteamIdFieldNumber = 1;
    private readonly static string SteamIdDefaultValue = "";

    private string steamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SteamId {
      get { return steamId_ ?? SteamIdDefaultValue; }
      set {
        steamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "steam_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamId {
      get { return steamId_ != null; }
    }
    /// <summary>Clears the value of the "steam_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamId() {
      steamId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetSteamUserInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetSteamUserInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SteamId != other.SteamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamId) hash ^= SteamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamId) {
        output.WriteRawTag(10);
        output.WriteString(SteamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamId) {
        output.WriteRawTag(10);
        output.WriteString(SteamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SteamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetSteamUserInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SteamId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SteamId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetSteamUserInfoRsp : pb::IMessage<GetSteamUserInfoRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetSteamUserInfoRsp> _parser = new pb::MessageParser<GetSteamUserInfoRsp>(() => new GetSteamUserInfoRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetSteamUserInfoRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.SteamService.SteamServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamUserInfoRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamUserInfoRsp(GetSteamUserInfoRsp other) : this() {
      _hasBits0 = other._hasBits0;
      steamUserInfo_ = other.steamUserInfo_ != null ? other.steamUserInfo_.Clone() : null;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSteamUserInfoRsp Clone() {
      return new GetSteamUserInfoRsp(this);
    }

    /// <summary>Field number for the "steam_user_info" field.</summary>
    public const int SteamUserInfoFieldNumber = 1;
    private global::Uplay.SteamService.SteamUserInfo steamUserInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.SteamService.SteamUserInfo SteamUserInfo {
      get { return steamUserInfo_; }
      set {
        steamUserInfo_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetSteamUserInfoRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetSteamUserInfoRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SteamUserInfo, other.SteamUserInfo)) return false;
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (steamUserInfo_ != null) hash ^= SteamUserInfo.GetHashCode();
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (steamUserInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SteamUserInfo);
      }
      if (HasSuccess) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (steamUserInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SteamUserInfo);
      }
      if (HasSuccess) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (steamUserInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SteamUserInfo);
      }
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetSteamUserInfoRsp other) {
      if (other == null) {
        return;
      }
      if (other.steamUserInfo_ != null) {
        if (steamUserInfo_ == null) {
          SteamUserInfo = new global::Uplay.SteamService.SteamUserInfo();
        }
        SteamUserInfo.MergeFrom(other.SteamUserInfo);
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (steamUserInfo_ == null) {
              SteamUserInfo = new global::Uplay.SteamService.SteamUserInfo();
            }
            input.ReadMessage(SteamUserInfo);
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (steamUserInfo_ == null) {
              SteamUserInfo = new global::Uplay.SteamService.SteamUserInfo();
            }
            input.ReadMessage(SteamUserInfo);
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Req : pb::IMessage<Req>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Req> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.SteamService.SteamServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Req() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Req(Req other) : this() {
      getSteamFriendsReq_ = other.getSteamFriendsReq_ != null ? other.getSteamFriendsReq_.Clone() : null;
      getSteamUserInfoReq_ = other.getSteamUserInfoReq_ != null ? other.getSteamUserInfoReq_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Req Clone() {
      return new Req(this);
    }

    /// <summary>Field number for the "get_steam_friends_req" field.</summary>
    public const int GetSteamFriendsReqFieldNumber = 1;
    private global::Uplay.SteamService.GetSteamFriendsReq getSteamFriendsReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.SteamService.GetSteamFriendsReq GetSteamFriendsReq {
      get { return getSteamFriendsReq_; }
      set {
        getSteamFriendsReq_ = value;
      }
    }

    /// <summary>Field number for the "get_steam_user_info_req" field.</summary>
    public const int GetSteamUserInfoReqFieldNumber = 2;
    private global::Uplay.SteamService.GetSteamUserInfoReq getSteamUserInfoReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.SteamService.GetSteamUserInfoReq GetSteamUserInfoReq {
      get { return getSteamUserInfoReq_; }
      set {
        getSteamUserInfoReq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Req);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Req other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GetSteamFriendsReq, other.GetSteamFriendsReq)) return false;
      if (!object.Equals(GetSteamUserInfoReq, other.GetSteamUserInfoReq)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (getSteamFriendsReq_ != null) hash ^= GetSteamFriendsReq.GetHashCode();
      if (getSteamUserInfoReq_ != null) hash ^= GetSteamUserInfoReq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (getSteamFriendsReq_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GetSteamFriendsReq);
      }
      if (getSteamUserInfoReq_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GetSteamUserInfoReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (getSteamFriendsReq_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GetSteamFriendsReq);
      }
      if (getSteamUserInfoReq_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GetSteamUserInfoReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (getSteamFriendsReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSteamFriendsReq);
      }
      if (getSteamUserInfoReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSteamUserInfoReq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Req other) {
      if (other == null) {
        return;
      }
      if (other.getSteamFriendsReq_ != null) {
        if (getSteamFriendsReq_ == null) {
          GetSteamFriendsReq = new global::Uplay.SteamService.GetSteamFriendsReq();
        }
        GetSteamFriendsReq.MergeFrom(other.GetSteamFriendsReq);
      }
      if (other.getSteamUserInfoReq_ != null) {
        if (getSteamUserInfoReq_ == null) {
          GetSteamUserInfoReq = new global::Uplay.SteamService.GetSteamUserInfoReq();
        }
        GetSteamUserInfoReq.MergeFrom(other.GetSteamUserInfoReq);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (getSteamFriendsReq_ == null) {
              GetSteamFriendsReq = new global::Uplay.SteamService.GetSteamFriendsReq();
            }
            input.ReadMessage(GetSteamFriendsReq);
            break;
          }
          case 18: {
            if (getSteamUserInfoReq_ == null) {
              GetSteamUserInfoReq = new global::Uplay.SteamService.GetSteamUserInfoReq();
            }
            input.ReadMessage(GetSteamUserInfoReq);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (getSteamFriendsReq_ == null) {
              GetSteamFriendsReq = new global::Uplay.SteamService.GetSteamFriendsReq();
            }
            input.ReadMessage(GetSteamFriendsReq);
            break;
          }
          case 18: {
            if (getSteamUserInfoReq_ == null) {
              GetSteamUserInfoReq = new global::Uplay.SteamService.GetSteamUserInfoReq();
            }
            input.ReadMessage(GetSteamUserInfoReq);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Rsp : pb::IMessage<Rsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Rsp> _parser = new pb::MessageParser<Rsp>(() => new Rsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Rsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.SteamService.SteamServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Rsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Rsp(Rsp other) : this() {
      getSteamFriendsRsp_ = other.getSteamFriendsRsp_ != null ? other.getSteamFriendsRsp_.Clone() : null;
      getSteamUserInfoRsp_ = other.getSteamUserInfoRsp_ != null ? other.getSteamUserInfoRsp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Rsp Clone() {
      return new Rsp(this);
    }

    /// <summary>Field number for the "get_steam_friends_rsp" field.</summary>
    public const int GetSteamFriendsRspFieldNumber = 1;
    private global::Uplay.SteamService.GetSteamFriendsRsp getSteamFriendsRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.SteamService.GetSteamFriendsRsp GetSteamFriendsRsp {
      get { return getSteamFriendsRsp_; }
      set {
        getSteamFriendsRsp_ = value;
      }
    }

    /// <summary>Field number for the "get_steam_user_info_rsp" field.</summary>
    public const int GetSteamUserInfoRspFieldNumber = 2;
    private global::Uplay.SteamService.GetSteamUserInfoRsp getSteamUserInfoRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.SteamService.GetSteamUserInfoRsp GetSteamUserInfoRsp {
      get { return getSteamUserInfoRsp_; }
      set {
        getSteamUserInfoRsp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Rsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Rsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GetSteamFriendsRsp, other.GetSteamFriendsRsp)) return false;
      if (!object.Equals(GetSteamUserInfoRsp, other.GetSteamUserInfoRsp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (getSteamFriendsRsp_ != null) hash ^= GetSteamFriendsRsp.GetHashCode();
      if (getSteamUserInfoRsp_ != null) hash ^= GetSteamUserInfoRsp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (getSteamFriendsRsp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GetSteamFriendsRsp);
      }
      if (getSteamUserInfoRsp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GetSteamUserInfoRsp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (getSteamFriendsRsp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GetSteamFriendsRsp);
      }
      if (getSteamUserInfoRsp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GetSteamUserInfoRsp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (getSteamFriendsRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSteamFriendsRsp);
      }
      if (getSteamUserInfoRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSteamUserInfoRsp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Rsp other) {
      if (other == null) {
        return;
      }
      if (other.getSteamFriendsRsp_ != null) {
        if (getSteamFriendsRsp_ == null) {
          GetSteamFriendsRsp = new global::Uplay.SteamService.GetSteamFriendsRsp();
        }
        GetSteamFriendsRsp.MergeFrom(other.GetSteamFriendsRsp);
      }
      if (other.getSteamUserInfoRsp_ != null) {
        if (getSteamUserInfoRsp_ == null) {
          GetSteamUserInfoRsp = new global::Uplay.SteamService.GetSteamUserInfoRsp();
        }
        GetSteamUserInfoRsp.MergeFrom(other.GetSteamUserInfoRsp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (getSteamFriendsRsp_ == null) {
              GetSteamFriendsRsp = new global::Uplay.SteamService.GetSteamFriendsRsp();
            }
            input.ReadMessage(GetSteamFriendsRsp);
            break;
          }
          case 18: {
            if (getSteamUserInfoRsp_ == null) {
              GetSteamUserInfoRsp = new global::Uplay.SteamService.GetSteamUserInfoRsp();
            }
            input.ReadMessage(GetSteamUserInfoRsp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (getSteamFriendsRsp_ == null) {
              GetSteamFriendsRsp = new global::Uplay.SteamService.GetSteamFriendsRsp();
            }
            input.ReadMessage(GetSteamFriendsRsp);
            break;
          }
          case 18: {
            if (getSteamUserInfoRsp_ == null) {
              GetSteamUserInfoRsp = new global::Uplay.SteamService.GetSteamUserInfoRsp();
            }
            input.ReadMessage(GetSteamUserInfoRsp);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Upstream : pb::IMessage<Upstream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Upstream> _parser = new pb::MessageParser<Upstream>(() => new Upstream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Upstream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.SteamService.SteamServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Upstream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Upstream(Upstream other) : this() {
      request_ = other.request_ != null ? other.request_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Upstream Clone() {
      return new Upstream(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    private global::Uplay.SteamService.Req request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.SteamService.Req Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Upstream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Upstream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (request_ != null) hash ^= Request.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Upstream other) {
      if (other == null) {
        return;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Uplay.SteamService.Req();
        }
        Request.MergeFrom(other.Request);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::Uplay.SteamService.Req();
            }
            input.ReadMessage(Request);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::Uplay.SteamService.Req();
            }
            input.ReadMessage(Request);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Downstream : pb::IMessage<Downstream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Downstream> _parser = new pb::MessageParser<Downstream>(() => new Downstream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Downstream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.SteamService.SteamServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downstream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downstream(Downstream other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downstream Clone() {
      return new Downstream(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::Uplay.SteamService.Rsp response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.SteamService.Rsp Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Downstream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Downstream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Downstream other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::Uplay.SteamService.Rsp();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::Uplay.SteamService.Rsp();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::Uplay.SteamService.Rsp();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
