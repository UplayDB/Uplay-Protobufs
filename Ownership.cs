// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ownership.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Uplay.Ownership {

  /// <summary>Holder for reflection information generated from ownership.proto</summary>
  public static partial class OwnershipReflection {

    #region Descriptor
    /// <summary>File descriptor for ownership.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OwnershipReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cht1cGNfZHVtcF8xMC9vd25lcnNoaXAucHJvdG8SFW1nLnByb3RvY29sLm93",
            "bmVyc2hpcCJkCglTdG9yZURhdGESEQoJc3RvcmVfcmVmGAEgASgJEhUKDWNv",
            "bmZpZ3VyYXRpb24YAiABKAkSFAoMYXNzb2NpYXRpb25zGAMgAygNEhcKD3By",
            "b21vdGlvbl9zY29yZRgEIAEoDSJDChhVYmlTZXJ2aWNlc0R5bmFtaWNDb25m",
            "aWcSEwoLbHVuYV9hcHBfaWQYASABKAkSEgoKZ2ZuX2FwcF9pZBgCIAEoCSKV",
            "EwoJT3duZWRHYW1lEhIKCnByb2R1Y3RfaWQYASACKA0SDgoGY2Rfa2V5GAIg",
            "ASgJEg0KBW93bmVkGBQgASgIEhgKEG9yYml0X3Byb2R1Y3RfaWQYAyABKA0S",
            "FgoOY29uZmlnX3ZlcnNpb24YCyABKA0SEwoLZG93bmxvYWRfaWQYBSABKA0S",
            "GAoQZG93bmxvYWRfdmVyc2lvbhgMIAEoDRIQCgh0aXRsZV9pZBgGIAEoDRIQ",
            "CghwbGF0Zm9ybRgHIAEoDRIUCgxwcm9kdWN0X3R5cGUYCCABKA0SDQoFc3Rh",
            "dGUYDSABKA0SGgoSb3JiaXRfZ2FtZV92ZXJzaW9uGAkgASgNEh4KFm9yYml0",
            "X2dhbWVfdmVyc2lvbl91cmwYCiABKAkSHAoUcHJvZHVjdF9hc3NvY2lhdGlv",
            "bnMYECADKA0SFQoNY29uZmlndXJhdGlvbhgRIAEoCRIeChZkZXByZWNhdGVk",
            "X3Rlc3RfY29uZmlnGBIgASgIEhAKCHVwbGF5X2lkGBMgASgNEhcKD2xhdGVz",
            "dF9tYW5pZmVzdBgVIAEoCRIRCglnYW1lX2NvZGUYFiABKAkSDwoHYmFsYW5j",
            "ZRgXIAEoDRIWCg5lbmNyeXB0aW9uX2tleRgYIAEoCRIYChBhY3RpdmVfYnJh",
            "bmNoX2lkGBkgASgNEkoKEmF2YWlsYWJsZV9icmFuY2hlcxgaIAMoCzIuLm1n",
            "LnByb3RvY29sLm93bmVyc2hpcC5Pd25lZEdhbWUuUHJvZHVjdEJyYW5jaBIW",
            "Cg5hY3RpdmF0aW9uX2lkcxgbIAMoDRIQCghicmFuZF9pZBgcIAEoDRIrChxw",
            "ZW5kaW5nX2tleXN0b3JhZ2Vfb3duZXJzaGlwGB0gASgIOgVmYWxzZRIcChR1",
            "YmlzZXJ2aWNlc19zcGFjZV9pZBgeIAEoCRIaChJ1YmlzZXJ2aWNlc19hcHBf",
            "aWQYHyABKAkSNAoKc3RvcmVfZGF0YRggIAEoCzIgLm1nLnByb3RvY29sLm93",
            "bmVyc2hpcC5TdG9yZURhdGESVwoXcGFja2FnZV9vd25lcnNoaXBfc3RhdGUY",
            "ISABKA4yNi5tZy5wcm90b2NvbC5vd25lcnNoaXAuT3duZWRHYW1lLlBhY2th",
            "Z2VPd25lcnNoaXBTdGF0ZRJICg9zdXNwZW5zaW9uX3R5cGUYIiABKA4yLy5t",
            "Zy5wcm90b2NvbC5vd25lcnNoaXAuT3duZWRHYW1lLlN1c3BlbnNpb25UeXBl",
            "EjsKEWluZ2FtZV9zdG9yZV9kYXRhGCMgASgLMiAubWcucHJvdG9jb2wub3du",
            "ZXJzaGlwLlN0b3JlRGF0YRJICg9hY3RpdmF0aW9uX3R5cGUYJCABKA4yLy5t",
            "Zy5wcm90b2NvbC5vd25lcnNoaXAuT3duZWRHYW1lLkFjdGl2YXRpb25UeXBl",
            "Eh4KFmxvY2tlZF9ieV9zdWJzY3JpcHRpb24YJSABKAgSRgoOdGFyZ2V0X3Bh",
            "cnRuZXIYJiABKA4yLi5tZy5wcm90b2NvbC5vd25lcnNoaXAuT3duZWRHYW1l",
            "LlRhcmdldFBhcnRuZXISXwobZGVudXZvX2FjdGl2YXRpb25fb3ZlcndyaXRl",
            "GCcgASgOMjoubWcucHJvdG9jb2wub3duZXJzaGlwLk93bmVkR2FtZS5EZW51",
            "dm9BY3RpdmF0aW9uT3ZlcndyaXRlEhoKEnN1YnNjcmlwdGlvbl90eXBlcxgo",
            "IAMoDRJTChp1YmlzZXJ2aWNlc19keW5hbWljX2NvbmZpZxgpIAEoCzIvLm1n",
            "LnByb3RvY29sLm93bmVyc2hpcC5VYmlTZXJ2aWNlc0R5bmFtaWNDb25maWca",
            "NwoNUHJvZHVjdEJyYW5jaBIRCglicmFuY2hfaWQYASACKA0SEwoLYnJhbmNo",
            "X25hbWUYAiACKAkifQoVUGFja2FnZU93bmVyc2hpcFN0YXRlEh4KGlBhY2th",
            "Z2VPd25lcnNoaXBTdGF0ZV9GdWxsEAASHwobUGFja2FnZU93bmVyc2hpcFN0",
            "YXRlX1RyaWFsEAESIwofUGFja2FnZU93bmVyc2hpcFN0YXRlX1N1c3BlbmRl",
            "ZBACImUKDlN1c3BlbnNpb25UeXBlEhcKE1N1c3BlbnNpb25UeXBlX05vbmUQ",
            "ABIbChdTdXNwZW5zaW9uVHlwZV9DaGVhdGluZxABEh0KGVN1c3BlbnNpb25U",
            "eXBlX0hhcmFzc21lbnQQAiJOCg5BY3RpdmF0aW9uVHlwZRIbChdBY3RpdmF0",
            "aW9uVHlwZV9QdXJjaGFzZRAAEh8KG0FjdGl2YXRpb25UeXBlX1N1YnNjcmlw",
            "dGlvbhACInsKDVRhcmdldFBhcnRuZXISFgoSVGFyZ2V0UGFydG5lcl9Ob25l",
            "EAASGwoXVGFyZ2V0UGFydG5lcl9FcGljR2FtZXMQARIYChRUYXJnZXRQYXJ0",
            "bmVyX05lb3dpehACEhsKF1RhcmdldFBhcnRuZXJfTWljcm9zb2Z0EAMiawoZ",
            "RGVudXZvQWN0aXZhdGlvbk92ZXJ3cml0ZRIlCiFEZW51dm9BY3RpdmF0aW9u",
            "T3ZlcndyaXRlX0RlZmF1bHQQABInCiNEZW51dm9BY3RpdmF0aW9uT3Zlcndy",
            "aXRlX1RpbWVUcmlhbBABItICCgtQcm9kdWN0VHlwZRIUChBQcm9kdWN0VHlw",
            "ZV9HYW1lEAASFQoRUHJvZHVjdFR5cGVfQWRkT24QARIcChhQcm9kdWN0VHlw",
            "ZV9QcmVPcmRlckdhbWUQAhIdChlQcm9kdWN0VHlwZV9QcmVPcmRlckFkZE9u",
            "EAMSFQoRUHJvZHVjdFR5cGVfVHJpYWwQBBIYChRQcm9kdWN0VHlwZV9UZW1w",
            "bGF0ZRAFEhYKElByb2R1Y3RUeXBlX0J1bmRsZRAGEhoKFlByb2R1Y3RUeXBl",
            "X1NlYXNvblBhc3MQBxIaChZQcm9kdWN0VHlwZV9Db25zdW1hYmxlEAgSGAoU",
            "UHJvZHVjdFR5cGVfUHJlb3JkZXIQCRIfChtQcm9kdWN0VHlwZV9Db25zdW1h",
            "YmxlUGFja3MQChIdChlQcm9kdWN0VHlwZV9CdW5kbGVQYWNrYWdlEAsidAoF",
            "U3RhdGUSFQoRU3RhdGVfVW5hdmFpbGFibGUQABIVChFTdGF0ZV9QcmVSZWxl",
            "YXNlZBABEhYKElN0YXRlX0Rvd25sb2FkYWJsZRACEhIKDlN0YXRlX1JlbGVh",
            "c2VkEAMSEQoNU3RhdGVfRXhwaXJlZBAEImkKE093bmVkR2FtZXNDb250YWlu",
            "ZXISEwoLcHJvZHVjdF9pZHMYASADKA0SEQoJc2lnbmF0dXJlGAIgAigMEioK",
            "InZpc2libGVfb3JfaW5zdGFsbGFibGVfcHJvZHVjdF9pZHMYAyADKA0iQwoK",
            "T3duZWRHYW1lcxI1Cgtvd25lZF9nYW1lcxgBIAMoCzIgLm1nLnByb3RvY29s",
            "Lm93bmVyc2hpcC5Pd25lZEdhbWUizAIKDUluaXRpYWxpemVSZXESHgoWZGVw",
            "cmVjYXRlZF90ZXN0X2NvbmZpZxgBIAEoCBIYChBnZXRfYXNzb2NpYXRpb25z",
            "GAIgASgIEhUKDXByb3RvX3ZlcnNpb24YAyABKA0SSAoIYnJhbmNoZXMYBCAD",
            "KAsyNi5tZy5wcm90b2NvbC5vd25lcnNoaXAuSW5pdGlhbGl6ZVJlcS5Qcm9k",
            "dWN0QnJhbmNoRGF0YRIaCgt1c2Vfc3RhZ2luZxgFIAEoCDoFZmFsc2USDgoG",
            "Y2xhaW1zGAYgAygJEh4KEmNsaWVudF9pcF9vdmVycmlkZRhjIAEoDUICGAEa",
            "VAoRUHJvZHVjdEJyYW5jaERhdGESEgoKcHJvZHVjdF9pZBgBIAIoDRIYChBh",
            "Y3RpdmVfYnJhbmNoX2lkGAIgASgNEhEKCXBhc3N3b3JkcxgDIAMoCSLcAgoN",
            "SW5pdGlhbGl6ZVJzcBIPCgdzdWNjZXNzGAEgAigIEjYKC293bmVkX2dhbWVz",
            "GAIgASgLMiEubWcucHJvdG9jb2wub3duZXJzaGlwLk93bmVkR2FtZXMSSQoV",
            "b3duZWRfZ2FtZXNfY29udGFpbmVyGAMgASgLMioubWcucHJvdG9jb2wub3du",
            "ZXJzaGlwLk93bmVkR2FtZXNDb250YWluZXISHAoUa2V5X3NwYW1fYmFuX3Nl",
            "Y29uZHMYBCABKA0SRAoSc3Vic2NyaXB0aW9uX3N0YXRlGAUgASgOMigubWcu",
            "cHJvdG9jb2wub3duZXJzaGlwLlN1YnNjcmlwdGlvblN0YXRlEhkKEXN1YnNj",
            "cmlwdGlvbl90eXBlGAYgASgNEjgKDWNsYWltZWRfZ2FtZXMYByABKAsyIS5t",
            "Zy5wcm90b2NvbC5vd25lcnNoaXAuT3duZWRHYW1lcyJSCiBEZXByZWNhdGVk",
            "R2V0UHJvZHVjdEZyb21DZEtleVJlcRIOCgZjZF9rZXkYASACKAkSHgoWZGVw",
            "cmVjYXRlZF90ZXN0X2NvbmZpZxgCIAEoCCKEBAogRGVwcmVjYXRlZEdldFBy",
            "b2R1Y3RGcm9tQ2RLZXlSc3ASTgoGcmVzdWx0GAEgAigOMj4ubWcucHJvdG9j",
            "b2wub3duZXJzaGlwLkRlcHJlY2F0ZWRHZXRQcm9kdWN0RnJvbUNkS2V5UnNw",
            "LlJlc3VsdBIxCgdwcm9kdWN0GAIgASgLMiAubWcucHJvdG9jb2wub3duZXJz",
            "aGlwLk93bmVkR2FtZRI+ChRwcm9kdWN0X2Fzc29jaWF0aW9ucxgDIAMoCzIg",
            "Lm1nLnByb3RvY29sLm93bmVyc2hpcC5Pd25lZEdhbWUinAIKBlJlc3VsdBIS",
            "Cg5SZXN1bHRfU3VjY2VzcxABEhMKD1Jlc3VsdF9CYWRDZEtleRACEhQKEFJl",
            "c3VsdF9CYW5uZWRLZXkQAxIdChlSZXN1bHRfQmFubmVkRm9yQ2RLZXlTcGFt",
            "EAQSFgoSUmVzdWx0X1NlcnZlckVycm9yEAUSIAocUmVzdWx0X1VzZWRDZEtl",
            "eU90aGVyQWNjb3VudBAGEhoKFlJlc3VsdF9Ob3RBdmFpbGFibGVZZXQQBxIc",
            "ChhSZXN1bHRfTm9Mb25nZXJBdmFpbGFibGUQCBIfChtSZXN1bHRfTm90QXZh",
            "aWxhYmxlSW5SZWdpb24QCRIfChtSZXN1bHRfVXNlZENkS2V5VGhpc0FjY291",
            "bnQQCiJaChRSZWdpc3Rlck93bmVyc2hpcFJlcRISCgpwcm9kdWN0X2lkGAEg",
            "AigNEg4KBmNkX2tleRgCIAEoCRIeChZkZXByZWNhdGVkX3Rlc3RfY29uZmln",
            "GAMgASgIIl8KG1JlZ2lzdGVyT3duZXJzaGlwQnlDZEtleVJlcRIOCgZjZF9r",
            "ZXkYASACKAkSHgoWZGVwcmVjYXRlZF90ZXN0X2NvbmZpZxgCIAEoCBIQCgh1",
            "cGxheV9pZBgDIAEoDSI/ChxSZWdpc3Rlck93bmVyc2hpcFN0ZWFtUG9wUmVx",
            "Eg4KBnRpY2tldBgBIAMoCRIPCgdjb25maXJtGAIgAigIIpkCChxSZWdpc3Rl",
            "ck93bmVyc2hpcFN0ZWFtUG9wUnNwEkoKBnJlc3VsdBgBIAIoDjI6Lm1nLnBy",
            "b3RvY29sLm93bmVyc2hpcC5SZWdpc3Rlck93bmVyc2hpcFN0ZWFtUG9wUnNw",
            "LlJlc3VsdBIVCg1jb25maWd1cmF0aW9uGAIgAygJEiAKGHRpY2tldHNfY2xh",
            "aW1lZF9ieV9vdGhlchgDIAMoCSJ0CgZSZXN1bHQSEgoOUmVzdWx0X1N1Y2Nl",
            "c3MQARIYChRSZXN1bHRfSW52YWxpZFRpY2tldBACEiAKHFJlc3VsdF9UaWNr",
            "ZXRzQWxyZWFkeUNsYWltZWQQAxIaChZSZXN1bHRfTm9QYWNrYWdlc0ZvdW5k",
            "EAQidgoeUmVnaXN0ZXJPd25lcnNoaXBGcm9tT2N1bHVzUmVxEhQKDGFjY2Vz",
            "c190b2tlbhgBIAEoCRIVCg1vY3VsdXNfYXBwX2lkGAIgASgJEhYKDm9jdWx1",
            "c191c2VyX2lkGAMgASgJEg8KB3VzZXJfaWQYBCABKAkiowQKHlJlZ2lzdGVy",
            "T3duZXJzaGlwRnJvbU9jdWx1c1JzcBJMCgZyZXN1bHQYASACKA4yPC5tZy5w",
            "cm90b2NvbC5vd25lcnNoaXAuUmVnaXN0ZXJPd25lcnNoaXBGcm9tT2N1bHVz",
            "UnNwLlJlc3VsdBIaChJjbGFpbWVkX2FjY291bnRfaWQYAiABKAkSNgoLb3du",
            "ZWRfZ2FtZXMYAyABKAsyIS5tZy5wcm90b2NvbC5vd25lcnNoaXAuT3duZWRH",
            "YW1lcxJJChVvd25lZF9nYW1lc19jb250YWluZXIYBCABKAsyKi5tZy5wcm90",
            "b2NvbC5vd25lcnNoaXAuT3duZWRHYW1lc0NvbnRhaW5lciKTAgoGUmVzdWx0",
            "EhIKDlJlc3VsdF9TdWNjZXNzEAESHQoZUmVzdWx0X0ludmFsaWRBY2Nlc3NU",
            "b2tlbhACEhcKE1Jlc3VsdF9JbnZhbGlkQXBwSWQQAxIYChRSZXN1bHRfSW52",
            "YWxpZFVzZXJJZBAEEhkKFVJlc3VsdF9BbHJlYWR5Q2xhaW1lZBAFEhoKFlJl",
            "c3VsdF9Ob1BhY2thZ2VzRm91bmQQBhIYChRSZXN1bHRfU2VydmVyVGltZW91",
            "dBAHEhcKE1Jlc3VsdF9Ob3RoaW5nT3duZWQQCBIZChVSZXN1bHRfVW5rbm93",
            "bkZhaWx1cmUQCRIeChpSZXN1bHRfQWRkT3duZXJzaGlwRmFpbHVyZRAKIjgK",
            "HlJlZ2lzdGVyT3duZXJzaGlwRnJvbVdlR2FtZVJlcRIWCg5qc29uX3dlYl90",
            "b2tlbhgBIAEoCSKPAwoeUmVnaXN0ZXJPd25lcnNoaXBGcm9tV2VHYW1lUnNw",
            "EkwKBnJlc3VsdBgBIAEoDjI8Lm1nLnByb3RvY29sLm93bmVyc2hpcC5SZWdp",
            "c3Rlck93bmVyc2hpcEZyb21XZUdhbWVSc3AuUmVzdWx0EjYKC293bmVkX2dh",
            "bWVzGAIgASgLMiEubWcucHJvdG9jb2wub3duZXJzaGlwLk93bmVkR2FtZXMS",
            "SQoVb3duZWRfZ2FtZXNfY29udGFpbmVyGAMgASgLMioubWcucHJvdG9jb2wu",
            "b3duZXJzaGlwLk93bmVkR2FtZXNDb250YWluZXIimwEKBlJlc3VsdBISCg5S",
            "ZXN1bHRfU3VjY2VzcxABEhcKE1Jlc3VsdF9JbnZhbGlkVG9rZW4QAhIWChJS",
            "ZXN1bHRfU2VydmVyRXJyb3IQAxIZChVSZXN1bHRfVW5rbm93blByb2R1Y3QQ",
            "BBIXChNSZXN1bHRfTm90QXZhaWxhYmxlEAUSGAoUUmVzdWx0X1NlcnZlclRp",
            "bWVvdXQQBiLDBAoUUmVnaXN0ZXJPd25lcnNoaXBSc3ASQgoGcmVzdWx0GAEg",
            "AigOMjIubWcucHJvdG9jb2wub3duZXJzaGlwLlJlZ2lzdGVyT3duZXJzaGlw",
            "UnNwLlJlc3VsdBJJChVvd25lZF9nYW1lc19jb250YWluZXIYBCABKAsyKi5t",
            "Zy5wcm90b2NvbC5vd25lcnNoaXAuT3duZWRHYW1lc0NvbnRhaW5lchI2Cgtv",
            "d25lZF9nYW1lcxgFIAEoCzIhLm1nLnByb3RvY29sLm93bmVyc2hpcC5Pd25l",
            "ZEdhbWVzEhMKC2Jhbm5lZF90aW1lGAYgASgNEhoKEmNka2V5X2NsYWltZWRf",
            "ZGF0ZRgHIAEoCSKyAgoGUmVzdWx0EhIKDlJlc3VsdF9TdWNjZXNzEAESEwoP",
            "UmVzdWx0X0JhZENkS2V5EAISFAoQUmVzdWx0X0Jhbm5lZEtleRADEh0KGVJl",
            "c3VsdF9CYW5uZWRGb3JDZEtleVNwYW0QBBIWChJSZXN1bHRfU2VydmVyRXJy",
            "b3IQBRIgChxSZXN1bHRfVXNlZENkS2V5T3RoZXJBY2NvdW50EAYSFAoQUmVz",
            "dWx0X091dE9mS2V5cxAHEhoKFlJlc3VsdF9Ob3RBdmFpbGFibGVZZXQQCBIc",
            "ChhSZXN1bHRfTm9Mb25nZXJBdmFpbGFibGUQCRIfChtSZXN1bHRfTm90QXZh",
            "aWxhYmxlSW5SZWdpb24QChIfChtSZXN1bHRfVXNlZENkS2V5VGhpc0FjY291",
            "bnQQCyIsChVDbGFpbUtleXN0b3JhZ2VLZXlSZXESEwoLcHJvZHVjdF9pZHMY",
            "ASADKA0inAIKFUNsYWltS2V5c3RvcmFnZUtleVJzcBJDCgZyZXN1bHQYASAC",
            "KA4yMy5tZy5wcm90b2NvbC5vd25lcnNoaXAuQ2xhaW1LZXlzdG9yYWdlS2V5",
            "UnNwLlJlc3VsdBJWChFwcm9kdWN0X2tleV9wYWlycxgCIAMoCzI7Lm1nLnBy",
            "b3RvY29sLm93bmVyc2hpcC5DbGFpbUtleXN0b3JhZ2VLZXlSc3AuUHJvZHVj",
            "dEtleVBhaXIaNAoOUHJvZHVjdEtleVBhaXISEgoKcHJvZHVjdF9pZBgBIAIo",
            "DRIOCgZjZF9rZXkYAiACKAkiMAoGUmVzdWx0EhIKDlJlc3VsdF9TdWNjZXNz",
            "EAESEgoOUmVzdWx0X0ZhaWx1cmUQAiLJAQoXR2V0QmF0Y2hEb3dubG9hZFVy",
            "bHNSZXESTwoMdXJsX3JlcXVlc3RzGAEgAygLMjkubWcucHJvdG9jb2wub3du",
            "ZXJzaGlwLkdldEJhdGNoRG93bmxvYWRVcmxzUmVxLlVybFJlcXVlc3QaXQoK",
            "VXJsUmVxdWVzdBISCgpwcm9kdWN0X2lkGAEgAigNEhsKE3JlbGF0aXZlX2Zp",
            "bGVfcGF0aHMYAiADKAkSHgoWZGVwcmVjYXRlZF90ZXN0X2NvbmZpZxgDIAEo",
            "CCKmAwoXR2V0QmF0Y2hEb3dubG9hZFVybHNSc3ASUQoNdXJsX3Jlc3BvbnNl",
            "cxgBIAMoCzI6Lm1nLnByb3RvY29sLm93bmVyc2hpcC5HZXRCYXRjaERvd25s",
            "b2FkVXJsc1JzcC5VcmxSZXNwb25zZRITCgt0dGxfc2Vjb25kcxgCIAIoDRrK",
            "AQoLVXJsUmVzcG9uc2USRQoGcmVzdWx0GAEgAigOMjUubWcucHJvdG9jb2wu",
            "b3duZXJzaGlwLkdldEJhdGNoRG93bmxvYWRVcmxzUnNwLlJlc3VsdBIgChhk",
            "ZXByZWNhdGVkX2Rvd25sb2FkX3VybHMYAiADKAkSUgoNZG93bmxvYWRfdXJs",
            "cxgDIAMoCzI7Lm1nLnByb3RvY29sLm93bmVyc2hpcC5HZXRCYXRjaERvd25s",
            "b2FkVXJsc1JzcC5Eb3dubG9hZFVybHMaHAoMRG93bmxvYWRVcmxzEgwKBHVy",
            "bHMYASADKAkiOAoGUmVzdWx0EhIKDlJlc3VsdF9TdWNjZXNzEAESGgoWUmVz",
            "dWx0X1Byb2R1Y3ROb3RPd25lZBACImEKH0RlcHJlY2F0ZWRHZXRMYXRlc3RN",
            "YW5pZmVzdHNSZXESHgoWZGVwcmVjYXRlZF9wcm9kdWN0X2lkcxgBIAMoDRIe",
            "ChZkZXByZWNhdGVkX3Rlc3RfY29uZmlnGAIgASgIItgDCh9EZXByZWNhdGVk",
            "R2V0TGF0ZXN0TWFuaWZlc3RzUnNwEk0KBnJlc3VsdBgBIAIoDjI9Lm1nLnBy",
            "b3RvY29sLm93bmVyc2hpcC5EZXByZWNhdGVkR2V0TGF0ZXN0TWFuaWZlc3Rz",
            "UnNwLlJlc3VsdBJSCgltYW5pZmVzdHMYAiADKAsyPy5tZy5wcm90b2NvbC5v",
            "d25lcnNoaXAuRGVwcmVjYXRlZEdldExhdGVzdE1hbmlmZXN0c1JzcC5NYW5p",
            "ZmVzdBrbAQoITWFuaWZlc3QSVgoGcmVzdWx0GAEgAigOMkYubWcucHJvdG9j",
            "b2wub3duZXJzaGlwLkRlcHJlY2F0ZWRHZXRMYXRlc3RNYW5pZmVzdHNSc3Au",
            "TWFuaWZlc3QuUmVzdWx0EhIKCnByb2R1Y3RfaWQYAiACKA0SEAoIbWFuaWZl",
            "c3QYAyABKAkSHgoWZGVwcmVjYXRlZF90ZXN0X2NvbmZpZxgEIAEoCCIxCgZS",
            "ZXN1bHQSEgoOUmVzdWx0X1N1Y2Nlc3MQARITCg9SZXN1bHRfTm90Rm91bmQQ",
            "AiI0CgZSZXN1bHQSEgoOUmVzdWx0X1N1Y2Nlc3MQARIWChJSZXN1bHRfU2Vy",
            "dmVyRXJyb3IQAiJJChNHZXRQcm9kdWN0Q29uZmlnUmVxEhIKCnByb2R1Y3Rf",
            "aWQYASACKA0SHgoWZGVwcmVjYXRlZF90ZXN0X2NvbmZpZxgCIAEoCCLiAQoT",
            "R2V0UHJvZHVjdENvbmZpZ1JzcBJBCgZyZXN1bHQYASACKA4yMS5tZy5wcm90",
            "b2NvbC5vd25lcnNoaXAuR2V0UHJvZHVjdENvbmZpZ1JzcC5SZXN1bHQSHgoW",
            "ZGVwcmVjYXRlZF90ZXN0X2NvbmZpZxgCIAEoCBIVCg1jb25maWd1cmF0aW9u",
            "GAMgASgJIlEKBlJlc3VsdBISCg5SZXN1bHRfU3VjY2VzcxABEhMKD1Jlc3Vs",
            "dF9Ob3RGb3VuZBACEh4KGlJlc3VsdF9JbnRlcm5hbFNlcnZlckVycm9yEAMi",
            "0wIKFlN3aXRjaFByb2R1Y3RCcmFuY2hSZXESXgoQc3BlY2lmaWVkX2JyYW5j",
            "aBgBIAEoCzJELm1nLnByb3RvY29sLm93bmVyc2hpcC5Td2l0Y2hQcm9kdWN0",
            "QnJhbmNoUmVxLlNwZWNpZmllZFByb2R1Y3RCcmFuY2gSWgoOZGVmYXVsdF9i",
            "cmFuY2gYAiABKAsyQi5tZy5wcm90b2NvbC5vd25lcnNoaXAuU3dpdGNoUHJv",
            "ZHVjdEJyYW5jaFJlcS5EZWZhdWx0UHJvZHVjdEJyYW5jaBpRChZTcGVjaWZp",
            "ZWRQcm9kdWN0QnJhbmNoEhIKCnByb2R1Y3RfaWQYASACKA0SEQoJYnJhbmNo",
            "X2lkGAIgAigNEhAKCHBhc3N3b3JkGAMgASgJGioKFERlZmF1bHRQcm9kdWN0",
            "QnJhbmNoEhIKCnByb2R1Y3RfaWQYASACKA0ixAEKFlN3aXRjaFByb2R1Y3RC",
            "cmFuY2hSc3ASRAoGcmVzdWx0GAEgAigOMjQubWcucHJvdG9jb2wub3duZXJz",
            "aGlwLlN3aXRjaFByb2R1Y3RCcmFuY2hSc3AuUmVzdWx0EjMKCHByb2R1Y3Rz",
            "GAIgASgLMiEubWcucHJvdG9jb2wub3duZXJzaGlwLk93bmVkR2FtZXMiLwoG",
            "UmVzdWx0EhIKDlJlc3VsdF9TdWNjZXNzEAESEQoNUmVzdWx0X0RlbmllZBAC",
            "IpwBChZVbmxvY2tQcm9kdWN0QnJhbmNoUmVxEksKBmJyYW5jaBgBIAIoCzI7",
            "Lm1nLnByb3RvY29sLm93bmVyc2hpcC5VbmxvY2tQcm9kdWN0QnJhbmNoUmVx",
            "LlByb2R1Y3RCcmFuY2gaNQoNUHJvZHVjdEJyYW5jaBISCgpwcm9kdWN0X2lk",
            "GAEgAigNEhAKCHBhc3N3b3JkGAIgAigJIpUCChZVbmxvY2tQcm9kdWN0QnJh",
            "bmNoUnNwEkQKBnJlc3VsdBgBIAIoDjI0Lm1nLnByb3RvY29sLm93bmVyc2hp",
            "cC5VbmxvY2tQcm9kdWN0QnJhbmNoUnNwLlJlc3VsdBJLCgZicmFuY2gYAiAD",
            "KAsyOy5tZy5wcm90b2NvbC5vd25lcnNoaXAuVW5sb2NrUHJvZHVjdEJyYW5j",
            "aFJzcC5Qcm9kdWN0QnJhbmNoGjcKDVByb2R1Y3RCcmFuY2gSEQoJYnJhbmNo",
            "X2lkGAEgAigNEhMKC2JyYW5jaF9uYW1lGAIgAigJIi8KBlJlc3VsdBISCg5S",
            "ZXN1bHRfU3VjY2VzcxABEhEKDVJlc3VsdF9EZW5pZWQQAiKZAQoTR2V0VXBs",
            "YXlQQ1RpY2tldFJlcRIQCgh1cGxheV9pZBgBIAIoDRJFCghwbGF0Zm9ybRgC",
            "IAEoDjIzLm1nLnByb3RvY29sLm93bmVyc2hpcC5HZXRVcGxheVBDVGlja2V0",
            "UmVxLlBsYXRmb3JtIikKCFBsYXRmb3JtEgoKBk5vcm1hbBAAEggKBEx1bmEQ",
            "ARIHCgNHRk4QAiLLAgoTR2V0VXBsYXlQQ1RpY2tldFJzcBIPCgdzdWNjZXNz",
            "GAEgAigIEhcKD3VwbGF5X3BjX3RpY2tldBgCIAEoCRJbCgplcnJvcl9jb2Rl",
            "GAMgASgOMjQubWcucHJvdG9jb2wub3duZXJzaGlwLkdldFVwbGF5UENUaWNr",
            "ZXRSc3AuRXJyb3JDb2RlOhFFcnJvckNvZGVfVW5rbm93biKsAQoJRXJyb3JD",
            "b2RlEhUKEUVycm9yQ29kZV9Vbmtub3duEAESHQoZRXJyb3JDb2RlX1Byb2R1",
            "Y3ROb3RPd25lZBACEh4KGkVycm9yQ29kZV9Qcm9kdWN0U3VzcGVuZGVkEAMS",
            "JwojRXJyb3JDb2RlX1Byb2R1Y3RTdWJzY3JpcHRpb25Mb2NrZWQQBBIgChxF",
            "cnJvckNvZGVfUHJvZHVjdE5vdFJlbGVhc2VkEAUiQwocVXBsYXlDb3JlR2Ft",
            "ZUluaXRpYWxpemVkUHVzaBIPCgdzdWNjZXNzGAEgAigIEhIKCnByb2R1Y3Rf",
            "aWQYAiACKA0iUQobUmV0cnlVcGxheUNvcmVJbml0aWFsaXplUmVxEhIKCnBy",
            "b2R1Y3RfaWQYASADKA0SHgoWZGVwcmVjYXRlZF90ZXN0X2NvbmZpZxgCIAIo",
            "CCJ/ChNDb25zdW1lT3duZXJzaGlwUmVxEhIKCnByb2R1Y3RfaWQYASACKA0S",
            "EAoIcXVhbnRpdHkYAiACKA0SFgoOdHJhbnNhY3Rpb25faWQYAyACKAkSFwoP",
            "Z2FtZV9wcm9kdWN0X2lkGAQgAigNEhEKCXNpZ25hdHVyZRgFIAIoCSKyAQoT",
            "Q29uc3VtZU93bmVyc2hpcFJzcBJBCgZyZXN1bHQYASACKA4yMS5tZy5wcm90",
            "b2NvbC5vd25lcnNoaXAuQ29uc3VtZU93bmVyc2hpcFJzcC5SZXN1bHQSEQoJ",
            "c2lnbmF0dXJlGAIgASgJIkUKBlJlc3VsdBINCglSZXN1bHRfT2sQABIZChVS",
            "ZXN1bHRfTm90RW5vdWdoSXRlbXMQARIRCg1SZXN1bHRfRmFpbGVkEAIiPwoP",
            "R2V0R2FtZVRva2VuUmVxEhgKEGFjdGl2YXRpb25fdG9rZW4YASABKAwSEgoK",
            "cHJvZHVjdF9pZBgCIAEoDSL4AQoPR2V0R2FtZVRva2VuUnNwEj0KBnJlc3Vs",
            "dBgBIAIoDjItLm1nLnByb3RvY29sLm93bmVyc2hpcC5HZXRHYW1lVG9rZW5S",
            "c3AuUmVzdWx0EhIKCmdhbWVfdG9rZW4YAiABKAwikQEKBlJlc3VsdBISCg5S",
            "ZXN1bHRfU3VjY2VzcxAAEhMKD1Jlc3VsdF9Ob3RPd25lZBABEhIKDlJlc3Vs",
            "dF9GYWlsdXJlEAISHgoaUmVzdWx0X0V4Y2VlZGVkQWN0aXZhdGlvbnMQAxIS",
            "Cg5SZXN1bHRfVGltZU91dBAEEhYKElJlc3VsdF9TZXJ2ZXJFcnJvchAFIkIK",
            "FEdldEdhbWVUaW1lVGlja2V0UmVxEhIKCnByb2R1Y3RfaWQYASABKA0SFgoO",
            "cmVxdWVzdF90aWNrZXQYAiABKAwi4gEKFEdldEdhbWVUaW1lVGlja2V0UnNw",
            "EkIKBnJlc3VsdBgBIAIoDjIyLm1nLnByb3RvY29sLm93bmVyc2hpcC5HZXRH",
            "YW1lVGltZVRpY2tldFJzcC5SZXN1bHQSEwoLdGltZV90aWNrZXQYAiABKAwi",
            "cQoGUmVzdWx0EhIKDlJlc3VsdF9TdWNjZXNzEAASEwoPUmVzdWx0X05vdE93",
            "bmVkEAESEgoOUmVzdWx0X0ZhaWx1cmUQAhISCg5SZXN1bHRfVGltZU91dBAD",
            "EhYKElJlc3VsdF9TZXJ2ZXJFcnJvchAEIjAKGkdldEdhbWVXaXRoZHJhd2Fs",
            "UmlnaHRzUmVxEhIKCnByb2R1Y3RfaWQYASABKA0iSAoaR2V0R2FtZVdpdGhk",
            "cmF3YWxSaWdodHNSc3ASDwoHc3VjY2VzcxgBIAEoCBIZChF3aXRoZHJhd2Fs",
            "X3JpZ2h0cxgCIAEoCCIyChxXYWl2ZUdhbWVXaXRoZHJhd2FsUmlnaHRzUmVx",
            "EhIKCnByb2R1Y3RfaWQYASABKA0iLwocV2FpdmVHYW1lV2l0aGRyYXdhbFJp",
            "Z2h0c1JzcBIPCgdzdWNjZXNzGAEgASgIIiYKEFNpZ25Pd25lcnNoaXBSZXES",
            "EgoKcHJvZHVjdF9pZBgBIAEoDSJdChBTaWduT3duZXJzaGlwUnNwEg8KB3N1",
            "Y2Nlc3MYASABKAgSEQoJYnJhbmNoX2lkGAIgASgNEhIKCmV4cGlyYXRpb24Y",
            "AyABKAQSEQoJc2lnbmF0dXJlGAQgASgMIicKEU93bmVyc2hpcFRva2VuUmVx",
            "EhIKCnByb2R1Y3RfaWQYASABKA0iRwoRT3duZXJzaGlwVG9rZW5Sc3ASDwoH",
            "c3VjY2VzcxgBIAEoCBINCgV0b2tlbhgCIAEoCRISCgpleHBpcmF0aW9uGAMg",
            "ASgEIi4KHVJlZ2lzdGVyVGVtcG9yYXJ5T3duZXJzaGlwUmVxEg0KBXRva2Vu",
            "GAEgASgJIlgKHVJlZ2lzdGVyVGVtcG9yYXJ5T3duZXJzaGlwUnNwEg8KB3N1",
            "Y2Nlc3MYASABKAgSEQoJZXJyb3JfbXNnGAIgASgJEhMKC3Byb2R1Y3RfaWRz",
            "GAMgAygNIsQPCgNSZXESEgoKcmVxdWVzdF9pZBgBIAIoDRI8Cg5pbml0aWFs",
            "aXplX3JlcRgCIAEoCzIkLm1nLnByb3RvY29sLm93bmVyc2hpcC5Jbml0aWFs",
            "aXplUmVxEksKFnJlZ2lzdGVyX293bmVyc2hpcF9yZXEYAyABKAsyKy5tZy5w",
            "cm90b2NvbC5vd25lcnNoaXAuUmVnaXN0ZXJPd25lcnNoaXBSZXESXAogcmVn",
            "aXN0ZXJfb3duZXJzaGlwX2J5X2NkX2tleV9yZXEYBSABKAsyMi5tZy5wcm90",
            "b2NvbC5vd25lcnNoaXAuUmVnaXN0ZXJPd25lcnNoaXBCeUNkS2V5UmVxEmcK",
            "JmRlcHJlY2F0ZWRfZ2V0X3Byb2R1Y3RfZnJvbV9jZF9rZXlfcmVxGAYgASgL",
            "MjcubWcucHJvdG9jb2wub3duZXJzaGlwLkRlcHJlY2F0ZWRHZXRQcm9kdWN0",
            "RnJvbUNkS2V5UmVxEkoKFmdldF9wcm9kdWN0X2NvbmZpZ19yZXEYCSABKAsy",
            "Ki5tZy5wcm90b2NvbC5vd25lcnNoaXAuR2V0UHJvZHVjdENvbmZpZ1JlcRJj",
            "CiNkZXByZWNhdGVkX2dldF9sYXRlc3RfbWFuaWZlc3RzX3JlcRgKIAEoCzI2",
            "Lm1nLnByb3RvY29sLm93bmVyc2hpcC5EZXByZWNhdGVkR2V0TGF0ZXN0TWFu",
            "aWZlc3RzUmVxElMKG2dldF9iYXRjaF9kb3dubG9hZF91cmxzX3JlcRgMIAEo",
            "CzIuLm1nLnByb3RvY29sLm93bmVyc2hpcC5HZXRCYXRjaERvd25sb2FkVXJs",
            "c1JlcRJLChdnZXRfdXBsYXlfcGNfdGlja2V0X3JlcRgOIAEoCzIqLm1nLnBy",
            "b3RvY29sLm93bmVyc2hpcC5HZXRVcGxheVBDVGlja2V0UmVxElsKH3JldHJ5",
            "X3VwbGF5X2NvcmVfaW5pdGlhbGl6ZV9yZXEYDyABKAsyMi5tZy5wcm90b2Nv",
            "bC5vd25lcnNoaXAuUmV0cnlVcGxheUNvcmVJbml0aWFsaXplUmVxEkkKFWNv",
            "bnN1bWVfb3duZXJzaGlwX3JlcRgQIAEoCzIqLm1nLnByb3RvY29sLm93bmVy",
            "c2hpcC5Db25zdW1lT3duZXJzaGlwUmVxElAKGXN3aXRjaF9wcm9kdWN0X2Jy",
            "YW5jaF9yZXEYESABKAsyLS5tZy5wcm90b2NvbC5vd25lcnNoaXAuU3dpdGNo",
            "UHJvZHVjdEJyYW5jaFJlcRJQChl1bmxvY2tfcHJvZHVjdF9icmFuY2hfcmVx",
            "GBIgASgLMi0ubWcucHJvdG9jb2wub3duZXJzaGlwLlVubG9ja1Byb2R1Y3RC",
            "cmFuY2hSZXESXQogcmVnaXN0ZXJfb3duZXJzaGlwX3N0ZWFtX3BvcF9yZXEY",
            "EyABKAsyMy5tZy5wcm90b2NvbC5vd25lcnNoaXAuUmVnaXN0ZXJPd25lcnNo",
            "aXBTdGVhbVBvcFJlcRJhCiJyZWdpc3Rlcl9vd25lcnNoaXBfZnJvbV9vY3Vs",
            "dXNfcmVxGBQgASgLMjUubWcucHJvdG9jb2wub3duZXJzaGlwLlJlZ2lzdGVy",
            "T3duZXJzaGlwRnJvbU9jdWx1c1JlcRJCChJnZXRfZ2FtZV90b2tlbl9yZXEY",
            "FSABKAsyJi5tZy5wcm90b2NvbC5vd25lcnNoaXAuR2V0R2FtZVRva2VuUmVx",
            "Ek4KGGNsYWltX2tleXN0b3JhZ2Vfa2V5X3JlcRgWIAEoCzIsLm1nLnByb3Rv",
            "Y29sLm93bmVyc2hpcC5DbGFpbUtleXN0b3JhZ2VLZXlSZXESTQoYZ2V0X2dh",
            "bWVfdGltZV90aWNrZXRfcmVxGBcgASgLMisubWcucHJvdG9jb2wub3duZXJz",
            "aGlwLkdldEdhbWVUaW1lVGlja2V0UmVxElkKHmdldF9nYW1lX3dpdGhkcmF3",
            "YWxfcmlnaHRzX3JlcRgYIAEoCzIxLm1nLnByb3RvY29sLm93bmVyc2hpcC5H",
            "ZXRHYW1lV2l0aGRyYXdhbFJpZ2h0c1JlcRJdCiB3YWl2ZV9nYW1lX3dpdGhk",
            "cmF3YWxfcmlnaHRzX3JlcRgZIAEoCzIzLm1nLnByb3RvY29sLm93bmVyc2hp",
            "cC5XYWl2ZUdhbWVXaXRoZHJhd2FsUmlnaHRzUmVxEkMKEnNpZ25fb3duZXJz",
            "aGlwX3JlcRgaIAEoCzInLm1nLnByb3RvY29sLm93bmVyc2hpcC5TaWduT3du",
            "ZXJzaGlwUmVxEmEKInJlZ2lzdGVyX293bmVyc2hpcF9mcm9tX3dlZ2FtZV9y",
            "ZXEYGyABKAsyNS5tZy5wcm90b2NvbC5vd25lcnNoaXAuUmVnaXN0ZXJPd25l",
            "cnNoaXBGcm9tV2VHYW1lUmVxEkUKE293bmVyc2hpcF90b2tlbl9yZXEYHCAB",
            "KAsyKC5tZy5wcm90b2NvbC5vd25lcnNoaXAuT3duZXJzaGlwVG9rZW5SZXES",
            "XgogcmVnaXN0ZXJfdGVtcG9yYXJ5X293bmVyc2hpcF9yZXEYHSABKAsyNC5t",
            "Zy5wcm90b2NvbC5vd25lcnNoaXAuUmVnaXN0ZXJUZW1wb3JhcnlPd25lcnNo",
            "aXBSZXFKBAgLEAxKBAgNEA4iiQ4KA1JzcBISCgpyZXF1ZXN0X2lkGAEgAigN",
            "EjwKDmluaXRpYWxpemVfcnNwGAIgASgLMiQubWcucHJvdG9jb2wub3duZXJz",
            "aGlwLkluaXRpYWxpemVSc3ASSwoWcmVnaXN0ZXJfb3duZXJzaGlwX3JzcBgD",
            "IAEoCzIrLm1nLnByb3RvY29sLm93bmVyc2hpcC5SZWdpc3Rlck93bmVyc2hp",
            "cFJzcBJnCiZkZXByZWNhdGVkX2dldF9wcm9kdWN0X2Zyb21fY2Rfa2V5X3Jz",
            "cBgFIAEoCzI3Lm1nLnByb3RvY29sLm93bmVyc2hpcC5EZXByZWNhdGVkR2V0",
            "UHJvZHVjdEZyb21DZEtleVJzcBJKChZnZXRfcHJvZHVjdF9jb25maWdfcnNw",
            "GAkgASgLMioubWcucHJvdG9jb2wub3duZXJzaGlwLkdldFByb2R1Y3RDb25m",
            "aWdSc3ASYwojZGVwcmVjYXRlZF9nZXRfbGF0ZXN0X21hbmlmZXN0c19yc3AY",
            "CiABKAsyNi5tZy5wcm90b2NvbC5vd25lcnNoaXAuRGVwcmVjYXRlZEdldExh",
            "dGVzdE1hbmlmZXN0c1JzcBJTChtnZXRfYmF0Y2hfZG93bmxvYWRfdXJsc19y",
            "c3AYDCABKAsyLi5tZy5wcm90b2NvbC5vd25lcnNoaXAuR2V0QmF0Y2hEb3du",
            "bG9hZFVybHNSc3ASSwoXZ2V0X3VwbGF5X3BjX3RpY2tldF9yc3AYDSABKAsy",
            "Ki5tZy5wcm90b2NvbC5vd25lcnNoaXAuR2V0VXBsYXlQQ1RpY2tldFJzcBJJ",
            "ChVjb25zdW1lX293bmVyc2hpcF9yc3AYDyABKAsyKi5tZy5wcm90b2NvbC5v",
            "d25lcnNoaXAuQ29uc3VtZU93bmVyc2hpcFJzcBJQChlzd2l0Y2hfcHJvZHVj",
            "dF9icmFuY2hfcnNwGBAgASgLMi0ubWcucHJvdG9jb2wub3duZXJzaGlwLlN3",
            "aXRjaFByb2R1Y3RCcmFuY2hSc3ASUAoZdW5sb2NrX3Byb2R1Y3RfYnJhbmNo",
            "X3JzcBgRIAEoCzItLm1nLnByb3RvY29sLm93bmVyc2hpcC5VbmxvY2tQcm9k",
            "dWN0QnJhbmNoUnNwEl0KIHJlZ2lzdGVyX293bmVyc2hpcF9zdGVhbV9wb3Bf",
            "cnNwGBIgASgLMjMubWcucHJvdG9jb2wub3duZXJzaGlwLlJlZ2lzdGVyT3du",
            "ZXJzaGlwU3RlYW1Qb3BSc3ASYQoicmVnaXN0ZXJfb3duZXJzaGlwX2Zyb21f",
            "b2N1bHVzX3JzcBgTIAEoCzI1Lm1nLnByb3RvY29sLm93bmVyc2hpcC5SZWdp",
            "c3Rlck93bmVyc2hpcEZyb21PY3VsdXNSc3ASQgoSZ2V0X2dhbWVfdG9rZW5f",
            "cnNwGBQgASgLMiYubWcucHJvdG9jb2wub3duZXJzaGlwLkdldEdhbWVUb2tl",
            "blJzcBJOChhjbGFpbV9rZXlzdG9yYWdlX2tleV9yc3AYFSABKAsyLC5tZy5w",
            "cm90b2NvbC5vd25lcnNoaXAuQ2xhaW1LZXlzdG9yYWdlS2V5UnNwEk0KGGdl",
            "dF9nYW1lX3RpbWVfdGlja2V0X3JzcBgWIAEoCzIrLm1nLnByb3RvY29sLm93",
            "bmVyc2hpcC5HZXRHYW1lVGltZVRpY2tldFJzcBJZCh5nZXRfZ2FtZV93aXRo",
            "ZHJhd2FsX3JpZ2h0c19yc3AYFyABKAsyMS5tZy5wcm90b2NvbC5vd25lcnNo",
            "aXAuR2V0R2FtZVdpdGhkcmF3YWxSaWdodHNSc3ASXQogd2FpdmVfZ2FtZV93",
            "aXRoZHJhd2FsX3JpZ2h0c19yc3AYGCABKAsyMy5tZy5wcm90b2NvbC5vd25l",
            "cnNoaXAuV2FpdmVHYW1lV2l0aGRyYXdhbFJpZ2h0c1JzcBJDChJzaWduX293",
            "bmVyc2hpcF9yc3AYGSABKAsyJy5tZy5wcm90b2NvbC5vd25lcnNoaXAuU2ln",
            "bk93bmVyc2hpcFJzcBJhCiJyZWdpc3Rlcl9vd25lcnNoaXBfZnJvbV93ZWdh",
            "bWVfcnNwGBogASgLMjUubWcucHJvdG9jb2wub3duZXJzaGlwLlJlZ2lzdGVy",
            "T3duZXJzaGlwRnJvbVdlR2FtZVJzcBJFChNvd25lcnNoaXBfdG9rZW5fcnNw",
            "GBsgASgLMigubWcucHJvdG9jb2wub3duZXJzaGlwLk93bmVyc2hpcFRva2Vu",
            "UnNwEl4KIHJlZ2lzdGVyX3RlbXBvcmFyeV9vd25lcnNoaXBfcnNwGBwgASgL",
            "MjQubWcucHJvdG9jb2wub3duZXJzaGlwLlJlZ2lzdGVyVGVtcG9yYXJ5T3du",
            "ZXJzaGlwUnNwSgQICxAMSgQIDhAPIqwBCg1Pd25lZEdhbWVQdXNoEkkKFW93",
            "bmVkX2dhbWVzX2NvbnRhaW5lchgCIAEoCzIqLm1nLnByb3RvY29sLm93bmVy",
            "c2hpcC5Pd25lZEdhbWVzQ29udGFpbmVyEjYKC293bmVkX2dhbWVzGAQgASgL",
            "MiEubWcucHJvdG9jb2wub3duZXJzaGlwLk93bmVkR2FtZXMSGAoQcmVtb3Zl",
            "ZF9wcm9kdWN0cxgFIAMoDSJzChBTdWJzY3JpcHRpb25QdXNoEkQKEnN1YnNj",
            "cmlwdGlvbl9zdGF0ZRgBIAEoDjIoLm1nLnByb3RvY29sLm93bmVyc2hpcC5T",
            "dWJzY3JpcHRpb25TdGF0ZRIZChFzdWJzY3JpcHRpb25fdHlwZRgCIAEoDSLo",
            "AQoEUHVzaBI9Cg9vd25lZF9nYW1lX3B1c2gYASABKAsyJC5tZy5wcm90b2Nv",
            "bC5vd25lcnNoaXAuT3duZWRHYW1lUHVzaBJdCiB1cGxheV9jb3JlX2dhbWVf",
            "aW5pdGlhbGl6ZWRfcHVzaBgCIAEoCzIzLm1nLnByb3RvY29sLm93bmVyc2hp",
            "cC5VcGxheUNvcmVHYW1lSW5pdGlhbGl6ZWRQdXNoEkIKEXN1YnNjcmlwdGlv",
            "bl9wdXNoGAMgASgLMicubWcucHJvdG9jb2wub3duZXJzaGlwLlN1YnNjcmlw",
            "dGlvblB1c2giNwoIVXBzdHJlYW0SKwoHcmVxdWVzdBgBIAEoCzIaLm1nLnBy",
            "b3RvY29sLm93bmVyc2hpcC5SZXEiZQoKRG93bnN0cmVhbRIsCghyZXNwb25z",
            "ZRgBIAEoCzIaLm1nLnByb3RvY29sLm93bmVyc2hpcC5Sc3ASKQoEcHVzaBgC",
            "IAEoCzIbLm1nLnByb3RvY29sLm93bmVyc2hpcC5QdXNoKnMKEVN1YnNjcmlw",
            "dGlvblN0YXRlEh0KGVN1YnNjcmlwdGlvblN0YXRlX05vU3RhdGUQABIgChxT",
            "dWJzY3JpcHRpb25TdGF0ZV9TdWJzY3JpYmVkEAESHQoZU3Vic2NyaXB0aW9u",
            "U3RhdGVfRXhwaXJlZBAC"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Uplay.Ownership.SubscriptionState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.StoreData), global::Uplay.Ownership.StoreData.Parser, new[]{ "StoreRef", "Configuration", "Associations", "PromotionScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.UbiServicesDynamicConfig), global::Uplay.Ownership.UbiServicesDynamicConfig.Parser, new[]{ "LunaAppId", "GfnAppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.OwnedGame), global::Uplay.Ownership.OwnedGame.Parser, new[]{ "ProductId", "CdKey", "Owned", "OrbitProductId", "ConfigVersion", "DownloadId", "DownloadVersion", "TitleId", "Platform", "ProductType", "State", "OrbitGameVersion", "OrbitGameVersionUrl", "ProductAssociations", "Configuration", "DeprecatedTestConfig", "UplayId", "LatestManifest", "GameCode", "Balance", "EncryptionKey", "ActiveBranchId", "AvailableBranches", "ActivationIds", "BrandId", "PendingKeystorageOwnership", "UbiservicesSpaceId", "UbiservicesAppId", "StoreData", "PackageOwnershipState", "SuspensionType", "IngameStoreData", "ActivationType", "LockedBySubscription", "TargetPartner", "DenuvoActivationOverwrite", "SubscriptionTypes", "UbiservicesDynamicConfig" }, null, new[]{ typeof(global::Uplay.Ownership.OwnedGame.Types.PackageOwnershipState), typeof(global::Uplay.Ownership.OwnedGame.Types.SuspensionType), typeof(global::Uplay.Ownership.OwnedGame.Types.ActivationType), typeof(global::Uplay.Ownership.OwnedGame.Types.TargetPartner), typeof(global::Uplay.Ownership.OwnedGame.Types.DenuvoActivationOverwrite), typeof(global::Uplay.Ownership.OwnedGame.Types.ProductType), typeof(global::Uplay.Ownership.OwnedGame.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.OwnedGame.Types.ProductBranch), global::Uplay.Ownership.OwnedGame.Types.ProductBranch.Parser, new[]{ "BranchId", "BranchName" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.OwnedGamesContainer), global::Uplay.Ownership.OwnedGamesContainer.Parser, new[]{ "ProductIds", "Signature", "VisibleOrInstallableProductIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.OwnedGames), global::Uplay.Ownership.OwnedGames.Parser, new[]{ "OwnedGames_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.InitializeReq), global::Uplay.Ownership.InitializeReq.Parser, new[]{ "DeprecatedTestConfig", "GetAssociations", "ProtoVersion", "Branches", "UseStaging", "Claims", "ClientIpOverride" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.InitializeReq.Types.ProductBranchData), global::Uplay.Ownership.InitializeReq.Types.ProductBranchData.Parser, new[]{ "ProductId", "ActiveBranchId", "Passwords" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.InitializeRsp), global::Uplay.Ownership.InitializeRsp.Parser, new[]{ "Success", "OwnedGames", "OwnedGamesContainer", "KeySpamBanSeconds", "SubscriptionState", "SubscriptionType", "ClaimedGames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.DeprecatedGetProductFromCdKeyReq), global::Uplay.Ownership.DeprecatedGetProductFromCdKeyReq.Parser, new[]{ "CdKey", "DeprecatedTestConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp), global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp.Parser, new[]{ "Result", "Product", "ProductAssociations" }, null, new[]{ typeof(global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterOwnershipReq), global::Uplay.Ownership.RegisterOwnershipReq.Parser, new[]{ "ProductId", "CdKey", "DeprecatedTestConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterOwnershipByCdKeyReq), global::Uplay.Ownership.RegisterOwnershipByCdKeyReq.Parser, new[]{ "CdKey", "DeprecatedTestConfig", "UplayId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterOwnershipSteamPopReq), global::Uplay.Ownership.RegisterOwnershipSteamPopReq.Parser, new[]{ "Ticket", "Confirm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterOwnershipSteamPopRsp), global::Uplay.Ownership.RegisterOwnershipSteamPopRsp.Parser, new[]{ "Result", "Configuration", "TicketsClaimedByOther" }, null, new[]{ typeof(global::Uplay.Ownership.RegisterOwnershipSteamPopRsp.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterOwnershipFromOculusReq), global::Uplay.Ownership.RegisterOwnershipFromOculusReq.Parser, new[]{ "AccessToken", "OculusAppId", "OculusUserId", "UserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterOwnershipFromOculusRsp), global::Uplay.Ownership.RegisterOwnershipFromOculusRsp.Parser, new[]{ "Result", "ClaimedAccountId", "OwnedGames", "OwnedGamesContainer" }, null, new[]{ typeof(global::Uplay.Ownership.RegisterOwnershipFromOculusRsp.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterOwnershipFromWeGameReq), global::Uplay.Ownership.RegisterOwnershipFromWeGameReq.Parser, new[]{ "JsonWebToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp), global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp.Parser, new[]{ "Result", "OwnedGames", "OwnedGamesContainer" }, null, new[]{ typeof(global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterOwnershipRsp), global::Uplay.Ownership.RegisterOwnershipRsp.Parser, new[]{ "Result", "OwnedGamesContainer", "OwnedGames", "BannedTime", "CdkeyClaimedDate" }, null, new[]{ typeof(global::Uplay.Ownership.RegisterOwnershipRsp.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.ClaimKeystorageKeyReq), global::Uplay.Ownership.ClaimKeystorageKeyReq.Parser, new[]{ "ProductIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.ClaimKeystorageKeyRsp), global::Uplay.Ownership.ClaimKeystorageKeyRsp.Parser, new[]{ "Result", "ProductKeyPairs" }, null, new[]{ typeof(global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.Result) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.ProductKeyPair), global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.ProductKeyPair.Parser, new[]{ "ProductId", "CdKey" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetBatchDownloadUrlsReq), global::Uplay.Ownership.GetBatchDownloadUrlsReq.Parser, new[]{ "UrlRequests" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetBatchDownloadUrlsReq.Types.UrlRequest), global::Uplay.Ownership.GetBatchDownloadUrlsReq.Types.UrlRequest.Parser, new[]{ "ProductId", "RelativeFilePaths", "DeprecatedTestConfig" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetBatchDownloadUrlsRsp), global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Parser, new[]{ "UrlResponses", "TtlSeconds" }, null, new[]{ typeof(global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.Result) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.UrlResponse), global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.UrlResponse.Parser, new[]{ "Result", "DeprecatedDownloadUrls", "DownloadUrls" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.DownloadUrls), global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.DownloadUrls.Parser, new[]{ "Urls" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.DeprecatedGetLatestManifestsReq), global::Uplay.Ownership.DeprecatedGetLatestManifestsReq.Parser, new[]{ "DeprecatedProductIds", "DeprecatedTestConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp), global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Parser, new[]{ "Result", "Manifests" }, null, new[]{ typeof(global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Result) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest), global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest.Parser, new[]{ "Result", "ProductId", "Manifest_", "DeprecatedTestConfig" }, null, new[]{ typeof(global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest.Types.Result) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetProductConfigReq), global::Uplay.Ownership.GetProductConfigReq.Parser, new[]{ "ProductId", "DeprecatedTestConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetProductConfigRsp), global::Uplay.Ownership.GetProductConfigRsp.Parser, new[]{ "Result", "DeprecatedTestConfig", "Configuration" }, null, new[]{ typeof(global::Uplay.Ownership.GetProductConfigRsp.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.SwitchProductBranchReq), global::Uplay.Ownership.SwitchProductBranchReq.Parser, new[]{ "SpecifiedBranch", "DefaultBranch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.SwitchProductBranchReq.Types.SpecifiedProductBranch), global::Uplay.Ownership.SwitchProductBranchReq.Types.SpecifiedProductBranch.Parser, new[]{ "ProductId", "BranchId", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.SwitchProductBranchReq.Types.DefaultProductBranch), global::Uplay.Ownership.SwitchProductBranchReq.Types.DefaultProductBranch.Parser, new[]{ "ProductId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.SwitchProductBranchRsp), global::Uplay.Ownership.SwitchProductBranchRsp.Parser, new[]{ "Result", "Products" }, null, new[]{ typeof(global::Uplay.Ownership.SwitchProductBranchRsp.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.UnlockProductBranchReq), global::Uplay.Ownership.UnlockProductBranchReq.Parser, new[]{ "Branch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.UnlockProductBranchReq.Types.ProductBranch), global::Uplay.Ownership.UnlockProductBranchReq.Types.ProductBranch.Parser, new[]{ "ProductId", "Password" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.UnlockProductBranchRsp), global::Uplay.Ownership.UnlockProductBranchRsp.Parser, new[]{ "Result", "Branch" }, null, new[]{ typeof(global::Uplay.Ownership.UnlockProductBranchRsp.Types.Result) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.UnlockProductBranchRsp.Types.ProductBranch), global::Uplay.Ownership.UnlockProductBranchRsp.Types.ProductBranch.Parser, new[]{ "BranchId", "BranchName" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetUplayPCTicketReq), global::Uplay.Ownership.GetUplayPCTicketReq.Parser, new[]{ "UplayId", "Platform" }, null, new[]{ typeof(global::Uplay.Ownership.GetUplayPCTicketReq.Types.Platform) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetUplayPCTicketRsp), global::Uplay.Ownership.GetUplayPCTicketRsp.Parser, new[]{ "Success", "UplayPcTicket", "ErrorCode" }, null, new[]{ typeof(global::Uplay.Ownership.GetUplayPCTicketRsp.Types.ErrorCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.UplayCoreGameInitializedPush), global::Uplay.Ownership.UplayCoreGameInitializedPush.Parser, new[]{ "Success", "ProductId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RetryUplayCoreInitializeReq), global::Uplay.Ownership.RetryUplayCoreInitializeReq.Parser, new[]{ "ProductId", "DeprecatedTestConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.ConsumeOwnershipReq), global::Uplay.Ownership.ConsumeOwnershipReq.Parser, new[]{ "ProductId", "Quantity", "TransactionId", "GameProductId", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.ConsumeOwnershipRsp), global::Uplay.Ownership.ConsumeOwnershipRsp.Parser, new[]{ "Result", "Signature" }, null, new[]{ typeof(global::Uplay.Ownership.ConsumeOwnershipRsp.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetGameTokenReq), global::Uplay.Ownership.GetGameTokenReq.Parser, new[]{ "ActivationToken", "ProductId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetGameTokenRsp), global::Uplay.Ownership.GetGameTokenRsp.Parser, new[]{ "Result", "GameToken" }, null, new[]{ typeof(global::Uplay.Ownership.GetGameTokenRsp.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetGameTimeTicketReq), global::Uplay.Ownership.GetGameTimeTicketReq.Parser, new[]{ "ProductId", "RequestTicket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetGameTimeTicketRsp), global::Uplay.Ownership.GetGameTimeTicketRsp.Parser, new[]{ "Result", "TimeTicket" }, null, new[]{ typeof(global::Uplay.Ownership.GetGameTimeTicketRsp.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetGameWithdrawalRightsReq), global::Uplay.Ownership.GetGameWithdrawalRightsReq.Parser, new[]{ "ProductId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.GetGameWithdrawalRightsRsp), global::Uplay.Ownership.GetGameWithdrawalRightsRsp.Parser, new[]{ "Success", "WithdrawalRights" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.WaiveGameWithdrawalRightsReq), global::Uplay.Ownership.WaiveGameWithdrawalRightsReq.Parser, new[]{ "ProductId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.WaiveGameWithdrawalRightsRsp), global::Uplay.Ownership.WaiveGameWithdrawalRightsRsp.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.SignOwnershipReq), global::Uplay.Ownership.SignOwnershipReq.Parser, new[]{ "ProductId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.SignOwnershipRsp), global::Uplay.Ownership.SignOwnershipRsp.Parser, new[]{ "Success", "BranchId", "Expiration", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.OwnershipTokenReq), global::Uplay.Ownership.OwnershipTokenReq.Parser, new[]{ "ProductId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.OwnershipTokenRsp), global::Uplay.Ownership.OwnershipTokenRsp.Parser, new[]{ "Success", "Token", "Expiration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterTemporaryOwnershipReq), global::Uplay.Ownership.RegisterTemporaryOwnershipReq.Parser, new[]{ "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.RegisterTemporaryOwnershipRsp), global::Uplay.Ownership.RegisterTemporaryOwnershipRsp.Parser, new[]{ "Success", "ErrorMsg", "ProductIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.Req), global::Uplay.Ownership.Req.Parser, new[]{ "RequestId", "InitializeReq", "RegisterOwnershipReq", "RegisterOwnershipByCdKeyReq", "DeprecatedGetProductFromCdKeyReq", "GetProductConfigReq", "DeprecatedGetLatestManifestsReq", "GetBatchDownloadUrlsReq", "GetUplayPcTicketReq", "RetryUplayCoreInitializeReq", "ConsumeOwnershipReq", "SwitchProductBranchReq", "UnlockProductBranchReq", "RegisterOwnershipSteamPopReq", "RegisterOwnershipFromOculusReq", "GetGameTokenReq", "ClaimKeystorageKeyReq", "GetGameTimeTicketReq", "GetGameWithdrawalRightsReq", "WaiveGameWithdrawalRightsReq", "SignOwnershipReq", "RegisterOwnershipFromWegameReq", "OwnershipTokenReq", "RegisterTemporaryOwnershipReq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.Rsp), global::Uplay.Ownership.Rsp.Parser, new[]{ "RequestId", "InitializeRsp", "RegisterOwnershipRsp", "DeprecatedGetProductFromCdKeyRsp", "GetProductConfigRsp", "DeprecatedGetLatestManifestsRsp", "GetBatchDownloadUrlsRsp", "GetUplayPcTicketRsp", "ConsumeOwnershipRsp", "SwitchProductBranchRsp", "UnlockProductBranchRsp", "RegisterOwnershipSteamPopRsp", "RegisterOwnershipFromOculusRsp", "GetGameTokenRsp", "ClaimKeystorageKeyRsp", "GetGameTimeTicketRsp", "GetGameWithdrawalRightsRsp", "WaiveGameWithdrawalRightsRsp", "SignOwnershipRsp", "RegisterOwnershipFromWegameRsp", "OwnershipTokenRsp", "RegisterTemporaryOwnershipRsp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.OwnedGamePush), global::Uplay.Ownership.OwnedGamePush.Parser, new[]{ "OwnedGamesContainer", "OwnedGames", "RemovedProducts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.SubscriptionPush), global::Uplay.Ownership.SubscriptionPush.Parser, new[]{ "SubscriptionState", "SubscriptionType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.Push), global::Uplay.Ownership.Push.Parser, new[]{ "OwnedGamePush", "UplayCoreGameInitializedPush", "SubscriptionPush" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.Upstream), global::Uplay.Ownership.Upstream.Parser, new[]{ "Request" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Ownership.Downstream), global::Uplay.Ownership.Downstream.Parser, new[]{ "Response", "Push" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum SubscriptionState {
    [pbr::OriginalName("SubscriptionState_NoState")] NoState = 0,
    [pbr::OriginalName("SubscriptionState_Subscribed")] Subscribed = 1,
    [pbr::OriginalName("SubscriptionState_Expired")] Expired = 2,
  }

  #endregion

  #region Messages
  public sealed partial class StoreData : pb::IMessage<StoreData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StoreData> _parser = new pb::MessageParser<StoreData>(() => new StoreData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StoreData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StoreData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StoreData(StoreData other) : this() {
      _hasBits0 = other._hasBits0;
      storeRef_ = other.storeRef_;
      configuration_ = other.configuration_;
      associations_ = other.associations_.Clone();
      promotionScore_ = other.promotionScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StoreData Clone() {
      return new StoreData(this);
    }

    /// <summary>Field number for the "store_ref" field.</summary>
    public const int StoreRefFieldNumber = 1;
    private readonly static string StoreRefDefaultValue = "";

    private string storeRef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StoreRef {
      get { return storeRef_ ?? StoreRefDefaultValue; }
      set {
        storeRef_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "store_ref" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStoreRef {
      get { return storeRef_ != null; }
    }
    /// <summary>Clears the value of the "store_ref" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStoreRef() {
      storeRef_ = null;
    }

    /// <summary>Field number for the "configuration" field.</summary>
    public const int ConfigurationFieldNumber = 2;
    private readonly static string ConfigurationDefaultValue = "";

    private string configuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Configuration {
      get { return configuration_ ?? ConfigurationDefaultValue; }
      set {
        configuration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "configuration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConfiguration {
      get { return configuration_ != null; }
    }
    /// <summary>Clears the value of the "configuration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfiguration() {
      configuration_ = null;
    }

    /// <summary>Field number for the "associations" field.</summary>
    public const int AssociationsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_associations_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> associations_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Associations {
      get { return associations_; }
    }

    /// <summary>Field number for the "promotion_score" field.</summary>
    public const int PromotionScoreFieldNumber = 4;
    private readonly static uint PromotionScoreDefaultValue = 0;

    private uint promotionScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PromotionScore {
      get { if ((_hasBits0 & 1) != 0) { return promotionScore_; } else { return PromotionScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        promotionScore_ = value;
      }
    }
    /// <summary>Gets whether the "promotion_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPromotionScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "promotion_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPromotionScore() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StoreData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StoreData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StoreRef != other.StoreRef) return false;
      if (Configuration != other.Configuration) return false;
      if(!associations_.Equals(other.associations_)) return false;
      if (PromotionScore != other.PromotionScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStoreRef) hash ^= StoreRef.GetHashCode();
      if (HasConfiguration) hash ^= Configuration.GetHashCode();
      hash ^= associations_.GetHashCode();
      if (HasPromotionScore) hash ^= PromotionScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStoreRef) {
        output.WriteRawTag(10);
        output.WriteString(StoreRef);
      }
      if (HasConfiguration) {
        output.WriteRawTag(18);
        output.WriteString(Configuration);
      }
      associations_.WriteTo(output, _repeated_associations_codec);
      if (HasPromotionScore) {
        output.WriteRawTag(32);
        output.WriteUInt32(PromotionScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStoreRef) {
        output.WriteRawTag(10);
        output.WriteString(StoreRef);
      }
      if (HasConfiguration) {
        output.WriteRawTag(18);
        output.WriteString(Configuration);
      }
      associations_.WriteTo(ref output, _repeated_associations_codec);
      if (HasPromotionScore) {
        output.WriteRawTag(32);
        output.WriteUInt32(PromotionScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStoreRef) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoreRef);
      }
      if (HasConfiguration) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Configuration);
      }
      size += associations_.CalculateSize(_repeated_associations_codec);
      if (HasPromotionScore) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PromotionScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StoreData other) {
      if (other == null) {
        return;
      }
      if (other.HasStoreRef) {
        StoreRef = other.StoreRef;
      }
      if (other.HasConfiguration) {
        Configuration = other.Configuration;
      }
      associations_.Add(other.associations_);
      if (other.HasPromotionScore) {
        PromotionScore = other.PromotionScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StoreRef = input.ReadString();
            break;
          }
          case 18: {
            Configuration = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            associations_.AddEntriesFrom(input, _repeated_associations_codec);
            break;
          }
          case 32: {
            PromotionScore = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StoreRef = input.ReadString();
            break;
          }
          case 18: {
            Configuration = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            associations_.AddEntriesFrom(ref input, _repeated_associations_codec);
            break;
          }
          case 32: {
            PromotionScore = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UbiServicesDynamicConfig : pb::IMessage<UbiServicesDynamicConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UbiServicesDynamicConfig> _parser = new pb::MessageParser<UbiServicesDynamicConfig>(() => new UbiServicesDynamicConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UbiServicesDynamicConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UbiServicesDynamicConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UbiServicesDynamicConfig(UbiServicesDynamicConfig other) : this() {
      lunaAppId_ = other.lunaAppId_;
      gfnAppId_ = other.gfnAppId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UbiServicesDynamicConfig Clone() {
      return new UbiServicesDynamicConfig(this);
    }

    /// <summary>Field number for the "luna_app_id" field.</summary>
    public const int LunaAppIdFieldNumber = 1;
    private readonly static string LunaAppIdDefaultValue = "";

    private string lunaAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LunaAppId {
      get { return lunaAppId_ ?? LunaAppIdDefaultValue; }
      set {
        lunaAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "luna_app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLunaAppId {
      get { return lunaAppId_ != null; }
    }
    /// <summary>Clears the value of the "luna_app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLunaAppId() {
      lunaAppId_ = null;
    }

    /// <summary>Field number for the "gfn_app_id" field.</summary>
    public const int GfnAppIdFieldNumber = 2;
    private readonly static string GfnAppIdDefaultValue = "";

    private string gfnAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GfnAppId {
      get { return gfnAppId_ ?? GfnAppIdDefaultValue; }
      set {
        gfnAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gfn_app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGfnAppId {
      get { return gfnAppId_ != null; }
    }
    /// <summary>Clears the value of the "gfn_app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGfnAppId() {
      gfnAppId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UbiServicesDynamicConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UbiServicesDynamicConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LunaAppId != other.LunaAppId) return false;
      if (GfnAppId != other.GfnAppId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLunaAppId) hash ^= LunaAppId.GetHashCode();
      if (HasGfnAppId) hash ^= GfnAppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLunaAppId) {
        output.WriteRawTag(10);
        output.WriteString(LunaAppId);
      }
      if (HasGfnAppId) {
        output.WriteRawTag(18);
        output.WriteString(GfnAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLunaAppId) {
        output.WriteRawTag(10);
        output.WriteString(LunaAppId);
      }
      if (HasGfnAppId) {
        output.WriteRawTag(18);
        output.WriteString(GfnAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLunaAppId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LunaAppId);
      }
      if (HasGfnAppId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GfnAppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UbiServicesDynamicConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasLunaAppId) {
        LunaAppId = other.LunaAppId;
      }
      if (other.HasGfnAppId) {
        GfnAppId = other.GfnAppId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LunaAppId = input.ReadString();
            break;
          }
          case 18: {
            GfnAppId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LunaAppId = input.ReadString();
            break;
          }
          case 18: {
            GfnAppId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OwnedGame : pb::IMessage<OwnedGame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OwnedGame> _parser = new pb::MessageParser<OwnedGame>(() => new OwnedGame());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OwnedGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGame(OwnedGame other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      cdKey_ = other.cdKey_;
      owned_ = other.owned_;
      orbitProductId_ = other.orbitProductId_;
      configVersion_ = other.configVersion_;
      downloadId_ = other.downloadId_;
      downloadVersion_ = other.downloadVersion_;
      titleId_ = other.titleId_;
      platform_ = other.platform_;
      productType_ = other.productType_;
      state_ = other.state_;
      orbitGameVersion_ = other.orbitGameVersion_;
      orbitGameVersionUrl_ = other.orbitGameVersionUrl_;
      productAssociations_ = other.productAssociations_.Clone();
      configuration_ = other.configuration_;
      deprecatedTestConfig_ = other.deprecatedTestConfig_;
      uplayId_ = other.uplayId_;
      latestManifest_ = other.latestManifest_;
      gameCode_ = other.gameCode_;
      balance_ = other.balance_;
      encryptionKey_ = other.encryptionKey_;
      activeBranchId_ = other.activeBranchId_;
      availableBranches_ = other.availableBranches_.Clone();
      activationIds_ = other.activationIds_.Clone();
      brandId_ = other.brandId_;
      pendingKeystorageOwnership_ = other.pendingKeystorageOwnership_;
      ubiservicesSpaceId_ = other.ubiservicesSpaceId_;
      ubiservicesAppId_ = other.ubiservicesAppId_;
      storeData_ = other.storeData_ != null ? other.storeData_.Clone() : null;
      packageOwnershipState_ = other.packageOwnershipState_;
      suspensionType_ = other.suspensionType_;
      ingameStoreData_ = other.ingameStoreData_ != null ? other.ingameStoreData_.Clone() : null;
      activationType_ = other.activationType_;
      lockedBySubscription_ = other.lockedBySubscription_;
      targetPartner_ = other.targetPartner_;
      denuvoActivationOverwrite_ = other.denuvoActivationOverwrite_;
      subscriptionTypes_ = other.subscriptionTypes_.Clone();
      ubiservicesDynamicConfig_ = other.ubiservicesDynamicConfig_ != null ? other.ubiservicesDynamicConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGame Clone() {
      return new OwnedGame(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cd_key" field.</summary>
    public const int CdKeyFieldNumber = 2;
    private readonly static string CdKeyDefaultValue = "";

    private string cdKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CdKey {
      get { return cdKey_ ?? CdKeyDefaultValue; }
      set {
        cdKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cd_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCdKey {
      get { return cdKey_ != null; }
    }
    /// <summary>Clears the value of the "cd_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCdKey() {
      cdKey_ = null;
    }

    /// <summary>Field number for the "owned" field.</summary>
    public const int OwnedFieldNumber = 20;
    private readonly static bool OwnedDefaultValue = false;

    private bool owned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Owned {
      get { if ((_hasBits0 & 4096) != 0) { return owned_; } else { return OwnedDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        owned_ = value;
      }
    }
    /// <summary>Gets whether the "owned" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwned {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "owned" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwned() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "orbit_product_id" field.</summary>
    public const int OrbitProductIdFieldNumber = 3;
    private readonly static uint OrbitProductIdDefaultValue = 0;

    private uint orbitProductId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OrbitProductId {
      get { if ((_hasBits0 & 2) != 0) { return orbitProductId_; } else { return OrbitProductIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        orbitProductId_ = value;
      }
    }
    /// <summary>Gets whether the "orbit_product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrbitProductId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "orbit_product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrbitProductId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "config_version" field.</summary>
    public const int ConfigVersionFieldNumber = 11;
    private readonly static uint ConfigVersionDefaultValue = 0;

    private uint configVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConfigVersion {
      get { if ((_hasBits0 & 128) != 0) { return configVersion_; } else { return ConfigVersionDefaultValue; } }
      set {
        _hasBits0 |= 128;
        configVersion_ = value;
      }
    }
    /// <summary>Gets whether the "config_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConfigVersion {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "config_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfigVersion() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "download_id" field.</summary>
    public const int DownloadIdFieldNumber = 5;
    private readonly static uint DownloadIdDefaultValue = 0;

    private uint downloadId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DownloadId {
      get { if ((_hasBits0 & 4) != 0) { return downloadId_; } else { return DownloadIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        downloadId_ = value;
      }
    }
    /// <summary>Gets whether the "download_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDownloadId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "download_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDownloadId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "download_version" field.</summary>
    public const int DownloadVersionFieldNumber = 12;
    private readonly static uint DownloadVersionDefaultValue = 0;

    private uint downloadVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DownloadVersion {
      get { if ((_hasBits0 & 256) != 0) { return downloadVersion_; } else { return DownloadVersionDefaultValue; } }
      set {
        _hasBits0 |= 256;
        downloadVersion_ = value;
      }
    }
    /// <summary>Gets whether the "download_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDownloadVersion {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "download_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDownloadVersion() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "title_id" field.</summary>
    public const int TitleIdFieldNumber = 6;
    private readonly static uint TitleIdDefaultValue = 0;

    private uint titleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TitleId {
      get { if ((_hasBits0 & 8) != 0) { return titleId_; } else { return TitleIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        titleId_ = value;
      }
    }
    /// <summary>Gets whether the "title_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitleId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "title_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitleId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 7;
    private readonly static uint PlatformDefaultValue = 0;

    private uint platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Platform {
      get { if ((_hasBits0 & 16) != 0) { return platform_; } else { return PlatformDefaultValue; } }
      set {
        _hasBits0 |= 16;
        platform_ = value;
      }
    }
    /// <summary>Gets whether the "platform" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlatform {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "platform" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatform() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "product_type" field.</summary>
    public const int ProductTypeFieldNumber = 8;
    private readonly static uint ProductTypeDefaultValue = 0;

    private uint productType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductType {
      get { if ((_hasBits0 & 32) != 0) { return productType_; } else { return ProductTypeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        productType_ = value;
      }
    }
    /// <summary>Gets whether the "product_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductType {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "product_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductType() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 13;
    private readonly static uint StateDefaultValue = 0;

    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint State {
      get { if ((_hasBits0 & 512) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 512;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "orbit_game_version" field.</summary>
    public const int OrbitGameVersionFieldNumber = 9;
    private readonly static uint OrbitGameVersionDefaultValue = 0;

    private uint orbitGameVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OrbitGameVersion {
      get { if ((_hasBits0 & 64) != 0) { return orbitGameVersion_; } else { return OrbitGameVersionDefaultValue; } }
      set {
        _hasBits0 |= 64;
        orbitGameVersion_ = value;
      }
    }
    /// <summary>Gets whether the "orbit_game_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrbitGameVersion {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "orbit_game_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrbitGameVersion() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "orbit_game_version_url" field.</summary>
    public const int OrbitGameVersionUrlFieldNumber = 10;
    private readonly static string OrbitGameVersionUrlDefaultValue = "";

    private string orbitGameVersionUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrbitGameVersionUrl {
      get { return orbitGameVersionUrl_ ?? OrbitGameVersionUrlDefaultValue; }
      set {
        orbitGameVersionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "orbit_game_version_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrbitGameVersionUrl {
      get { return orbitGameVersionUrl_ != null; }
    }
    /// <summary>Clears the value of the "orbit_game_version_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrbitGameVersionUrl() {
      orbitGameVersionUrl_ = null;
    }

    /// <summary>Field number for the "product_associations" field.</summary>
    public const int ProductAssociationsFieldNumber = 16;
    private static readonly pb::FieldCodec<uint> _repeated_productAssociations_codec
        = pb::FieldCodec.ForUInt32(128);
    private readonly pbc::RepeatedField<uint> productAssociations_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ProductAssociations {
      get { return productAssociations_; }
    }

    /// <summary>Field number for the "configuration" field.</summary>
    public const int ConfigurationFieldNumber = 17;
    private readonly static string ConfigurationDefaultValue = "";

    private string configuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Configuration {
      get { return configuration_ ?? ConfigurationDefaultValue; }
      set {
        configuration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "configuration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConfiguration {
      get { return configuration_ != null; }
    }
    /// <summary>Clears the value of the "configuration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfiguration() {
      configuration_ = null;
    }

    /// <summary>Field number for the "deprecated_test_config" field.</summary>
    public const int DeprecatedTestConfigFieldNumber = 18;
    private readonly static bool DeprecatedTestConfigDefaultValue = false;

    private bool deprecatedTestConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeprecatedTestConfig {
      get { if ((_hasBits0 & 1024) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        deprecatedTestConfig_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeprecatedTestConfig {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_test_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeprecatedTestConfig() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "uplay_id" field.</summary>
    public const int UplayIdFieldNumber = 19;
    private readonly static uint UplayIdDefaultValue = 0;

    private uint uplayId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UplayId {
      get { if ((_hasBits0 & 2048) != 0) { return uplayId_; } else { return UplayIdDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        uplayId_ = value;
      }
    }
    /// <summary>Gets whether the "uplay_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUplayId {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "uplay_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUplayId() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "latest_manifest" field.</summary>
    public const int LatestManifestFieldNumber = 21;
    private readonly static string LatestManifestDefaultValue = "";

    private string latestManifest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LatestManifest {
      get { return latestManifest_ ?? LatestManifestDefaultValue; }
      set {
        latestManifest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "latest_manifest" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLatestManifest {
      get { return latestManifest_ != null; }
    }
    /// <summary>Clears the value of the "latest_manifest" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLatestManifest() {
      latestManifest_ = null;
    }

    /// <summary>Field number for the "game_code" field.</summary>
    public const int GameCodeFieldNumber = 22;
    private readonly static string GameCodeDefaultValue = "";

    private string gameCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameCode {
      get { return gameCode_ ?? GameCodeDefaultValue; }
      set {
        gameCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameCode {
      get { return gameCode_ != null; }
    }
    /// <summary>Clears the value of the "game_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameCode() {
      gameCode_ = null;
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 23;
    private readonly static uint BalanceDefaultValue = 0;

    private uint balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Balance {
      get { if ((_hasBits0 & 8192) != 0) { return balance_; } else { return BalanceDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        balance_ = value;
      }
    }
    /// <summary>Gets whether the "balance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBalance {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "balance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBalance() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "encryption_key" field.</summary>
    public const int EncryptionKeyFieldNumber = 24;
    private readonly static string EncryptionKeyDefaultValue = "";

    private string encryptionKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EncryptionKey {
      get { return encryptionKey_ ?? EncryptionKeyDefaultValue; }
      set {
        encryptionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encryption_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEncryptionKey {
      get { return encryptionKey_ != null; }
    }
    /// <summary>Clears the value of the "encryption_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEncryptionKey() {
      encryptionKey_ = null;
    }

    /// <summary>Field number for the "active_branch_id" field.</summary>
    public const int ActiveBranchIdFieldNumber = 25;
    private readonly static uint ActiveBranchIdDefaultValue = 0;

    private uint activeBranchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ActiveBranchId {
      get { if ((_hasBits0 & 16384) != 0) { return activeBranchId_; } else { return ActiveBranchIdDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        activeBranchId_ = value;
      }
    }
    /// <summary>Gets whether the "active_branch_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActiveBranchId {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "active_branch_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActiveBranchId() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "available_branches" field.</summary>
    public const int AvailableBranchesFieldNumber = 26;
    private static readonly pb::FieldCodec<global::Uplay.Ownership.OwnedGame.Types.ProductBranch> _repeated_availableBranches_codec
        = pb::FieldCodec.ForMessage(210, global::Uplay.Ownership.OwnedGame.Types.ProductBranch.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Ownership.OwnedGame.Types.ProductBranch> availableBranches_ = new pbc::RepeatedField<global::Uplay.Ownership.OwnedGame.Types.ProductBranch>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Ownership.OwnedGame.Types.ProductBranch> AvailableBranches {
      get { return availableBranches_; }
    }

    /// <summary>Field number for the "activation_ids" field.</summary>
    public const int ActivationIdsFieldNumber = 27;
    private static readonly pb::FieldCodec<uint> _repeated_activationIds_codec
        = pb::FieldCodec.ForUInt32(216);
    private readonly pbc::RepeatedField<uint> activationIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ActivationIds {
      get { return activationIds_; }
    }

    /// <summary>Field number for the "brand_id" field.</summary>
    public const int BrandIdFieldNumber = 28;
    private readonly static uint BrandIdDefaultValue = 0;

    private uint brandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrandId {
      get { if ((_hasBits0 & 32768) != 0) { return brandId_; } else { return BrandIdDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        brandId_ = value;
      }
    }
    /// <summary>Gets whether the "brand_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrandId {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "brand_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrandId() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "pending_keystorage_ownership" field.</summary>
    public const int PendingKeystorageOwnershipFieldNumber = 29;
    private readonly static bool PendingKeystorageOwnershipDefaultValue = false;

    private bool pendingKeystorageOwnership_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PendingKeystorageOwnership {
      get { if ((_hasBits0 & 65536) != 0) { return pendingKeystorageOwnership_; } else { return PendingKeystorageOwnershipDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        pendingKeystorageOwnership_ = value;
      }
    }
    /// <summary>Gets whether the "pending_keystorage_ownership" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPendingKeystorageOwnership {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "pending_keystorage_ownership" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPendingKeystorageOwnership() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "ubiservices_space_id" field.</summary>
    public const int UbiservicesSpaceIdFieldNumber = 30;
    private readonly static string UbiservicesSpaceIdDefaultValue = "";

    private string ubiservicesSpaceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UbiservicesSpaceId {
      get { return ubiservicesSpaceId_ ?? UbiservicesSpaceIdDefaultValue; }
      set {
        ubiservicesSpaceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ubiservices_space_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUbiservicesSpaceId {
      get { return ubiservicesSpaceId_ != null; }
    }
    /// <summary>Clears the value of the "ubiservices_space_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUbiservicesSpaceId() {
      ubiservicesSpaceId_ = null;
    }

    /// <summary>Field number for the "ubiservices_app_id" field.</summary>
    public const int UbiservicesAppIdFieldNumber = 31;
    private readonly static string UbiservicesAppIdDefaultValue = "";

    private string ubiservicesAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UbiservicesAppId {
      get { return ubiservicesAppId_ ?? UbiservicesAppIdDefaultValue; }
      set {
        ubiservicesAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ubiservices_app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUbiservicesAppId {
      get { return ubiservicesAppId_ != null; }
    }
    /// <summary>Clears the value of the "ubiservices_app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUbiservicesAppId() {
      ubiservicesAppId_ = null;
    }

    /// <summary>Field number for the "store_data" field.</summary>
    public const int StoreDataFieldNumber = 32;
    private global::Uplay.Ownership.StoreData storeData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.StoreData StoreData {
      get { return storeData_; }
      set {
        storeData_ = value;
      }
    }

    /// <summary>Field number for the "package_ownership_state" field.</summary>
    public const int PackageOwnershipStateFieldNumber = 33;
    private readonly static global::Uplay.Ownership.OwnedGame.Types.PackageOwnershipState PackageOwnershipStateDefaultValue = global::Uplay.Ownership.OwnedGame.Types.PackageOwnershipState.Full;

    private global::Uplay.Ownership.OwnedGame.Types.PackageOwnershipState packageOwnershipState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGame.Types.PackageOwnershipState PackageOwnershipState {
      get { if ((_hasBits0 & 131072) != 0) { return packageOwnershipState_; } else { return PackageOwnershipStateDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        packageOwnershipState_ = value;
      }
    }
    /// <summary>Gets whether the "package_ownership_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPackageOwnershipState {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "package_ownership_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPackageOwnershipState() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "suspension_type" field.</summary>
    public const int SuspensionTypeFieldNumber = 34;
    private readonly static global::Uplay.Ownership.OwnedGame.Types.SuspensionType SuspensionTypeDefaultValue = global::Uplay.Ownership.OwnedGame.Types.SuspensionType.None;

    private global::Uplay.Ownership.OwnedGame.Types.SuspensionType suspensionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGame.Types.SuspensionType SuspensionType {
      get { if ((_hasBits0 & 262144) != 0) { return suspensionType_; } else { return SuspensionTypeDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        suspensionType_ = value;
      }
    }
    /// <summary>Gets whether the "suspension_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuspensionType {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "suspension_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuspensionType() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "ingame_store_data" field.</summary>
    public const int IngameStoreDataFieldNumber = 35;
    private global::Uplay.Ownership.StoreData ingameStoreData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.StoreData IngameStoreData {
      get { return ingameStoreData_; }
      set {
        ingameStoreData_ = value;
      }
    }

    /// <summary>Field number for the "activation_type" field.</summary>
    public const int ActivationTypeFieldNumber = 36;
    private readonly static global::Uplay.Ownership.OwnedGame.Types.ActivationType ActivationTypeDefaultValue = global::Uplay.Ownership.OwnedGame.Types.ActivationType.Purchase;

    private global::Uplay.Ownership.OwnedGame.Types.ActivationType activationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGame.Types.ActivationType ActivationType {
      get { if ((_hasBits0 & 524288) != 0) { return activationType_; } else { return ActivationTypeDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        activationType_ = value;
      }
    }
    /// <summary>Gets whether the "activation_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivationType {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "activation_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivationType() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "locked_by_subscription" field.</summary>
    public const int LockedBySubscriptionFieldNumber = 37;
    private readonly static bool LockedBySubscriptionDefaultValue = false;

    private bool lockedBySubscription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LockedBySubscription {
      get { if ((_hasBits0 & 1048576) != 0) { return lockedBySubscription_; } else { return LockedBySubscriptionDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        lockedBySubscription_ = value;
      }
    }
    /// <summary>Gets whether the "locked_by_subscription" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLockedBySubscription {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "locked_by_subscription" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLockedBySubscription() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "target_partner" field.</summary>
    public const int TargetPartnerFieldNumber = 38;
    private readonly static global::Uplay.Ownership.OwnedGame.Types.TargetPartner TargetPartnerDefaultValue = global::Uplay.Ownership.OwnedGame.Types.TargetPartner.None;

    private global::Uplay.Ownership.OwnedGame.Types.TargetPartner targetPartner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGame.Types.TargetPartner TargetPartner {
      get { if ((_hasBits0 & 2097152) != 0) { return targetPartner_; } else { return TargetPartnerDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        targetPartner_ = value;
      }
    }
    /// <summary>Gets whether the "target_partner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetPartner {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "target_partner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetPartner() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "denuvo_activation_overwrite" field.</summary>
    public const int DenuvoActivationOverwriteFieldNumber = 39;
    private readonly static global::Uplay.Ownership.OwnedGame.Types.DenuvoActivationOverwrite DenuvoActivationOverwriteDefaultValue = global::Uplay.Ownership.OwnedGame.Types.DenuvoActivationOverwrite.Default;

    private global::Uplay.Ownership.OwnedGame.Types.DenuvoActivationOverwrite denuvoActivationOverwrite_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGame.Types.DenuvoActivationOverwrite DenuvoActivationOverwrite {
      get { if ((_hasBits0 & 4194304) != 0) { return denuvoActivationOverwrite_; } else { return DenuvoActivationOverwriteDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        denuvoActivationOverwrite_ = value;
      }
    }
    /// <summary>Gets whether the "denuvo_activation_overwrite" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDenuvoActivationOverwrite {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "denuvo_activation_overwrite" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDenuvoActivationOverwrite() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "subscription_types" field.</summary>
    public const int SubscriptionTypesFieldNumber = 40;
    private static readonly pb::FieldCodec<uint> _repeated_subscriptionTypes_codec
        = pb::FieldCodec.ForUInt32(320);
    private readonly pbc::RepeatedField<uint> subscriptionTypes_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> SubscriptionTypes {
      get { return subscriptionTypes_; }
    }

    /// <summary>Field number for the "ubiservices_dynamic_config" field.</summary>
    public const int UbiservicesDynamicConfigFieldNumber = 41;
    private global::Uplay.Ownership.UbiServicesDynamicConfig ubiservicesDynamicConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.UbiServicesDynamicConfig UbiservicesDynamicConfig {
      get { return ubiservicesDynamicConfig_; }
      set {
        ubiservicesDynamicConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OwnedGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OwnedGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (CdKey != other.CdKey) return false;
      if (Owned != other.Owned) return false;
      if (OrbitProductId != other.OrbitProductId) return false;
      if (ConfigVersion != other.ConfigVersion) return false;
      if (DownloadId != other.DownloadId) return false;
      if (DownloadVersion != other.DownloadVersion) return false;
      if (TitleId != other.TitleId) return false;
      if (Platform != other.Platform) return false;
      if (ProductType != other.ProductType) return false;
      if (State != other.State) return false;
      if (OrbitGameVersion != other.OrbitGameVersion) return false;
      if (OrbitGameVersionUrl != other.OrbitGameVersionUrl) return false;
      if(!productAssociations_.Equals(other.productAssociations_)) return false;
      if (Configuration != other.Configuration) return false;
      if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
      if (UplayId != other.UplayId) return false;
      if (LatestManifest != other.LatestManifest) return false;
      if (GameCode != other.GameCode) return false;
      if (Balance != other.Balance) return false;
      if (EncryptionKey != other.EncryptionKey) return false;
      if (ActiveBranchId != other.ActiveBranchId) return false;
      if(!availableBranches_.Equals(other.availableBranches_)) return false;
      if(!activationIds_.Equals(other.activationIds_)) return false;
      if (BrandId != other.BrandId) return false;
      if (PendingKeystorageOwnership != other.PendingKeystorageOwnership) return false;
      if (UbiservicesSpaceId != other.UbiservicesSpaceId) return false;
      if (UbiservicesAppId != other.UbiservicesAppId) return false;
      if (!object.Equals(StoreData, other.StoreData)) return false;
      if (PackageOwnershipState != other.PackageOwnershipState) return false;
      if (SuspensionType != other.SuspensionType) return false;
      if (!object.Equals(IngameStoreData, other.IngameStoreData)) return false;
      if (ActivationType != other.ActivationType) return false;
      if (LockedBySubscription != other.LockedBySubscription) return false;
      if (TargetPartner != other.TargetPartner) return false;
      if (DenuvoActivationOverwrite != other.DenuvoActivationOverwrite) return false;
      if(!subscriptionTypes_.Equals(other.subscriptionTypes_)) return false;
      if (!object.Equals(UbiservicesDynamicConfig, other.UbiservicesDynamicConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasCdKey) hash ^= CdKey.GetHashCode();
      if (HasOwned) hash ^= Owned.GetHashCode();
      if (HasOrbitProductId) hash ^= OrbitProductId.GetHashCode();
      if (HasConfigVersion) hash ^= ConfigVersion.GetHashCode();
      if (HasDownloadId) hash ^= DownloadId.GetHashCode();
      if (HasDownloadVersion) hash ^= DownloadVersion.GetHashCode();
      if (HasTitleId) hash ^= TitleId.GetHashCode();
      if (HasPlatform) hash ^= Platform.GetHashCode();
      if (HasProductType) hash ^= ProductType.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasOrbitGameVersion) hash ^= OrbitGameVersion.GetHashCode();
      if (HasOrbitGameVersionUrl) hash ^= OrbitGameVersionUrl.GetHashCode();
      hash ^= productAssociations_.GetHashCode();
      if (HasConfiguration) hash ^= Configuration.GetHashCode();
      if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
      if (HasUplayId) hash ^= UplayId.GetHashCode();
      if (HasLatestManifest) hash ^= LatestManifest.GetHashCode();
      if (HasGameCode) hash ^= GameCode.GetHashCode();
      if (HasBalance) hash ^= Balance.GetHashCode();
      if (HasEncryptionKey) hash ^= EncryptionKey.GetHashCode();
      if (HasActiveBranchId) hash ^= ActiveBranchId.GetHashCode();
      hash ^= availableBranches_.GetHashCode();
      hash ^= activationIds_.GetHashCode();
      if (HasBrandId) hash ^= BrandId.GetHashCode();
      if (HasPendingKeystorageOwnership) hash ^= PendingKeystorageOwnership.GetHashCode();
      if (HasUbiservicesSpaceId) hash ^= UbiservicesSpaceId.GetHashCode();
      if (HasUbiservicesAppId) hash ^= UbiservicesAppId.GetHashCode();
      if (storeData_ != null) hash ^= StoreData.GetHashCode();
      if (HasPackageOwnershipState) hash ^= PackageOwnershipState.GetHashCode();
      if (HasSuspensionType) hash ^= SuspensionType.GetHashCode();
      if (ingameStoreData_ != null) hash ^= IngameStoreData.GetHashCode();
      if (HasActivationType) hash ^= ActivationType.GetHashCode();
      if (HasLockedBySubscription) hash ^= LockedBySubscription.GetHashCode();
      if (HasTargetPartner) hash ^= TargetPartner.GetHashCode();
      if (HasDenuvoActivationOverwrite) hash ^= DenuvoActivationOverwrite.GetHashCode();
      hash ^= subscriptionTypes_.GetHashCode();
      if (ubiservicesDynamicConfig_ != null) hash ^= UbiservicesDynamicConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasCdKey) {
        output.WriteRawTag(18);
        output.WriteString(CdKey);
      }
      if (HasOrbitProductId) {
        output.WriteRawTag(24);
        output.WriteUInt32(OrbitProductId);
      }
      if (HasDownloadId) {
        output.WriteRawTag(40);
        output.WriteUInt32(DownloadId);
      }
      if (HasTitleId) {
        output.WriteRawTag(48);
        output.WriteUInt32(TitleId);
      }
      if (HasPlatform) {
        output.WriteRawTag(56);
        output.WriteUInt32(Platform);
      }
      if (HasProductType) {
        output.WriteRawTag(64);
        output.WriteUInt32(ProductType);
      }
      if (HasOrbitGameVersion) {
        output.WriteRawTag(72);
        output.WriteUInt32(OrbitGameVersion);
      }
      if (HasOrbitGameVersionUrl) {
        output.WriteRawTag(82);
        output.WriteString(OrbitGameVersionUrl);
      }
      if (HasConfigVersion) {
        output.WriteRawTag(88);
        output.WriteUInt32(ConfigVersion);
      }
      if (HasDownloadVersion) {
        output.WriteRawTag(96);
        output.WriteUInt32(DownloadVersion);
      }
      if (HasState) {
        output.WriteRawTag(104);
        output.WriteUInt32(State);
      }
      productAssociations_.WriteTo(output, _repeated_productAssociations_codec);
      if (HasConfiguration) {
        output.WriteRawTag(138, 1);
        output.WriteString(Configuration);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(144, 1);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (HasUplayId) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(UplayId);
      }
      if (HasOwned) {
        output.WriteRawTag(160, 1);
        output.WriteBool(Owned);
      }
      if (HasLatestManifest) {
        output.WriteRawTag(170, 1);
        output.WriteString(LatestManifest);
      }
      if (HasGameCode) {
        output.WriteRawTag(178, 1);
        output.WriteString(GameCode);
      }
      if (HasBalance) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(Balance);
      }
      if (HasEncryptionKey) {
        output.WriteRawTag(194, 1);
        output.WriteString(EncryptionKey);
      }
      if (HasActiveBranchId) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(ActiveBranchId);
      }
      availableBranches_.WriteTo(output, _repeated_availableBranches_codec);
      activationIds_.WriteTo(output, _repeated_activationIds_codec);
      if (HasBrandId) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(BrandId);
      }
      if (HasPendingKeystorageOwnership) {
        output.WriteRawTag(232, 1);
        output.WriteBool(PendingKeystorageOwnership);
      }
      if (HasUbiservicesSpaceId) {
        output.WriteRawTag(242, 1);
        output.WriteString(UbiservicesSpaceId);
      }
      if (HasUbiservicesAppId) {
        output.WriteRawTag(250, 1);
        output.WriteString(UbiservicesAppId);
      }
      if (storeData_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(StoreData);
      }
      if (HasPackageOwnershipState) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) PackageOwnershipState);
      }
      if (HasSuspensionType) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) SuspensionType);
      }
      if (ingameStoreData_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(IngameStoreData);
      }
      if (HasActivationType) {
        output.WriteRawTag(160, 2);
        output.WriteEnum((int) ActivationType);
      }
      if (HasLockedBySubscription) {
        output.WriteRawTag(168, 2);
        output.WriteBool(LockedBySubscription);
      }
      if (HasTargetPartner) {
        output.WriteRawTag(176, 2);
        output.WriteEnum((int) TargetPartner);
      }
      if (HasDenuvoActivationOverwrite) {
        output.WriteRawTag(184, 2);
        output.WriteEnum((int) DenuvoActivationOverwrite);
      }
      subscriptionTypes_.WriteTo(output, _repeated_subscriptionTypes_codec);
      if (ubiservicesDynamicConfig_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(UbiservicesDynamicConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasCdKey) {
        output.WriteRawTag(18);
        output.WriteString(CdKey);
      }
      if (HasOrbitProductId) {
        output.WriteRawTag(24);
        output.WriteUInt32(OrbitProductId);
      }
      if (HasDownloadId) {
        output.WriteRawTag(40);
        output.WriteUInt32(DownloadId);
      }
      if (HasTitleId) {
        output.WriteRawTag(48);
        output.WriteUInt32(TitleId);
      }
      if (HasPlatform) {
        output.WriteRawTag(56);
        output.WriteUInt32(Platform);
      }
      if (HasProductType) {
        output.WriteRawTag(64);
        output.WriteUInt32(ProductType);
      }
      if (HasOrbitGameVersion) {
        output.WriteRawTag(72);
        output.WriteUInt32(OrbitGameVersion);
      }
      if (HasOrbitGameVersionUrl) {
        output.WriteRawTag(82);
        output.WriteString(OrbitGameVersionUrl);
      }
      if (HasConfigVersion) {
        output.WriteRawTag(88);
        output.WriteUInt32(ConfigVersion);
      }
      if (HasDownloadVersion) {
        output.WriteRawTag(96);
        output.WriteUInt32(DownloadVersion);
      }
      if (HasState) {
        output.WriteRawTag(104);
        output.WriteUInt32(State);
      }
      productAssociations_.WriteTo(ref output, _repeated_productAssociations_codec);
      if (HasConfiguration) {
        output.WriteRawTag(138, 1);
        output.WriteString(Configuration);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(144, 1);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (HasUplayId) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(UplayId);
      }
      if (HasOwned) {
        output.WriteRawTag(160, 1);
        output.WriteBool(Owned);
      }
      if (HasLatestManifest) {
        output.WriteRawTag(170, 1);
        output.WriteString(LatestManifest);
      }
      if (HasGameCode) {
        output.WriteRawTag(178, 1);
        output.WriteString(GameCode);
      }
      if (HasBalance) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(Balance);
      }
      if (HasEncryptionKey) {
        output.WriteRawTag(194, 1);
        output.WriteString(EncryptionKey);
      }
      if (HasActiveBranchId) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(ActiveBranchId);
      }
      availableBranches_.WriteTo(ref output, _repeated_availableBranches_codec);
      activationIds_.WriteTo(ref output, _repeated_activationIds_codec);
      if (HasBrandId) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(BrandId);
      }
      if (HasPendingKeystorageOwnership) {
        output.WriteRawTag(232, 1);
        output.WriteBool(PendingKeystorageOwnership);
      }
      if (HasUbiservicesSpaceId) {
        output.WriteRawTag(242, 1);
        output.WriteString(UbiservicesSpaceId);
      }
      if (HasUbiservicesAppId) {
        output.WriteRawTag(250, 1);
        output.WriteString(UbiservicesAppId);
      }
      if (storeData_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(StoreData);
      }
      if (HasPackageOwnershipState) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) PackageOwnershipState);
      }
      if (HasSuspensionType) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) SuspensionType);
      }
      if (ingameStoreData_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(IngameStoreData);
      }
      if (HasActivationType) {
        output.WriteRawTag(160, 2);
        output.WriteEnum((int) ActivationType);
      }
      if (HasLockedBySubscription) {
        output.WriteRawTag(168, 2);
        output.WriteBool(LockedBySubscription);
      }
      if (HasTargetPartner) {
        output.WriteRawTag(176, 2);
        output.WriteEnum((int) TargetPartner);
      }
      if (HasDenuvoActivationOverwrite) {
        output.WriteRawTag(184, 2);
        output.WriteEnum((int) DenuvoActivationOverwrite);
      }
      subscriptionTypes_.WriteTo(ref output, _repeated_subscriptionTypes_codec);
      if (ubiservicesDynamicConfig_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(UbiservicesDynamicConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasCdKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CdKey);
      }
      if (HasOwned) {
        size += 2 + 1;
      }
      if (HasOrbitProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OrbitProductId);
      }
      if (HasConfigVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConfigVersion);
      }
      if (HasDownloadId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DownloadId);
      }
      if (HasDownloadVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DownloadVersion);
      }
      if (HasTitleId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TitleId);
      }
      if (HasPlatform) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Platform);
      }
      if (HasProductType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductType);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (HasOrbitGameVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OrbitGameVersion);
      }
      if (HasOrbitGameVersionUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrbitGameVersionUrl);
      }
      size += productAssociations_.CalculateSize(_repeated_productAssociations_codec);
      if (HasConfiguration) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Configuration);
      }
      if (HasDeprecatedTestConfig) {
        size += 2 + 1;
      }
      if (HasUplayId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UplayId);
      }
      if (HasLatestManifest) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LatestManifest);
      }
      if (HasGameCode) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GameCode);
      }
      if (HasBalance) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Balance);
      }
      if (HasEncryptionKey) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EncryptionKey);
      }
      if (HasActiveBranchId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ActiveBranchId);
      }
      size += availableBranches_.CalculateSize(_repeated_availableBranches_codec);
      size += activationIds_.CalculateSize(_repeated_activationIds_codec);
      if (HasBrandId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BrandId);
      }
      if (HasPendingKeystorageOwnership) {
        size += 2 + 1;
      }
      if (HasUbiservicesSpaceId) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UbiservicesSpaceId);
      }
      if (HasUbiservicesAppId) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UbiservicesAppId);
      }
      if (storeData_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StoreData);
      }
      if (HasPackageOwnershipState) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PackageOwnershipState);
      }
      if (HasSuspensionType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SuspensionType);
      }
      if (ingameStoreData_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IngameStoreData);
      }
      if (HasActivationType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ActivationType);
      }
      if (HasLockedBySubscription) {
        size += 2 + 1;
      }
      if (HasTargetPartner) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TargetPartner);
      }
      if (HasDenuvoActivationOverwrite) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DenuvoActivationOverwrite);
      }
      size += subscriptionTypes_.CalculateSize(_repeated_subscriptionTypes_codec);
      if (ubiservicesDynamicConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UbiservicesDynamicConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OwnedGame other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasCdKey) {
        CdKey = other.CdKey;
      }
      if (other.HasOwned) {
        Owned = other.Owned;
      }
      if (other.HasOrbitProductId) {
        OrbitProductId = other.OrbitProductId;
      }
      if (other.HasConfigVersion) {
        ConfigVersion = other.ConfigVersion;
      }
      if (other.HasDownloadId) {
        DownloadId = other.DownloadId;
      }
      if (other.HasDownloadVersion) {
        DownloadVersion = other.DownloadVersion;
      }
      if (other.HasTitleId) {
        TitleId = other.TitleId;
      }
      if (other.HasPlatform) {
        Platform = other.Platform;
      }
      if (other.HasProductType) {
        ProductType = other.ProductType;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasOrbitGameVersion) {
        OrbitGameVersion = other.OrbitGameVersion;
      }
      if (other.HasOrbitGameVersionUrl) {
        OrbitGameVersionUrl = other.OrbitGameVersionUrl;
      }
      productAssociations_.Add(other.productAssociations_);
      if (other.HasConfiguration) {
        Configuration = other.Configuration;
      }
      if (other.HasDeprecatedTestConfig) {
        DeprecatedTestConfig = other.DeprecatedTestConfig;
      }
      if (other.HasUplayId) {
        UplayId = other.UplayId;
      }
      if (other.HasLatestManifest) {
        LatestManifest = other.LatestManifest;
      }
      if (other.HasGameCode) {
        GameCode = other.GameCode;
      }
      if (other.HasBalance) {
        Balance = other.Balance;
      }
      if (other.HasEncryptionKey) {
        EncryptionKey = other.EncryptionKey;
      }
      if (other.HasActiveBranchId) {
        ActiveBranchId = other.ActiveBranchId;
      }
      availableBranches_.Add(other.availableBranches_);
      activationIds_.Add(other.activationIds_);
      if (other.HasBrandId) {
        BrandId = other.BrandId;
      }
      if (other.HasPendingKeystorageOwnership) {
        PendingKeystorageOwnership = other.PendingKeystorageOwnership;
      }
      if (other.HasUbiservicesSpaceId) {
        UbiservicesSpaceId = other.UbiservicesSpaceId;
      }
      if (other.HasUbiservicesAppId) {
        UbiservicesAppId = other.UbiservicesAppId;
      }
      if (other.storeData_ != null) {
        if (storeData_ == null) {
          StoreData = new global::Uplay.Ownership.StoreData();
        }
        StoreData.MergeFrom(other.StoreData);
      }
      if (other.HasPackageOwnershipState) {
        PackageOwnershipState = other.PackageOwnershipState;
      }
      if (other.HasSuspensionType) {
        SuspensionType = other.SuspensionType;
      }
      if (other.ingameStoreData_ != null) {
        if (ingameStoreData_ == null) {
          IngameStoreData = new global::Uplay.Ownership.StoreData();
        }
        IngameStoreData.MergeFrom(other.IngameStoreData);
      }
      if (other.HasActivationType) {
        ActivationType = other.ActivationType;
      }
      if (other.HasLockedBySubscription) {
        LockedBySubscription = other.LockedBySubscription;
      }
      if (other.HasTargetPartner) {
        TargetPartner = other.TargetPartner;
      }
      if (other.HasDenuvoActivationOverwrite) {
        DenuvoActivationOverwrite = other.DenuvoActivationOverwrite;
      }
      subscriptionTypes_.Add(other.subscriptionTypes_);
      if (other.ubiservicesDynamicConfig_ != null) {
        if (ubiservicesDynamicConfig_ == null) {
          UbiservicesDynamicConfig = new global::Uplay.Ownership.UbiServicesDynamicConfig();
        }
        UbiservicesDynamicConfig.MergeFrom(other.UbiservicesDynamicConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            CdKey = input.ReadString();
            break;
          }
          case 24: {
            OrbitProductId = input.ReadUInt32();
            break;
          }
          case 40: {
            DownloadId = input.ReadUInt32();
            break;
          }
          case 48: {
            TitleId = input.ReadUInt32();
            break;
          }
          case 56: {
            Platform = input.ReadUInt32();
            break;
          }
          case 64: {
            ProductType = input.ReadUInt32();
            break;
          }
          case 72: {
            OrbitGameVersion = input.ReadUInt32();
            break;
          }
          case 82: {
            OrbitGameVersionUrl = input.ReadString();
            break;
          }
          case 88: {
            ConfigVersion = input.ReadUInt32();
            break;
          }
          case 96: {
            DownloadVersion = input.ReadUInt32();
            break;
          }
          case 104: {
            State = input.ReadUInt32();
            break;
          }
          case 130:
          case 128: {
            productAssociations_.AddEntriesFrom(input, _repeated_productAssociations_codec);
            break;
          }
          case 138: {
            Configuration = input.ReadString();
            break;
          }
          case 144: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
          case 152: {
            UplayId = input.ReadUInt32();
            break;
          }
          case 160: {
            Owned = input.ReadBool();
            break;
          }
          case 170: {
            LatestManifest = input.ReadString();
            break;
          }
          case 178: {
            GameCode = input.ReadString();
            break;
          }
          case 184: {
            Balance = input.ReadUInt32();
            break;
          }
          case 194: {
            EncryptionKey = input.ReadString();
            break;
          }
          case 200: {
            ActiveBranchId = input.ReadUInt32();
            break;
          }
          case 210: {
            availableBranches_.AddEntriesFrom(input, _repeated_availableBranches_codec);
            break;
          }
          case 218:
          case 216: {
            activationIds_.AddEntriesFrom(input, _repeated_activationIds_codec);
            break;
          }
          case 224: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 232: {
            PendingKeystorageOwnership = input.ReadBool();
            break;
          }
          case 242: {
            UbiservicesSpaceId = input.ReadString();
            break;
          }
          case 250: {
            UbiservicesAppId = input.ReadString();
            break;
          }
          case 258: {
            if (storeData_ == null) {
              StoreData = new global::Uplay.Ownership.StoreData();
            }
            input.ReadMessage(StoreData);
            break;
          }
          case 264: {
            PackageOwnershipState = (global::Uplay.Ownership.OwnedGame.Types.PackageOwnershipState) input.ReadEnum();
            break;
          }
          case 272: {
            SuspensionType = (global::Uplay.Ownership.OwnedGame.Types.SuspensionType) input.ReadEnum();
            break;
          }
          case 282: {
            if (ingameStoreData_ == null) {
              IngameStoreData = new global::Uplay.Ownership.StoreData();
            }
            input.ReadMessage(IngameStoreData);
            break;
          }
          case 288: {
            ActivationType = (global::Uplay.Ownership.OwnedGame.Types.ActivationType) input.ReadEnum();
            break;
          }
          case 296: {
            LockedBySubscription = input.ReadBool();
            break;
          }
          case 304: {
            TargetPartner = (global::Uplay.Ownership.OwnedGame.Types.TargetPartner) input.ReadEnum();
            break;
          }
          case 312: {
            DenuvoActivationOverwrite = (global::Uplay.Ownership.OwnedGame.Types.DenuvoActivationOverwrite) input.ReadEnum();
            break;
          }
          case 322:
          case 320: {
            subscriptionTypes_.AddEntriesFrom(input, _repeated_subscriptionTypes_codec);
            break;
          }
          case 330: {
            if (ubiservicesDynamicConfig_ == null) {
              UbiservicesDynamicConfig = new global::Uplay.Ownership.UbiServicesDynamicConfig();
            }
            input.ReadMessage(UbiservicesDynamicConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            CdKey = input.ReadString();
            break;
          }
          case 24: {
            OrbitProductId = input.ReadUInt32();
            break;
          }
          case 40: {
            DownloadId = input.ReadUInt32();
            break;
          }
          case 48: {
            TitleId = input.ReadUInt32();
            break;
          }
          case 56: {
            Platform = input.ReadUInt32();
            break;
          }
          case 64: {
            ProductType = input.ReadUInt32();
            break;
          }
          case 72: {
            OrbitGameVersion = input.ReadUInt32();
            break;
          }
          case 82: {
            OrbitGameVersionUrl = input.ReadString();
            break;
          }
          case 88: {
            ConfigVersion = input.ReadUInt32();
            break;
          }
          case 96: {
            DownloadVersion = input.ReadUInt32();
            break;
          }
          case 104: {
            State = input.ReadUInt32();
            break;
          }
          case 130:
          case 128: {
            productAssociations_.AddEntriesFrom(ref input, _repeated_productAssociations_codec);
            break;
          }
          case 138: {
            Configuration = input.ReadString();
            break;
          }
          case 144: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
          case 152: {
            UplayId = input.ReadUInt32();
            break;
          }
          case 160: {
            Owned = input.ReadBool();
            break;
          }
          case 170: {
            LatestManifest = input.ReadString();
            break;
          }
          case 178: {
            GameCode = input.ReadString();
            break;
          }
          case 184: {
            Balance = input.ReadUInt32();
            break;
          }
          case 194: {
            EncryptionKey = input.ReadString();
            break;
          }
          case 200: {
            ActiveBranchId = input.ReadUInt32();
            break;
          }
          case 210: {
            availableBranches_.AddEntriesFrom(ref input, _repeated_availableBranches_codec);
            break;
          }
          case 218:
          case 216: {
            activationIds_.AddEntriesFrom(ref input, _repeated_activationIds_codec);
            break;
          }
          case 224: {
            BrandId = input.ReadUInt32();
            break;
          }
          case 232: {
            PendingKeystorageOwnership = input.ReadBool();
            break;
          }
          case 242: {
            UbiservicesSpaceId = input.ReadString();
            break;
          }
          case 250: {
            UbiservicesAppId = input.ReadString();
            break;
          }
          case 258: {
            if (storeData_ == null) {
              StoreData = new global::Uplay.Ownership.StoreData();
            }
            input.ReadMessage(StoreData);
            break;
          }
          case 264: {
            PackageOwnershipState = (global::Uplay.Ownership.OwnedGame.Types.PackageOwnershipState) input.ReadEnum();
            break;
          }
          case 272: {
            SuspensionType = (global::Uplay.Ownership.OwnedGame.Types.SuspensionType) input.ReadEnum();
            break;
          }
          case 282: {
            if (ingameStoreData_ == null) {
              IngameStoreData = new global::Uplay.Ownership.StoreData();
            }
            input.ReadMessage(IngameStoreData);
            break;
          }
          case 288: {
            ActivationType = (global::Uplay.Ownership.OwnedGame.Types.ActivationType) input.ReadEnum();
            break;
          }
          case 296: {
            LockedBySubscription = input.ReadBool();
            break;
          }
          case 304: {
            TargetPartner = (global::Uplay.Ownership.OwnedGame.Types.TargetPartner) input.ReadEnum();
            break;
          }
          case 312: {
            DenuvoActivationOverwrite = (global::Uplay.Ownership.OwnedGame.Types.DenuvoActivationOverwrite) input.ReadEnum();
            break;
          }
          case 322:
          case 320: {
            subscriptionTypes_.AddEntriesFrom(ref input, _repeated_subscriptionTypes_codec);
            break;
          }
          case 330: {
            if (ubiservicesDynamicConfig_ == null) {
              UbiservicesDynamicConfig = new global::Uplay.Ownership.UbiServicesDynamicConfig();
            }
            input.ReadMessage(UbiservicesDynamicConfig);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OwnedGame message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum PackageOwnershipState {
        [pbr::OriginalName("PackageOwnershipState_Full")] Full = 0,
        [pbr::OriginalName("PackageOwnershipState_Trial")] Trial = 1,
        [pbr::OriginalName("PackageOwnershipState_Suspended")] Suspended = 2,
      }

      public enum SuspensionType {
        [pbr::OriginalName("SuspensionType_None")] None = 0,
        [pbr::OriginalName("SuspensionType_Cheating")] Cheating = 1,
        [pbr::OriginalName("SuspensionType_Harassment")] Harassment = 2,
      }

      public enum ActivationType {
        [pbr::OriginalName("ActivationType_Purchase")] Purchase = 0,
        [pbr::OriginalName("ActivationType_Subscription")] Subscription = 2,
      }

      public enum TargetPartner {
        [pbr::OriginalName("TargetPartner_None")] None = 0,
        [pbr::OriginalName("TargetPartner_EpicGames")] EpicGames = 1,
        [pbr::OriginalName("TargetPartner_Neowiz")] Neowiz = 2,
        [pbr::OriginalName("TargetPartner_Microsoft")] Microsoft = 3,
      }

      public enum DenuvoActivationOverwrite {
        [pbr::OriginalName("DenuvoActivationOverwrite_Default")] Default = 0,
        [pbr::OriginalName("DenuvoActivationOverwrite_TimeTrial")] TimeTrial = 1,
      }

      public enum ProductType {
        [pbr::OriginalName("ProductType_Game")] Game = 0,
        [pbr::OriginalName("ProductType_AddOn")] AddOn = 1,
        [pbr::OriginalName("ProductType_PreOrderGame")] PreOrderGame = 2,
        [pbr::OriginalName("ProductType_PreOrderAddOn")] PreOrderAddOn = 3,
        [pbr::OriginalName("ProductType_Trial")] Trial = 4,
        [pbr::OriginalName("ProductType_Template")] Template = 5,
        [pbr::OriginalName("ProductType_Bundle")] Bundle = 6,
        [pbr::OriginalName("ProductType_SeasonPass")] SeasonPass = 7,
        [pbr::OriginalName("ProductType_Consumable")] Consumable = 8,
        [pbr::OriginalName("ProductType_Preorder")] Preorder = 9,
        [pbr::OriginalName("ProductType_ConsumablePacks")] ConsumablePacks = 10,
        [pbr::OriginalName("ProductType_BundlePackage")] BundlePackage = 11,
      }

      public enum State {
        [pbr::OriginalName("State_Unavailable")] Unavailable = 0,
        [pbr::OriginalName("State_PreReleased")] PreReleased = 1,
        [pbr::OriginalName("State_Downloadable")] Downloadable = 2,
        [pbr::OriginalName("State_Released")] Released = 3,
        [pbr::OriginalName("State_Expired")] Expired = 4,
      }

      public sealed partial class ProductBranch : pb::IMessage<ProductBranch>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ProductBranch> _parser = new pb::MessageParser<ProductBranch>(() => new ProductBranch());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ProductBranch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.OwnedGame.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranch(ProductBranch other) : this() {
          _hasBits0 = other._hasBits0;
          branchId_ = other.branchId_;
          branchName_ = other.branchName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranch Clone() {
          return new ProductBranch(this);
        }

        /// <summary>Field number for the "branch_id" field.</summary>
        public const int BranchIdFieldNumber = 1;
        private readonly static uint BranchIdDefaultValue = 0;

        private uint branchId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint BranchId {
          get { if ((_hasBits0 & 1) != 0) { return branchId_; } else { return BranchIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            branchId_ = value;
          }
        }
        /// <summary>Gets whether the "branch_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBranchId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "branch_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBranchId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "branch_name" field.</summary>
        public const int BranchNameFieldNumber = 2;
        private readonly static string BranchNameDefaultValue = "";

        private string branchName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string BranchName {
          get { return branchName_ ?? BranchNameDefaultValue; }
          set {
            branchName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "branch_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBranchName {
          get { return branchName_ != null; }
        }
        /// <summary>Clears the value of the "branch_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBranchName() {
          branchName_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ProductBranch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ProductBranch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BranchId != other.BranchId) return false;
          if (BranchName != other.BranchName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasBranchId) hash ^= BranchId.GetHashCode();
          if (HasBranchName) hash ^= BranchName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasBranchId) {
            output.WriteRawTag(8);
            output.WriteUInt32(BranchId);
          }
          if (HasBranchName) {
            output.WriteRawTag(18);
            output.WriteString(BranchName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasBranchId) {
            output.WriteRawTag(8);
            output.WriteUInt32(BranchId);
          }
          if (HasBranchName) {
            output.WriteRawTag(18);
            output.WriteString(BranchName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasBranchId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BranchId);
          }
          if (HasBranchName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BranchName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ProductBranch other) {
          if (other == null) {
            return;
          }
          if (other.HasBranchId) {
            BranchId = other.BranchId;
          }
          if (other.HasBranchName) {
            BranchName = other.BranchName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                BranchId = input.ReadUInt32();
                break;
              }
              case 18: {
                BranchName = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                BranchId = input.ReadUInt32();
                break;
              }
              case 18: {
                BranchName = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class OwnedGamesContainer : pb::IMessage<OwnedGamesContainer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OwnedGamesContainer> _parser = new pb::MessageParser<OwnedGamesContainer>(() => new OwnedGamesContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OwnedGamesContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGamesContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGamesContainer(OwnedGamesContainer other) : this() {
      productIds_ = other.productIds_.Clone();
      signature_ = other.signature_;
      visibleOrInstallableProductIds_ = other.visibleOrInstallableProductIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGamesContainer Clone() {
      return new OwnedGamesContainer(this);
    }

    /// <summary>Field number for the "product_ids" field.</summary>
    public const int ProductIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_productIds_codec
        = pb::FieldCodec.ForUInt32(8);
    private readonly pbc::RepeatedField<uint> productIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ProductIds {
      get { return productIds_; }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

    private pb::ByteString signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignature() {
      signature_ = null;
    }

    /// <summary>Field number for the "visible_or_installable_product_ids" field.</summary>
    public const int VisibleOrInstallableProductIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_visibleOrInstallableProductIds_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> visibleOrInstallableProductIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> VisibleOrInstallableProductIds {
      get { return visibleOrInstallableProductIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OwnedGamesContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OwnedGamesContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!productIds_.Equals(other.productIds_)) return false;
      if (Signature != other.Signature) return false;
      if(!visibleOrInstallableProductIds_.Equals(other.visibleOrInstallableProductIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= productIds_.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      hash ^= visibleOrInstallableProductIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      productIds_.WriteTo(output, _repeated_productIds_codec);
      if (HasSignature) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      visibleOrInstallableProductIds_.WriteTo(output, _repeated_visibleOrInstallableProductIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      productIds_.WriteTo(ref output, _repeated_productIds_codec);
      if (HasSignature) {
        output.WriteRawTag(18);
        output.WriteBytes(Signature);
      }
      visibleOrInstallableProductIds_.WriteTo(ref output, _repeated_visibleOrInstallableProductIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += productIds_.CalculateSize(_repeated_productIds_codec);
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      size += visibleOrInstallableProductIds_.CalculateSize(_repeated_visibleOrInstallableProductIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OwnedGamesContainer other) {
      if (other == null) {
        return;
      }
      productIds_.Add(other.productIds_);
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      visibleOrInstallableProductIds_.Add(other.visibleOrInstallableProductIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            productIds_.AddEntriesFrom(input, _repeated_productIds_codec);
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
          case 26:
          case 24: {
            visibleOrInstallableProductIds_.AddEntriesFrom(input, _repeated_visibleOrInstallableProductIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            productIds_.AddEntriesFrom(ref input, _repeated_productIds_codec);
            break;
          }
          case 18: {
            Signature = input.ReadBytes();
            break;
          }
          case 26:
          case 24: {
            visibleOrInstallableProductIds_.AddEntriesFrom(ref input, _repeated_visibleOrInstallableProductIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OwnedGames : pb::IMessage<OwnedGames>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OwnedGames> _parser = new pb::MessageParser<OwnedGames>(() => new OwnedGames());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OwnedGames> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGames() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGames(OwnedGames other) : this() {
      ownedGames_ = other.ownedGames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGames Clone() {
      return new OwnedGames(this);
    }

    /// <summary>Field number for the "owned_games" field.</summary>
    public const int OwnedGames_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uplay.Ownership.OwnedGame> _repeated_ownedGames_codec
        = pb::FieldCodec.ForMessage(10, global::Uplay.Ownership.OwnedGame.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Ownership.OwnedGame> ownedGames_ = new pbc::RepeatedField<global::Uplay.Ownership.OwnedGame>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Ownership.OwnedGame> OwnedGames_ {
      get { return ownedGames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OwnedGames);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OwnedGames other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ownedGames_.Equals(other.ownedGames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ownedGames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ownedGames_.WriteTo(output, _repeated_ownedGames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ownedGames_.WriteTo(ref output, _repeated_ownedGames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += ownedGames_.CalculateSize(_repeated_ownedGames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OwnedGames other) {
      if (other == null) {
        return;
      }
      ownedGames_.Add(other.ownedGames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ownedGames_.AddEntriesFrom(input, _repeated_ownedGames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ownedGames_.AddEntriesFrom(ref input, _repeated_ownedGames_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitializeReq : pb::IMessage<InitializeReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitializeReq> _parser = new pb::MessageParser<InitializeReq>(() => new InitializeReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InitializeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeReq(InitializeReq other) : this() {
      _hasBits0 = other._hasBits0;
      deprecatedTestConfig_ = other.deprecatedTestConfig_;
      getAssociations_ = other.getAssociations_;
      protoVersion_ = other.protoVersion_;
      branches_ = other.branches_.Clone();
      useStaging_ = other.useStaging_;
      claims_ = other.claims_.Clone();
      clientIpOverride_ = other.clientIpOverride_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeReq Clone() {
      return new InitializeReq(this);
    }

    /// <summary>Field number for the "deprecated_test_config" field.</summary>
    public const int DeprecatedTestConfigFieldNumber = 1;
    private readonly static bool DeprecatedTestConfigDefaultValue = false;

    private bool deprecatedTestConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeprecatedTestConfig {
      get { if ((_hasBits0 & 1) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deprecatedTestConfig_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeprecatedTestConfig {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_test_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeprecatedTestConfig() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "get_associations" field.</summary>
    public const int GetAssociationsFieldNumber = 2;
    private readonly static bool GetAssociationsDefaultValue = false;

    private bool getAssociations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetAssociations {
      get { if ((_hasBits0 & 2) != 0) { return getAssociations_; } else { return GetAssociationsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        getAssociations_ = value;
      }
    }
    /// <summary>Gets whether the "get_associations" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetAssociations {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "get_associations" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetAssociations() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "proto_version" field.</summary>
    public const int ProtoVersionFieldNumber = 3;
    private readonly static uint ProtoVersionDefaultValue = 0;

    private uint protoVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProtoVersion {
      get { if ((_hasBits0 & 4) != 0) { return protoVersion_; } else { return ProtoVersionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        protoVersion_ = value;
      }
    }
    /// <summary>Gets whether the "proto_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtoVersion {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "proto_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtoVersion() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "branches" field.</summary>
    public const int BranchesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Uplay.Ownership.InitializeReq.Types.ProductBranchData> _repeated_branches_codec
        = pb::FieldCodec.ForMessage(34, global::Uplay.Ownership.InitializeReq.Types.ProductBranchData.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Ownership.InitializeReq.Types.ProductBranchData> branches_ = new pbc::RepeatedField<global::Uplay.Ownership.InitializeReq.Types.ProductBranchData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Ownership.InitializeReq.Types.ProductBranchData> Branches {
      get { return branches_; }
    }

    /// <summary>Field number for the "use_staging" field.</summary>
    public const int UseStagingFieldNumber = 5;
    private readonly static bool UseStagingDefaultValue = false;

    private bool useStaging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseStaging {
      get { if ((_hasBits0 & 8) != 0) { return useStaging_; } else { return UseStagingDefaultValue; } }
      set {
        _hasBits0 |= 8;
        useStaging_ = value;
      }
    }
    /// <summary>Gets whether the "use_staging" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseStaging {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "use_staging" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseStaging() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "claims" field.</summary>
    public const int ClaimsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_claims_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> claims_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Claims {
      get { return claims_; }
    }

    /// <summary>Field number for the "client_ip_override" field.</summary>
    public const int ClientIpOverrideFieldNumber = 99;
    private readonly static uint ClientIpOverrideDefaultValue = 0;

    private uint clientIpOverride_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ClientIpOverride {
      get { if ((_hasBits0 & 16) != 0) { return clientIpOverride_; } else { return ClientIpOverrideDefaultValue; } }
      set {
        _hasBits0 |= 16;
        clientIpOverride_ = value;
      }
    }
    /// <summary>Gets whether the "client_ip_override" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientIpOverride {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "client_ip_override" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientIpOverride() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InitializeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InitializeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
      if (GetAssociations != other.GetAssociations) return false;
      if (ProtoVersion != other.ProtoVersion) return false;
      if(!branches_.Equals(other.branches_)) return false;
      if (UseStaging != other.UseStaging) return false;
      if(!claims_.Equals(other.claims_)) return false;
      if (ClientIpOverride != other.ClientIpOverride) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
      if (HasGetAssociations) hash ^= GetAssociations.GetHashCode();
      if (HasProtoVersion) hash ^= ProtoVersion.GetHashCode();
      hash ^= branches_.GetHashCode();
      if (HasUseStaging) hash ^= UseStaging.GetHashCode();
      hash ^= claims_.GetHashCode();
      if (HasClientIpOverride) hash ^= ClientIpOverride.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(8);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (HasGetAssociations) {
        output.WriteRawTag(16);
        output.WriteBool(GetAssociations);
      }
      if (HasProtoVersion) {
        output.WriteRawTag(24);
        output.WriteUInt32(ProtoVersion);
      }
      branches_.WriteTo(output, _repeated_branches_codec);
      if (HasUseStaging) {
        output.WriteRawTag(40);
        output.WriteBool(UseStaging);
      }
      claims_.WriteTo(output, _repeated_claims_codec);
      if (HasClientIpOverride) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(ClientIpOverride);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(8);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (HasGetAssociations) {
        output.WriteRawTag(16);
        output.WriteBool(GetAssociations);
      }
      if (HasProtoVersion) {
        output.WriteRawTag(24);
        output.WriteUInt32(ProtoVersion);
      }
      branches_.WriteTo(ref output, _repeated_branches_codec);
      if (HasUseStaging) {
        output.WriteRawTag(40);
        output.WriteBool(UseStaging);
      }
      claims_.WriteTo(ref output, _repeated_claims_codec);
      if (HasClientIpOverride) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(ClientIpOverride);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDeprecatedTestConfig) {
        size += 1 + 1;
      }
      if (HasGetAssociations) {
        size += 1 + 1;
      }
      if (HasProtoVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtoVersion);
      }
      size += branches_.CalculateSize(_repeated_branches_codec);
      if (HasUseStaging) {
        size += 1 + 1;
      }
      size += claims_.CalculateSize(_repeated_claims_codec);
      if (HasClientIpOverride) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ClientIpOverride);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InitializeReq other) {
      if (other == null) {
        return;
      }
      if (other.HasDeprecatedTestConfig) {
        DeprecatedTestConfig = other.DeprecatedTestConfig;
      }
      if (other.HasGetAssociations) {
        GetAssociations = other.GetAssociations;
      }
      if (other.HasProtoVersion) {
        ProtoVersion = other.ProtoVersion;
      }
      branches_.Add(other.branches_);
      if (other.HasUseStaging) {
        UseStaging = other.UseStaging;
      }
      claims_.Add(other.claims_);
      if (other.HasClientIpOverride) {
        ClientIpOverride = other.ClientIpOverride;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
          case 16: {
            GetAssociations = input.ReadBool();
            break;
          }
          case 24: {
            ProtoVersion = input.ReadUInt32();
            break;
          }
          case 34: {
            branches_.AddEntriesFrom(input, _repeated_branches_codec);
            break;
          }
          case 40: {
            UseStaging = input.ReadBool();
            break;
          }
          case 50: {
            claims_.AddEntriesFrom(input, _repeated_claims_codec);
            break;
          }
          case 792: {
            ClientIpOverride = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
          case 16: {
            GetAssociations = input.ReadBool();
            break;
          }
          case 24: {
            ProtoVersion = input.ReadUInt32();
            break;
          }
          case 34: {
            branches_.AddEntriesFrom(ref input, _repeated_branches_codec);
            break;
          }
          case 40: {
            UseStaging = input.ReadBool();
            break;
          }
          case 50: {
            claims_.AddEntriesFrom(ref input, _repeated_claims_codec);
            break;
          }
          case 792: {
            ClientIpOverride = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the InitializeReq message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class ProductBranchData : pb::IMessage<ProductBranchData>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ProductBranchData> _parser = new pb::MessageParser<ProductBranchData>(() => new ProductBranchData());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ProductBranchData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.InitializeReq.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranchData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranchData(ProductBranchData other) : this() {
          _hasBits0 = other._hasBits0;
          productId_ = other.productId_;
          activeBranchId_ = other.activeBranchId_;
          passwords_ = other.passwords_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranchData Clone() {
          return new ProductBranchData(this);
        }

        /// <summary>Field number for the "product_id" field.</summary>
        public const int ProductIdFieldNumber = 1;
        private readonly static uint ProductIdDefaultValue = 0;

        private uint productId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProductId {
          get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            productId_ = value;
          }
        }
        /// <summary>Gets whether the "product_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProductId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "product_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProductId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "active_branch_id" field.</summary>
        public const int ActiveBranchIdFieldNumber = 2;
        private readonly static uint ActiveBranchIdDefaultValue = 0;

        private uint activeBranchId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ActiveBranchId {
          get { if ((_hasBits0 & 2) != 0) { return activeBranchId_; } else { return ActiveBranchIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            activeBranchId_ = value;
          }
        }
        /// <summary>Gets whether the "active_branch_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasActiveBranchId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "active_branch_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearActiveBranchId() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "passwords" field.</summary>
        public const int PasswordsFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_passwords_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> passwords_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Passwords {
          get { return passwords_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ProductBranchData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ProductBranchData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProductId != other.ProductId) return false;
          if (ActiveBranchId != other.ActiveBranchId) return false;
          if(!passwords_.Equals(other.passwords_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasProductId) hash ^= ProductId.GetHashCode();
          if (HasActiveBranchId) hash ^= ActiveBranchId.GetHashCode();
          hash ^= passwords_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          if (HasActiveBranchId) {
            output.WriteRawTag(16);
            output.WriteUInt32(ActiveBranchId);
          }
          passwords_.WriteTo(output, _repeated_passwords_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          if (HasActiveBranchId) {
            output.WriteRawTag(16);
            output.WriteUInt32(ActiveBranchId);
          }
          passwords_.WriteTo(ref output, _repeated_passwords_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasProductId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
          }
          if (HasActiveBranchId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActiveBranchId);
          }
          size += passwords_.CalculateSize(_repeated_passwords_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ProductBranchData other) {
          if (other == null) {
            return;
          }
          if (other.HasProductId) {
            ProductId = other.ProductId;
          }
          if (other.HasActiveBranchId) {
            ActiveBranchId = other.ActiveBranchId;
          }
          passwords_.Add(other.passwords_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 16: {
                ActiveBranchId = input.ReadUInt32();
                break;
              }
              case 26: {
                passwords_.AddEntriesFrom(input, _repeated_passwords_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 16: {
                ActiveBranchId = input.ReadUInt32();
                break;
              }
              case 26: {
                passwords_.AddEntriesFrom(ref input, _repeated_passwords_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class InitializeRsp : pb::IMessage<InitializeRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitializeRsp> _parser = new pb::MessageParser<InitializeRsp>(() => new InitializeRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InitializeRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeRsp(InitializeRsp other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      ownedGames_ = other.ownedGames_ != null ? other.ownedGames_.Clone() : null;
      ownedGamesContainer_ = other.ownedGamesContainer_ != null ? other.ownedGamesContainer_.Clone() : null;
      keySpamBanSeconds_ = other.keySpamBanSeconds_;
      subscriptionState_ = other.subscriptionState_;
      subscriptionType_ = other.subscriptionType_;
      claimedGames_ = other.claimedGames_ != null ? other.claimedGames_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeRsp Clone() {
      return new InitializeRsp(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owned_games" field.</summary>
    public const int OwnedGamesFieldNumber = 2;
    private global::Uplay.Ownership.OwnedGames ownedGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGames OwnedGames {
      get { return ownedGames_; }
      set {
        ownedGames_ = value;
      }
    }

    /// <summary>Field number for the "owned_games_container" field.</summary>
    public const int OwnedGamesContainerFieldNumber = 3;
    private global::Uplay.Ownership.OwnedGamesContainer ownedGamesContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGamesContainer OwnedGamesContainer {
      get { return ownedGamesContainer_; }
      set {
        ownedGamesContainer_ = value;
      }
    }

    /// <summary>Field number for the "key_spam_ban_seconds" field.</summary>
    public const int KeySpamBanSecondsFieldNumber = 4;
    private readonly static uint KeySpamBanSecondsDefaultValue = 0;

    private uint keySpamBanSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KeySpamBanSeconds {
      get { if ((_hasBits0 & 2) != 0) { return keySpamBanSeconds_; } else { return KeySpamBanSecondsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        keySpamBanSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "key_spam_ban_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKeySpamBanSeconds {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "key_spam_ban_seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKeySpamBanSeconds() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "subscription_state" field.</summary>
    public const int SubscriptionStateFieldNumber = 5;
    private readonly static global::Uplay.Ownership.SubscriptionState SubscriptionStateDefaultValue = global::Uplay.Ownership.SubscriptionState.NoState;

    private global::Uplay.Ownership.SubscriptionState subscriptionState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.SubscriptionState SubscriptionState {
      get { if ((_hasBits0 & 4) != 0) { return subscriptionState_; } else { return SubscriptionStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        subscriptionState_ = value;
      }
    }
    /// <summary>Gets whether the "subscription_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubscriptionState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "subscription_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubscriptionState() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "subscription_type" field.</summary>
    public const int SubscriptionTypeFieldNumber = 6;
    private readonly static uint SubscriptionTypeDefaultValue = 0;

    private uint subscriptionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SubscriptionType {
      get { if ((_hasBits0 & 8) != 0) { return subscriptionType_; } else { return SubscriptionTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        subscriptionType_ = value;
      }
    }
    /// <summary>Gets whether the "subscription_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubscriptionType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "subscription_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubscriptionType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "claimed_games" field.</summary>
    public const int ClaimedGamesFieldNumber = 7;
    private global::Uplay.Ownership.OwnedGames claimedGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGames ClaimedGames {
      get { return claimedGames_; }
      set {
        claimedGames_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InitializeRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InitializeRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (!object.Equals(OwnedGames, other.OwnedGames)) return false;
      if (!object.Equals(OwnedGamesContainer, other.OwnedGamesContainer)) return false;
      if (KeySpamBanSeconds != other.KeySpamBanSeconds) return false;
      if (SubscriptionState != other.SubscriptionState) return false;
      if (SubscriptionType != other.SubscriptionType) return false;
      if (!object.Equals(ClaimedGames, other.ClaimedGames)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (ownedGames_ != null) hash ^= OwnedGames.GetHashCode();
      if (ownedGamesContainer_ != null) hash ^= OwnedGamesContainer.GetHashCode();
      if (HasKeySpamBanSeconds) hash ^= KeySpamBanSeconds.GetHashCode();
      if (HasSubscriptionState) hash ^= SubscriptionState.GetHashCode();
      if (HasSubscriptionType) hash ^= SubscriptionType.GetHashCode();
      if (claimedGames_ != null) hash ^= ClaimedGames.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ownedGames_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OwnedGames);
      }
      if (ownedGamesContainer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OwnedGamesContainer);
      }
      if (HasKeySpamBanSeconds) {
        output.WriteRawTag(32);
        output.WriteUInt32(KeySpamBanSeconds);
      }
      if (HasSubscriptionState) {
        output.WriteRawTag(40);
        output.WriteEnum((int) SubscriptionState);
      }
      if (HasSubscriptionType) {
        output.WriteRawTag(48);
        output.WriteUInt32(SubscriptionType);
      }
      if (claimedGames_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ClaimedGames);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ownedGames_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OwnedGames);
      }
      if (ownedGamesContainer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OwnedGamesContainer);
      }
      if (HasKeySpamBanSeconds) {
        output.WriteRawTag(32);
        output.WriteUInt32(KeySpamBanSeconds);
      }
      if (HasSubscriptionState) {
        output.WriteRawTag(40);
        output.WriteEnum((int) SubscriptionState);
      }
      if (HasSubscriptionType) {
        output.WriteRawTag(48);
        output.WriteUInt32(SubscriptionType);
      }
      if (claimedGames_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ClaimedGames);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (ownedGames_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGames);
      }
      if (ownedGamesContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGamesContainer);
      }
      if (HasKeySpamBanSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KeySpamBanSeconds);
      }
      if (HasSubscriptionState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionState);
      }
      if (HasSubscriptionType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubscriptionType);
      }
      if (claimedGames_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClaimedGames);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InitializeRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      if (other.ownedGames_ != null) {
        if (ownedGames_ == null) {
          OwnedGames = new global::Uplay.Ownership.OwnedGames();
        }
        OwnedGames.MergeFrom(other.OwnedGames);
      }
      if (other.ownedGamesContainer_ != null) {
        if (ownedGamesContainer_ == null) {
          OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
        }
        OwnedGamesContainer.MergeFrom(other.OwnedGamesContainer);
      }
      if (other.HasKeySpamBanSeconds) {
        KeySpamBanSeconds = other.KeySpamBanSeconds;
      }
      if (other.HasSubscriptionState) {
        SubscriptionState = other.SubscriptionState;
      }
      if (other.HasSubscriptionType) {
        SubscriptionType = other.SubscriptionType;
      }
      if (other.claimedGames_ != null) {
        if (claimedGames_ == null) {
          ClaimedGames = new global::Uplay.Ownership.OwnedGames();
        }
        ClaimedGames.MergeFrom(other.ClaimedGames);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (ownedGames_ == null) {
              OwnedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(OwnedGames);
            break;
          }
          case 26: {
            if (ownedGamesContainer_ == null) {
              OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
            }
            input.ReadMessage(OwnedGamesContainer);
            break;
          }
          case 32: {
            KeySpamBanSeconds = input.ReadUInt32();
            break;
          }
          case 40: {
            SubscriptionState = (global::Uplay.Ownership.SubscriptionState) input.ReadEnum();
            break;
          }
          case 48: {
            SubscriptionType = input.ReadUInt32();
            break;
          }
          case 58: {
            if (claimedGames_ == null) {
              ClaimedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(ClaimedGames);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (ownedGames_ == null) {
              OwnedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(OwnedGames);
            break;
          }
          case 26: {
            if (ownedGamesContainer_ == null) {
              OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
            }
            input.ReadMessage(OwnedGamesContainer);
            break;
          }
          case 32: {
            KeySpamBanSeconds = input.ReadUInt32();
            break;
          }
          case 40: {
            SubscriptionState = (global::Uplay.Ownership.SubscriptionState) input.ReadEnum();
            break;
          }
          case 48: {
            SubscriptionType = input.ReadUInt32();
            break;
          }
          case 58: {
            if (claimedGames_ == null) {
              ClaimedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(ClaimedGames);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeprecatedGetProductFromCdKeyReq : pb::IMessage<DeprecatedGetProductFromCdKeyReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeprecatedGetProductFromCdKeyReq> _parser = new pb::MessageParser<DeprecatedGetProductFromCdKeyReq>(() => new DeprecatedGetProductFromCdKeyReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeprecatedGetProductFromCdKeyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetProductFromCdKeyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetProductFromCdKeyReq(DeprecatedGetProductFromCdKeyReq other) : this() {
      _hasBits0 = other._hasBits0;
      cdKey_ = other.cdKey_;
      deprecatedTestConfig_ = other.deprecatedTestConfig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetProductFromCdKeyReq Clone() {
      return new DeprecatedGetProductFromCdKeyReq(this);
    }

    /// <summary>Field number for the "cd_key" field.</summary>
    public const int CdKeyFieldNumber = 1;
    private readonly static string CdKeyDefaultValue = "";

    private string cdKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CdKey {
      get { return cdKey_ ?? CdKeyDefaultValue; }
      set {
        cdKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cd_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCdKey {
      get { return cdKey_ != null; }
    }
    /// <summary>Clears the value of the "cd_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCdKey() {
      cdKey_ = null;
    }

    /// <summary>Field number for the "deprecated_test_config" field.</summary>
    public const int DeprecatedTestConfigFieldNumber = 2;
    private readonly static bool DeprecatedTestConfigDefaultValue = false;

    private bool deprecatedTestConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeprecatedTestConfig {
      get { if ((_hasBits0 & 1) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deprecatedTestConfig_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeprecatedTestConfig {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_test_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeprecatedTestConfig() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeprecatedGetProductFromCdKeyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeprecatedGetProductFromCdKeyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CdKey != other.CdKey) return false;
      if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCdKey) hash ^= CdKey.GetHashCode();
      if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCdKey) {
        output.WriteRawTag(10);
        output.WriteString(CdKey);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCdKey) {
        output.WriteRawTag(10);
        output.WriteString(CdKey);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCdKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CdKey);
      }
      if (HasDeprecatedTestConfig) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeprecatedGetProductFromCdKeyReq other) {
      if (other == null) {
        return;
      }
      if (other.HasCdKey) {
        CdKey = other.CdKey;
      }
      if (other.HasDeprecatedTestConfig) {
        DeprecatedTestConfig = other.DeprecatedTestConfig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CdKey = input.ReadString();
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CdKey = input.ReadString();
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeprecatedGetProductFromCdKeyRsp : pb::IMessage<DeprecatedGetProductFromCdKeyRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeprecatedGetProductFromCdKeyRsp> _parser = new pb::MessageParser<DeprecatedGetProductFromCdKeyRsp>(() => new DeprecatedGetProductFromCdKeyRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeprecatedGetProductFromCdKeyRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetProductFromCdKeyRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetProductFromCdKeyRsp(DeprecatedGetProductFromCdKeyRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      product_ = other.product_ != null ? other.product_.Clone() : null;
      productAssociations_ = other.productAssociations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetProductFromCdKeyRsp Clone() {
      return new DeprecatedGetProductFromCdKeyRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp.Types.Result.Success;

    private global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "product" field.</summary>
    public const int ProductFieldNumber = 2;
    private global::Uplay.Ownership.OwnedGame product_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGame Product {
      get { return product_; }
      set {
        product_ = value;
      }
    }

    /// <summary>Field number for the "product_associations" field.</summary>
    public const int ProductAssociationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Uplay.Ownership.OwnedGame> _repeated_productAssociations_codec
        = pb::FieldCodec.ForMessage(26, global::Uplay.Ownership.OwnedGame.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Ownership.OwnedGame> productAssociations_ = new pbc::RepeatedField<global::Uplay.Ownership.OwnedGame>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Ownership.OwnedGame> ProductAssociations {
      get { return productAssociations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeprecatedGetProductFromCdKeyRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeprecatedGetProductFromCdKeyRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(Product, other.Product)) return false;
      if(!productAssociations_.Equals(other.productAssociations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (product_ != null) hash ^= Product.GetHashCode();
      hash ^= productAssociations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (product_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Product);
      }
      productAssociations_.WriteTo(output, _repeated_productAssociations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (product_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Product);
      }
      productAssociations_.WriteTo(ref output, _repeated_productAssociations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (product_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Product);
      }
      size += productAssociations_.CalculateSize(_repeated_productAssociations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeprecatedGetProductFromCdKeyRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.product_ != null) {
        if (product_ == null) {
          Product = new global::Uplay.Ownership.OwnedGame();
        }
        Product.MergeFrom(other.Product);
      }
      productAssociations_.Add(other.productAssociations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (product_ == null) {
              Product = new global::Uplay.Ownership.OwnedGame();
            }
            input.ReadMessage(Product);
            break;
          }
          case 26: {
            productAssociations_.AddEntriesFrom(input, _repeated_productAssociations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (product_ == null) {
              Product = new global::Uplay.Ownership.OwnedGame();
            }
            input.ReadMessage(Product);
            break;
          }
          case 26: {
            productAssociations_.AddEntriesFrom(ref input, _repeated_productAssociations_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DeprecatedGetProductFromCdKeyRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_BadCdKey")] BadCdKey = 2,
        [pbr::OriginalName("Result_BannedKey")] BannedKey = 3,
        [pbr::OriginalName("Result_BannedForCdKeySpam")] BannedForCdKeySpam = 4,
        [pbr::OriginalName("Result_ServerError")] ServerError = 5,
        [pbr::OriginalName("Result_UsedCdKeyOtherAccount")] UsedCdKeyOtherAccount = 6,
        [pbr::OriginalName("Result_NotAvailableYet")] NotAvailableYet = 7,
        [pbr::OriginalName("Result_NoLongerAvailable")] NoLongerAvailable = 8,
        [pbr::OriginalName("Result_NotAvailableInRegion")] NotAvailableInRegion = 9,
        [pbr::OriginalName("Result_UsedCdKeyThisAccount")] UsedCdKeyThisAccount = 10,
      }

    }
    #endregion

  }

  public sealed partial class RegisterOwnershipReq : pb::IMessage<RegisterOwnershipReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterOwnershipReq> _parser = new pb::MessageParser<RegisterOwnershipReq>(() => new RegisterOwnershipReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterOwnershipReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipReq(RegisterOwnershipReq other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      cdKey_ = other.cdKey_;
      deprecatedTestConfig_ = other.deprecatedTestConfig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipReq Clone() {
      return new RegisterOwnershipReq(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cd_key" field.</summary>
    public const int CdKeyFieldNumber = 2;
    private readonly static string CdKeyDefaultValue = "";

    private string cdKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CdKey {
      get { return cdKey_ ?? CdKeyDefaultValue; }
      set {
        cdKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cd_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCdKey {
      get { return cdKey_ != null; }
    }
    /// <summary>Clears the value of the "cd_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCdKey() {
      cdKey_ = null;
    }

    /// <summary>Field number for the "deprecated_test_config" field.</summary>
    public const int DeprecatedTestConfigFieldNumber = 3;
    private readonly static bool DeprecatedTestConfigDefaultValue = false;

    private bool deprecatedTestConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeprecatedTestConfig {
      get { if ((_hasBits0 & 2) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
      set {
        _hasBits0 |= 2;
        deprecatedTestConfig_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeprecatedTestConfig {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_test_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeprecatedTestConfig() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterOwnershipReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterOwnershipReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (CdKey != other.CdKey) return false;
      if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasCdKey) hash ^= CdKey.GetHashCode();
      if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasCdKey) {
        output.WriteRawTag(18);
        output.WriteString(CdKey);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(24);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasCdKey) {
        output.WriteRawTag(18);
        output.WriteString(CdKey);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(24);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasCdKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CdKey);
      }
      if (HasDeprecatedTestConfig) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterOwnershipReq other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasCdKey) {
        CdKey = other.CdKey;
      }
      if (other.HasDeprecatedTestConfig) {
        DeprecatedTestConfig = other.DeprecatedTestConfig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            CdKey = input.ReadString();
            break;
          }
          case 24: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            CdKey = input.ReadString();
            break;
          }
          case 24: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegisterOwnershipByCdKeyReq : pb::IMessage<RegisterOwnershipByCdKeyReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterOwnershipByCdKeyReq> _parser = new pb::MessageParser<RegisterOwnershipByCdKeyReq>(() => new RegisterOwnershipByCdKeyReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterOwnershipByCdKeyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipByCdKeyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipByCdKeyReq(RegisterOwnershipByCdKeyReq other) : this() {
      _hasBits0 = other._hasBits0;
      cdKey_ = other.cdKey_;
      deprecatedTestConfig_ = other.deprecatedTestConfig_;
      uplayId_ = other.uplayId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipByCdKeyReq Clone() {
      return new RegisterOwnershipByCdKeyReq(this);
    }

    /// <summary>Field number for the "cd_key" field.</summary>
    public const int CdKeyFieldNumber = 1;
    private readonly static string CdKeyDefaultValue = "";

    private string cdKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CdKey {
      get { return cdKey_ ?? CdKeyDefaultValue; }
      set {
        cdKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cd_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCdKey {
      get { return cdKey_ != null; }
    }
    /// <summary>Clears the value of the "cd_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCdKey() {
      cdKey_ = null;
    }

    /// <summary>Field number for the "deprecated_test_config" field.</summary>
    public const int DeprecatedTestConfigFieldNumber = 2;
    private readonly static bool DeprecatedTestConfigDefaultValue = false;

    private bool deprecatedTestConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeprecatedTestConfig {
      get { if ((_hasBits0 & 1) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deprecatedTestConfig_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeprecatedTestConfig {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_test_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeprecatedTestConfig() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uplay_id" field.</summary>
    public const int UplayIdFieldNumber = 3;
    private readonly static uint UplayIdDefaultValue = 0;

    private uint uplayId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UplayId {
      get { if ((_hasBits0 & 2) != 0) { return uplayId_; } else { return UplayIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uplayId_ = value;
      }
    }
    /// <summary>Gets whether the "uplay_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUplayId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uplay_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUplayId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterOwnershipByCdKeyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterOwnershipByCdKeyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CdKey != other.CdKey) return false;
      if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
      if (UplayId != other.UplayId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCdKey) hash ^= CdKey.GetHashCode();
      if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
      if (HasUplayId) hash ^= UplayId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCdKey) {
        output.WriteRawTag(10);
        output.WriteString(CdKey);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (HasUplayId) {
        output.WriteRawTag(24);
        output.WriteUInt32(UplayId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCdKey) {
        output.WriteRawTag(10);
        output.WriteString(CdKey);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (HasUplayId) {
        output.WriteRawTag(24);
        output.WriteUInt32(UplayId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCdKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CdKey);
      }
      if (HasDeprecatedTestConfig) {
        size += 1 + 1;
      }
      if (HasUplayId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UplayId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterOwnershipByCdKeyReq other) {
      if (other == null) {
        return;
      }
      if (other.HasCdKey) {
        CdKey = other.CdKey;
      }
      if (other.HasDeprecatedTestConfig) {
        DeprecatedTestConfig = other.DeprecatedTestConfig;
      }
      if (other.HasUplayId) {
        UplayId = other.UplayId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CdKey = input.ReadString();
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
          case 24: {
            UplayId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CdKey = input.ReadString();
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
          case 24: {
            UplayId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegisterOwnershipSteamPopReq : pb::IMessage<RegisterOwnershipSteamPopReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterOwnershipSteamPopReq> _parser = new pb::MessageParser<RegisterOwnershipSteamPopReq>(() => new RegisterOwnershipSteamPopReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterOwnershipSteamPopReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipSteamPopReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipSteamPopReq(RegisterOwnershipSteamPopReq other) : this() {
      _hasBits0 = other._hasBits0;
      ticket_ = other.ticket_.Clone();
      confirm_ = other.confirm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipSteamPopReq Clone() {
      return new RegisterOwnershipSteamPopReq(this);
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_ticket_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> ticket_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Ticket {
      get { return ticket_; }
    }

    /// <summary>Field number for the "confirm" field.</summary>
    public const int ConfirmFieldNumber = 2;
    private readonly static bool ConfirmDefaultValue = false;

    private bool confirm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Confirm {
      get { if ((_hasBits0 & 1) != 0) { return confirm_; } else { return ConfirmDefaultValue; } }
      set {
        _hasBits0 |= 1;
        confirm_ = value;
      }
    }
    /// <summary>Gets whether the "confirm" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConfirm {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "confirm" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfirm() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterOwnershipSteamPopReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterOwnershipSteamPopReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ticket_.Equals(other.ticket_)) return false;
      if (Confirm != other.Confirm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ticket_.GetHashCode();
      if (HasConfirm) hash ^= Confirm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ticket_.WriteTo(output, _repeated_ticket_codec);
      if (HasConfirm) {
        output.WriteRawTag(16);
        output.WriteBool(Confirm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ticket_.WriteTo(ref output, _repeated_ticket_codec);
      if (HasConfirm) {
        output.WriteRawTag(16);
        output.WriteBool(Confirm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += ticket_.CalculateSize(_repeated_ticket_codec);
      if (HasConfirm) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterOwnershipSteamPopReq other) {
      if (other == null) {
        return;
      }
      ticket_.Add(other.ticket_);
      if (other.HasConfirm) {
        Confirm = other.Confirm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ticket_.AddEntriesFrom(input, _repeated_ticket_codec);
            break;
          }
          case 16: {
            Confirm = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ticket_.AddEntriesFrom(ref input, _repeated_ticket_codec);
            break;
          }
          case 16: {
            Confirm = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegisterOwnershipSteamPopRsp : pb::IMessage<RegisterOwnershipSteamPopRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterOwnershipSteamPopRsp> _parser = new pb::MessageParser<RegisterOwnershipSteamPopRsp>(() => new RegisterOwnershipSteamPopRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterOwnershipSteamPopRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipSteamPopRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipSteamPopRsp(RegisterOwnershipSteamPopRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      configuration_ = other.configuration_.Clone();
      ticketsClaimedByOther_ = other.ticketsClaimedByOther_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipSteamPopRsp Clone() {
      return new RegisterOwnershipSteamPopRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.RegisterOwnershipSteamPopRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.RegisterOwnershipSteamPopRsp.Types.Result.Success;

    private global::Uplay.Ownership.RegisterOwnershipSteamPopRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipSteamPopRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "configuration" field.</summary>
    public const int ConfigurationFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_configuration_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> configuration_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Configuration {
      get { return configuration_; }
    }

    /// <summary>Field number for the "tickets_claimed_by_other" field.</summary>
    public const int TicketsClaimedByOtherFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_ticketsClaimedByOther_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> ticketsClaimedByOther_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> TicketsClaimedByOther {
      get { return ticketsClaimedByOther_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterOwnershipSteamPopRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterOwnershipSteamPopRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!configuration_.Equals(other.configuration_)) return false;
      if(!ticketsClaimedByOther_.Equals(other.ticketsClaimedByOther_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      hash ^= configuration_.GetHashCode();
      hash ^= ticketsClaimedByOther_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      configuration_.WriteTo(output, _repeated_configuration_codec);
      ticketsClaimedByOther_.WriteTo(output, _repeated_ticketsClaimedByOther_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      configuration_.WriteTo(ref output, _repeated_configuration_codec);
      ticketsClaimedByOther_.WriteTo(ref output, _repeated_ticketsClaimedByOther_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += configuration_.CalculateSize(_repeated_configuration_codec);
      size += ticketsClaimedByOther_.CalculateSize(_repeated_ticketsClaimedByOther_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterOwnershipSteamPopRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      configuration_.Add(other.configuration_);
      ticketsClaimedByOther_.Add(other.ticketsClaimedByOther_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.RegisterOwnershipSteamPopRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            configuration_.AddEntriesFrom(input, _repeated_configuration_codec);
            break;
          }
          case 26: {
            ticketsClaimedByOther_.AddEntriesFrom(input, _repeated_ticketsClaimedByOther_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.RegisterOwnershipSteamPopRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            configuration_.AddEntriesFrom(ref input, _repeated_configuration_codec);
            break;
          }
          case 26: {
            ticketsClaimedByOther_.AddEntriesFrom(ref input, _repeated_ticketsClaimedByOther_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RegisterOwnershipSteamPopRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_InvalidTicket")] InvalidTicket = 2,
        [pbr::OriginalName("Result_TicketsAlreadyClaimed")] TicketsAlreadyClaimed = 3,
        [pbr::OriginalName("Result_NoPackagesFound")] NoPackagesFound = 4,
      }

    }
    #endregion

  }

  public sealed partial class RegisterOwnershipFromOculusReq : pb::IMessage<RegisterOwnershipFromOculusReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterOwnershipFromOculusReq> _parser = new pb::MessageParser<RegisterOwnershipFromOculusReq>(() => new RegisterOwnershipFromOculusReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterOwnershipFromOculusReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromOculusReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromOculusReq(RegisterOwnershipFromOculusReq other) : this() {
      accessToken_ = other.accessToken_;
      oculusAppId_ = other.oculusAppId_;
      oculusUserId_ = other.oculusUserId_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromOculusReq Clone() {
      return new RegisterOwnershipFromOculusReq(this);
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private readonly static string AccessTokenDefaultValue = "";

    private string accessToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessToken {
      get { return accessToken_ ?? AccessTokenDefaultValue; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "access_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccessToken {
      get { return accessToken_ != null; }
    }
    /// <summary>Clears the value of the "access_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccessToken() {
      accessToken_ = null;
    }

    /// <summary>Field number for the "oculus_app_id" field.</summary>
    public const int OculusAppIdFieldNumber = 2;
    private readonly static string OculusAppIdDefaultValue = "";

    private string oculusAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OculusAppId {
      get { return oculusAppId_ ?? OculusAppIdDefaultValue; }
      set {
        oculusAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "oculus_app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOculusAppId {
      get { return oculusAppId_ != null; }
    }
    /// <summary>Clears the value of the "oculus_app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOculusAppId() {
      oculusAppId_ = null;
    }

    /// <summary>Field number for the "oculus_user_id" field.</summary>
    public const int OculusUserIdFieldNumber = 3;
    private readonly static string OculusUserIdDefaultValue = "";

    private string oculusUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OculusUserId {
      get { return oculusUserId_ ?? OculusUserIdDefaultValue; }
      set {
        oculusUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "oculus_user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOculusUserId {
      get { return oculusUserId_ != null; }
    }
    /// <summary>Clears the value of the "oculus_user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOculusUserId() {
      oculusUserId_ = null;
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private readonly static string UserIdDefaultValue = "";

    private string userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_ ?? UserIdDefaultValue; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return userId_ != null; }
    }
    /// <summary>Clears the value of the "user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      userId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterOwnershipFromOculusReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterOwnershipFromOculusReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessToken != other.AccessToken) return false;
      if (OculusAppId != other.OculusAppId) return false;
      if (OculusUserId != other.OculusUserId) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccessToken) hash ^= AccessToken.GetHashCode();
      if (HasOculusAppId) hash ^= OculusAppId.GetHashCode();
      if (HasOculusUserId) hash ^= OculusUserId.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccessToken) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (HasOculusAppId) {
        output.WriteRawTag(18);
        output.WriteString(OculusAppId);
      }
      if (HasOculusUserId) {
        output.WriteRawTag(26);
        output.WriteString(OculusUserId);
      }
      if (HasUserId) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccessToken) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (HasOculusAppId) {
        output.WriteRawTag(18);
        output.WriteString(OculusAppId);
      }
      if (HasOculusUserId) {
        output.WriteRawTag(26);
        output.WriteString(OculusUserId);
      }
      if (HasUserId) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAccessToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (HasOculusAppId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OculusAppId);
      }
      if (HasOculusUserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OculusUserId);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterOwnershipFromOculusReq other) {
      if (other == null) {
        return;
      }
      if (other.HasAccessToken) {
        AccessToken = other.AccessToken;
      }
      if (other.HasOculusAppId) {
        OculusAppId = other.OculusAppId;
      }
      if (other.HasOculusUserId) {
        OculusUserId = other.OculusUserId;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 18: {
            OculusAppId = input.ReadString();
            break;
          }
          case 26: {
            OculusUserId = input.ReadString();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 18: {
            OculusAppId = input.ReadString();
            break;
          }
          case 26: {
            OculusUserId = input.ReadString();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegisterOwnershipFromOculusRsp : pb::IMessage<RegisterOwnershipFromOculusRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterOwnershipFromOculusRsp> _parser = new pb::MessageParser<RegisterOwnershipFromOculusRsp>(() => new RegisterOwnershipFromOculusRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterOwnershipFromOculusRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromOculusRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromOculusRsp(RegisterOwnershipFromOculusRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      claimedAccountId_ = other.claimedAccountId_;
      ownedGames_ = other.ownedGames_ != null ? other.ownedGames_.Clone() : null;
      ownedGamesContainer_ = other.ownedGamesContainer_ != null ? other.ownedGamesContainer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromOculusRsp Clone() {
      return new RegisterOwnershipFromOculusRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.RegisterOwnershipFromOculusRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.RegisterOwnershipFromOculusRsp.Types.Result.Success;

    private global::Uplay.Ownership.RegisterOwnershipFromOculusRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipFromOculusRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "claimed_account_id" field.</summary>
    public const int ClaimedAccountIdFieldNumber = 2;
    private readonly static string ClaimedAccountIdDefaultValue = "";

    private string claimedAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClaimedAccountId {
      get { return claimedAccountId_ ?? ClaimedAccountIdDefaultValue; }
      set {
        claimedAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "claimed_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClaimedAccountId {
      get { return claimedAccountId_ != null; }
    }
    /// <summary>Clears the value of the "claimed_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClaimedAccountId() {
      claimedAccountId_ = null;
    }

    /// <summary>Field number for the "owned_games" field.</summary>
    public const int OwnedGamesFieldNumber = 3;
    private global::Uplay.Ownership.OwnedGames ownedGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGames OwnedGames {
      get { return ownedGames_; }
      set {
        ownedGames_ = value;
      }
    }

    /// <summary>Field number for the "owned_games_container" field.</summary>
    public const int OwnedGamesContainerFieldNumber = 4;
    private global::Uplay.Ownership.OwnedGamesContainer ownedGamesContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGamesContainer OwnedGamesContainer {
      get { return ownedGamesContainer_; }
      set {
        ownedGamesContainer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterOwnershipFromOculusRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterOwnershipFromOculusRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (ClaimedAccountId != other.ClaimedAccountId) return false;
      if (!object.Equals(OwnedGames, other.OwnedGames)) return false;
      if (!object.Equals(OwnedGamesContainer, other.OwnedGamesContainer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasClaimedAccountId) hash ^= ClaimedAccountId.GetHashCode();
      if (ownedGames_ != null) hash ^= OwnedGames.GetHashCode();
      if (ownedGamesContainer_ != null) hash ^= OwnedGamesContainer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasClaimedAccountId) {
        output.WriteRawTag(18);
        output.WriteString(ClaimedAccountId);
      }
      if (ownedGames_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OwnedGames);
      }
      if (ownedGamesContainer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OwnedGamesContainer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasClaimedAccountId) {
        output.WriteRawTag(18);
        output.WriteString(ClaimedAccountId);
      }
      if (ownedGames_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OwnedGames);
      }
      if (ownedGamesContainer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OwnedGamesContainer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasClaimedAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClaimedAccountId);
      }
      if (ownedGames_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGames);
      }
      if (ownedGamesContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGamesContainer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterOwnershipFromOculusRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasClaimedAccountId) {
        ClaimedAccountId = other.ClaimedAccountId;
      }
      if (other.ownedGames_ != null) {
        if (ownedGames_ == null) {
          OwnedGames = new global::Uplay.Ownership.OwnedGames();
        }
        OwnedGames.MergeFrom(other.OwnedGames);
      }
      if (other.ownedGamesContainer_ != null) {
        if (ownedGamesContainer_ == null) {
          OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
        }
        OwnedGamesContainer.MergeFrom(other.OwnedGamesContainer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.RegisterOwnershipFromOculusRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            ClaimedAccountId = input.ReadString();
            break;
          }
          case 26: {
            if (ownedGames_ == null) {
              OwnedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(OwnedGames);
            break;
          }
          case 34: {
            if (ownedGamesContainer_ == null) {
              OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
            }
            input.ReadMessage(OwnedGamesContainer);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.RegisterOwnershipFromOculusRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            ClaimedAccountId = input.ReadString();
            break;
          }
          case 26: {
            if (ownedGames_ == null) {
              OwnedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(OwnedGames);
            break;
          }
          case 34: {
            if (ownedGamesContainer_ == null) {
              OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
            }
            input.ReadMessage(OwnedGamesContainer);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RegisterOwnershipFromOculusRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_InvalidAccessToken")] InvalidAccessToken = 2,
        [pbr::OriginalName("Result_InvalidAppId")] InvalidAppId = 3,
        [pbr::OriginalName("Result_InvalidUserId")] InvalidUserId = 4,
        [pbr::OriginalName("Result_AlreadyClaimed")] AlreadyClaimed = 5,
        [pbr::OriginalName("Result_NoPackagesFound")] NoPackagesFound = 6,
        [pbr::OriginalName("Result_ServerTimeout")] ServerTimeout = 7,
        [pbr::OriginalName("Result_NothingOwned")] NothingOwned = 8,
        [pbr::OriginalName("Result_UnknownFailure")] UnknownFailure = 9,
        [pbr::OriginalName("Result_AddOwnershipFailure")] AddOwnershipFailure = 10,
      }

    }
    #endregion

  }

  public sealed partial class RegisterOwnershipFromWeGameReq : pb::IMessage<RegisterOwnershipFromWeGameReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterOwnershipFromWeGameReq> _parser = new pb::MessageParser<RegisterOwnershipFromWeGameReq>(() => new RegisterOwnershipFromWeGameReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterOwnershipFromWeGameReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromWeGameReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromWeGameReq(RegisterOwnershipFromWeGameReq other) : this() {
      jsonWebToken_ = other.jsonWebToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromWeGameReq Clone() {
      return new RegisterOwnershipFromWeGameReq(this);
    }

    /// <summary>Field number for the "json_web_token" field.</summary>
    public const int JsonWebTokenFieldNumber = 1;
    private readonly static string JsonWebTokenDefaultValue = "";

    private string jsonWebToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string JsonWebToken {
      get { return jsonWebToken_ ?? JsonWebTokenDefaultValue; }
      set {
        jsonWebToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "json_web_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJsonWebToken {
      get { return jsonWebToken_ != null; }
    }
    /// <summary>Clears the value of the "json_web_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJsonWebToken() {
      jsonWebToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterOwnershipFromWeGameReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterOwnershipFromWeGameReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JsonWebToken != other.JsonWebToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasJsonWebToken) hash ^= JsonWebToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasJsonWebToken) {
        output.WriteRawTag(10);
        output.WriteString(JsonWebToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasJsonWebToken) {
        output.WriteRawTag(10);
        output.WriteString(JsonWebToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasJsonWebToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonWebToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterOwnershipFromWeGameReq other) {
      if (other == null) {
        return;
      }
      if (other.HasJsonWebToken) {
        JsonWebToken = other.JsonWebToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JsonWebToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            JsonWebToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegisterOwnershipFromWeGameRsp : pb::IMessage<RegisterOwnershipFromWeGameRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterOwnershipFromWeGameRsp> _parser = new pb::MessageParser<RegisterOwnershipFromWeGameRsp>(() => new RegisterOwnershipFromWeGameRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterOwnershipFromWeGameRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromWeGameRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromWeGameRsp(RegisterOwnershipFromWeGameRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      ownedGames_ = other.ownedGames_ != null ? other.ownedGames_.Clone() : null;
      ownedGamesContainer_ = other.ownedGamesContainer_ != null ? other.ownedGamesContainer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipFromWeGameRsp Clone() {
      return new RegisterOwnershipFromWeGameRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp.Types.Result.Success;

    private global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owned_games" field.</summary>
    public const int OwnedGamesFieldNumber = 2;
    private global::Uplay.Ownership.OwnedGames ownedGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGames OwnedGames {
      get { return ownedGames_; }
      set {
        ownedGames_ = value;
      }
    }

    /// <summary>Field number for the "owned_games_container" field.</summary>
    public const int OwnedGamesContainerFieldNumber = 3;
    private global::Uplay.Ownership.OwnedGamesContainer ownedGamesContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGamesContainer OwnedGamesContainer {
      get { return ownedGamesContainer_; }
      set {
        ownedGamesContainer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterOwnershipFromWeGameRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterOwnershipFromWeGameRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(OwnedGames, other.OwnedGames)) return false;
      if (!object.Equals(OwnedGamesContainer, other.OwnedGamesContainer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (ownedGames_ != null) hash ^= OwnedGames.GetHashCode();
      if (ownedGamesContainer_ != null) hash ^= OwnedGamesContainer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (ownedGames_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OwnedGames);
      }
      if (ownedGamesContainer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OwnedGamesContainer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (ownedGames_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OwnedGames);
      }
      if (ownedGamesContainer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OwnedGamesContainer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (ownedGames_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGames);
      }
      if (ownedGamesContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGamesContainer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterOwnershipFromWeGameRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.ownedGames_ != null) {
        if (ownedGames_ == null) {
          OwnedGames = new global::Uplay.Ownership.OwnedGames();
        }
        OwnedGames.MergeFrom(other.OwnedGames);
      }
      if (other.ownedGamesContainer_ != null) {
        if (ownedGamesContainer_ == null) {
          OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
        }
        OwnedGamesContainer.MergeFrom(other.OwnedGamesContainer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (ownedGames_ == null) {
              OwnedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(OwnedGames);
            break;
          }
          case 26: {
            if (ownedGamesContainer_ == null) {
              OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
            }
            input.ReadMessage(OwnedGamesContainer);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (ownedGames_ == null) {
              OwnedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(OwnedGames);
            break;
          }
          case 26: {
            if (ownedGamesContainer_ == null) {
              OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
            }
            input.ReadMessage(OwnedGamesContainer);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RegisterOwnershipFromWeGameRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_InvalidToken")] InvalidToken = 2,
        [pbr::OriginalName("Result_ServerError")] ServerError = 3,
        [pbr::OriginalName("Result_UnknownProduct")] UnknownProduct = 4,
        [pbr::OriginalName("Result_NotAvailable")] NotAvailable = 5,
        [pbr::OriginalName("Result_ServerTimeout")] ServerTimeout = 6,
      }

    }
    #endregion

  }

  public sealed partial class RegisterOwnershipRsp : pb::IMessage<RegisterOwnershipRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterOwnershipRsp> _parser = new pb::MessageParser<RegisterOwnershipRsp>(() => new RegisterOwnershipRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterOwnershipRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipRsp(RegisterOwnershipRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      ownedGamesContainer_ = other.ownedGamesContainer_ != null ? other.ownedGamesContainer_.Clone() : null;
      ownedGames_ = other.ownedGames_ != null ? other.ownedGames_.Clone() : null;
      bannedTime_ = other.bannedTime_;
      cdkeyClaimedDate_ = other.cdkeyClaimedDate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterOwnershipRsp Clone() {
      return new RegisterOwnershipRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.RegisterOwnershipRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.RegisterOwnershipRsp.Types.Result.Success;

    private global::Uplay.Ownership.RegisterOwnershipRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owned_games_container" field.</summary>
    public const int OwnedGamesContainerFieldNumber = 4;
    private global::Uplay.Ownership.OwnedGamesContainer ownedGamesContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGamesContainer OwnedGamesContainer {
      get { return ownedGamesContainer_; }
      set {
        ownedGamesContainer_ = value;
      }
    }

    /// <summary>Field number for the "owned_games" field.</summary>
    public const int OwnedGamesFieldNumber = 5;
    private global::Uplay.Ownership.OwnedGames ownedGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGames OwnedGames {
      get { return ownedGames_; }
      set {
        ownedGames_ = value;
      }
    }

    /// <summary>Field number for the "banned_time" field.</summary>
    public const int BannedTimeFieldNumber = 6;
    private readonly static uint BannedTimeDefaultValue = 0;

    private uint bannedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BannedTime {
      get { if ((_hasBits0 & 2) != 0) { return bannedTime_; } else { return BannedTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bannedTime_ = value;
      }
    }
    /// <summary>Gets whether the "banned_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBannedTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "banned_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBannedTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cdkey_claimed_date" field.</summary>
    public const int CdkeyClaimedDateFieldNumber = 7;
    private readonly static string CdkeyClaimedDateDefaultValue = "";

    private string cdkeyClaimedDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CdkeyClaimedDate {
      get { return cdkeyClaimedDate_ ?? CdkeyClaimedDateDefaultValue; }
      set {
        cdkeyClaimedDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cdkey_claimed_date" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCdkeyClaimedDate {
      get { return cdkeyClaimedDate_ != null; }
    }
    /// <summary>Clears the value of the "cdkey_claimed_date" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCdkeyClaimedDate() {
      cdkeyClaimedDate_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterOwnershipRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterOwnershipRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(OwnedGamesContainer, other.OwnedGamesContainer)) return false;
      if (!object.Equals(OwnedGames, other.OwnedGames)) return false;
      if (BannedTime != other.BannedTime) return false;
      if (CdkeyClaimedDate != other.CdkeyClaimedDate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (ownedGamesContainer_ != null) hash ^= OwnedGamesContainer.GetHashCode();
      if (ownedGames_ != null) hash ^= OwnedGames.GetHashCode();
      if (HasBannedTime) hash ^= BannedTime.GetHashCode();
      if (HasCdkeyClaimedDate) hash ^= CdkeyClaimedDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (ownedGamesContainer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OwnedGamesContainer);
      }
      if (ownedGames_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OwnedGames);
      }
      if (HasBannedTime) {
        output.WriteRawTag(48);
        output.WriteUInt32(BannedTime);
      }
      if (HasCdkeyClaimedDate) {
        output.WriteRawTag(58);
        output.WriteString(CdkeyClaimedDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (ownedGamesContainer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OwnedGamesContainer);
      }
      if (ownedGames_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OwnedGames);
      }
      if (HasBannedTime) {
        output.WriteRawTag(48);
        output.WriteUInt32(BannedTime);
      }
      if (HasCdkeyClaimedDate) {
        output.WriteRawTag(58);
        output.WriteString(CdkeyClaimedDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (ownedGamesContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGamesContainer);
      }
      if (ownedGames_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGames);
      }
      if (HasBannedTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BannedTime);
      }
      if (HasCdkeyClaimedDate) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CdkeyClaimedDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterOwnershipRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.ownedGamesContainer_ != null) {
        if (ownedGamesContainer_ == null) {
          OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
        }
        OwnedGamesContainer.MergeFrom(other.OwnedGamesContainer);
      }
      if (other.ownedGames_ != null) {
        if (ownedGames_ == null) {
          OwnedGames = new global::Uplay.Ownership.OwnedGames();
        }
        OwnedGames.MergeFrom(other.OwnedGames);
      }
      if (other.HasBannedTime) {
        BannedTime = other.BannedTime;
      }
      if (other.HasCdkeyClaimedDate) {
        CdkeyClaimedDate = other.CdkeyClaimedDate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.RegisterOwnershipRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 34: {
            if (ownedGamesContainer_ == null) {
              OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
            }
            input.ReadMessage(OwnedGamesContainer);
            break;
          }
          case 42: {
            if (ownedGames_ == null) {
              OwnedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(OwnedGames);
            break;
          }
          case 48: {
            BannedTime = input.ReadUInt32();
            break;
          }
          case 58: {
            CdkeyClaimedDate = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.RegisterOwnershipRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 34: {
            if (ownedGamesContainer_ == null) {
              OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
            }
            input.ReadMessage(OwnedGamesContainer);
            break;
          }
          case 42: {
            if (ownedGames_ == null) {
              OwnedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(OwnedGames);
            break;
          }
          case 48: {
            BannedTime = input.ReadUInt32();
            break;
          }
          case 58: {
            CdkeyClaimedDate = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RegisterOwnershipRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_BadCdKey")] BadCdKey = 2,
        [pbr::OriginalName("Result_BannedKey")] BannedKey = 3,
        [pbr::OriginalName("Result_BannedForCdKeySpam")] BannedForCdKeySpam = 4,
        [pbr::OriginalName("Result_ServerError")] ServerError = 5,
        [pbr::OriginalName("Result_UsedCdKeyOtherAccount")] UsedCdKeyOtherAccount = 6,
        [pbr::OriginalName("Result_OutOfKeys")] OutOfKeys = 7,
        [pbr::OriginalName("Result_NotAvailableYet")] NotAvailableYet = 8,
        [pbr::OriginalName("Result_NoLongerAvailable")] NoLongerAvailable = 9,
        [pbr::OriginalName("Result_NotAvailableInRegion")] NotAvailableInRegion = 10,
        [pbr::OriginalName("Result_UsedCdKeyThisAccount")] UsedCdKeyThisAccount = 11,
      }

    }
    #endregion

  }

  public sealed partial class ClaimKeystorageKeyReq : pb::IMessage<ClaimKeystorageKeyReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClaimKeystorageKeyReq> _parser = new pb::MessageParser<ClaimKeystorageKeyReq>(() => new ClaimKeystorageKeyReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClaimKeystorageKeyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimKeystorageKeyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimKeystorageKeyReq(ClaimKeystorageKeyReq other) : this() {
      productIds_ = other.productIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimKeystorageKeyReq Clone() {
      return new ClaimKeystorageKeyReq(this);
    }

    /// <summary>Field number for the "product_ids" field.</summary>
    public const int ProductIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_productIds_codec
        = pb::FieldCodec.ForUInt32(8);
    private readonly pbc::RepeatedField<uint> productIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ProductIds {
      get { return productIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClaimKeystorageKeyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClaimKeystorageKeyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!productIds_.Equals(other.productIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= productIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      productIds_.WriteTo(output, _repeated_productIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      productIds_.WriteTo(ref output, _repeated_productIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += productIds_.CalculateSize(_repeated_productIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClaimKeystorageKeyReq other) {
      if (other == null) {
        return;
      }
      productIds_.Add(other.productIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            productIds_.AddEntriesFrom(input, _repeated_productIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            productIds_.AddEntriesFrom(ref input, _repeated_productIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClaimKeystorageKeyRsp : pb::IMessage<ClaimKeystorageKeyRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClaimKeystorageKeyRsp> _parser = new pb::MessageParser<ClaimKeystorageKeyRsp>(() => new ClaimKeystorageKeyRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClaimKeystorageKeyRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimKeystorageKeyRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimKeystorageKeyRsp(ClaimKeystorageKeyRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      productKeyPairs_ = other.productKeyPairs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimKeystorageKeyRsp Clone() {
      return new ClaimKeystorageKeyRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.Result.Success;

    private global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "product_key_pairs" field.</summary>
    public const int ProductKeyPairsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.ProductKeyPair> _repeated_productKeyPairs_codec
        = pb::FieldCodec.ForMessage(18, global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.ProductKeyPair.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.ProductKeyPair> productKeyPairs_ = new pbc::RepeatedField<global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.ProductKeyPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.ProductKeyPair> ProductKeyPairs {
      get { return productKeyPairs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClaimKeystorageKeyRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClaimKeystorageKeyRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!productKeyPairs_.Equals(other.productKeyPairs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      hash ^= productKeyPairs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      productKeyPairs_.WriteTo(output, _repeated_productKeyPairs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      productKeyPairs_.WriteTo(ref output, _repeated_productKeyPairs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += productKeyPairs_.CalculateSize(_repeated_productKeyPairs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClaimKeystorageKeyRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      productKeyPairs_.Add(other.productKeyPairs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            productKeyPairs_.AddEntriesFrom(input, _repeated_productKeyPairs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.ClaimKeystorageKeyRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            productKeyPairs_.AddEntriesFrom(ref input, _repeated_productKeyPairs_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ClaimKeystorageKeyRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_Failure")] Failure = 2,
      }

      public sealed partial class ProductKeyPair : pb::IMessage<ProductKeyPair>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ProductKeyPair> _parser = new pb::MessageParser<ProductKeyPair>(() => new ProductKeyPair());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ProductKeyPair> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.ClaimKeystorageKeyRsp.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductKeyPair() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductKeyPair(ProductKeyPair other) : this() {
          _hasBits0 = other._hasBits0;
          productId_ = other.productId_;
          cdKey_ = other.cdKey_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductKeyPair Clone() {
          return new ProductKeyPair(this);
        }

        /// <summary>Field number for the "product_id" field.</summary>
        public const int ProductIdFieldNumber = 1;
        private readonly static uint ProductIdDefaultValue = 0;

        private uint productId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProductId {
          get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            productId_ = value;
          }
        }
        /// <summary>Gets whether the "product_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProductId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "product_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProductId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "cd_key" field.</summary>
        public const int CdKeyFieldNumber = 2;
        private readonly static string CdKeyDefaultValue = "";

        private string cdKey_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string CdKey {
          get { return cdKey_ ?? CdKeyDefaultValue; }
          set {
            cdKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "cd_key" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCdKey {
          get { return cdKey_ != null; }
        }
        /// <summary>Clears the value of the "cd_key" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCdKey() {
          cdKey_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ProductKeyPair);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ProductKeyPair other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProductId != other.ProductId) return false;
          if (CdKey != other.CdKey) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasProductId) hash ^= ProductId.GetHashCode();
          if (HasCdKey) hash ^= CdKey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          if (HasCdKey) {
            output.WriteRawTag(18);
            output.WriteString(CdKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          if (HasCdKey) {
            output.WriteRawTag(18);
            output.WriteString(CdKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasProductId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
          }
          if (HasCdKey) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CdKey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ProductKeyPair other) {
          if (other == null) {
            return;
          }
          if (other.HasProductId) {
            ProductId = other.ProductId;
          }
          if (other.HasCdKey) {
            CdKey = other.CdKey;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 18: {
                CdKey = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 18: {
                CdKey = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class GetBatchDownloadUrlsReq : pb::IMessage<GetBatchDownloadUrlsReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBatchDownloadUrlsReq> _parser = new pb::MessageParser<GetBatchDownloadUrlsReq>(() => new GetBatchDownloadUrlsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetBatchDownloadUrlsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBatchDownloadUrlsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBatchDownloadUrlsReq(GetBatchDownloadUrlsReq other) : this() {
      urlRequests_ = other.urlRequests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBatchDownloadUrlsReq Clone() {
      return new GetBatchDownloadUrlsReq(this);
    }

    /// <summary>Field number for the "url_requests" field.</summary>
    public const int UrlRequestsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uplay.Ownership.GetBatchDownloadUrlsReq.Types.UrlRequest> _repeated_urlRequests_codec
        = pb::FieldCodec.ForMessage(10, global::Uplay.Ownership.GetBatchDownloadUrlsReq.Types.UrlRequest.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Ownership.GetBatchDownloadUrlsReq.Types.UrlRequest> urlRequests_ = new pbc::RepeatedField<global::Uplay.Ownership.GetBatchDownloadUrlsReq.Types.UrlRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Ownership.GetBatchDownloadUrlsReq.Types.UrlRequest> UrlRequests {
      get { return urlRequests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetBatchDownloadUrlsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetBatchDownloadUrlsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!urlRequests_.Equals(other.urlRequests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= urlRequests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      urlRequests_.WriteTo(output, _repeated_urlRequests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      urlRequests_.WriteTo(ref output, _repeated_urlRequests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += urlRequests_.CalculateSize(_repeated_urlRequests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetBatchDownloadUrlsReq other) {
      if (other == null) {
        return;
      }
      urlRequests_.Add(other.urlRequests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            urlRequests_.AddEntriesFrom(input, _repeated_urlRequests_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            urlRequests_.AddEntriesFrom(ref input, _repeated_urlRequests_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetBatchDownloadUrlsReq message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class UrlRequest : pb::IMessage<UrlRequest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UrlRequest> _parser = new pb::MessageParser<UrlRequest>(() => new UrlRequest());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<UrlRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.GetBatchDownloadUrlsReq.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UrlRequest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UrlRequest(UrlRequest other) : this() {
          _hasBits0 = other._hasBits0;
          productId_ = other.productId_;
          relativeFilePaths_ = other.relativeFilePaths_.Clone();
          deprecatedTestConfig_ = other.deprecatedTestConfig_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UrlRequest Clone() {
          return new UrlRequest(this);
        }

        /// <summary>Field number for the "product_id" field.</summary>
        public const int ProductIdFieldNumber = 1;
        private readonly static uint ProductIdDefaultValue = 0;

        private uint productId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProductId {
          get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            productId_ = value;
          }
        }
        /// <summary>Gets whether the "product_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProductId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "product_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProductId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "relative_file_paths" field.</summary>
        public const int RelativeFilePathsFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_relativeFilePaths_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> relativeFilePaths_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> RelativeFilePaths {
          get { return relativeFilePaths_; }
        }

        /// <summary>Field number for the "deprecated_test_config" field.</summary>
        public const int DeprecatedTestConfigFieldNumber = 3;
        private readonly static bool DeprecatedTestConfigDefaultValue = false;

        private bool deprecatedTestConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool DeprecatedTestConfig {
          get { if ((_hasBits0 & 2) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
          set {
            _hasBits0 |= 2;
            deprecatedTestConfig_ = value;
          }
        }
        /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDeprecatedTestConfig {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "deprecated_test_config" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDeprecatedTestConfig() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as UrlRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(UrlRequest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProductId != other.ProductId) return false;
          if(!relativeFilePaths_.Equals(other.relativeFilePaths_)) return false;
          if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasProductId) hash ^= ProductId.GetHashCode();
          hash ^= relativeFilePaths_.GetHashCode();
          if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          relativeFilePaths_.WriteTo(output, _repeated_relativeFilePaths_codec);
          if (HasDeprecatedTestConfig) {
            output.WriteRawTag(24);
            output.WriteBool(DeprecatedTestConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          relativeFilePaths_.WriteTo(ref output, _repeated_relativeFilePaths_codec);
          if (HasDeprecatedTestConfig) {
            output.WriteRawTag(24);
            output.WriteBool(DeprecatedTestConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasProductId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
          }
          size += relativeFilePaths_.CalculateSize(_repeated_relativeFilePaths_codec);
          if (HasDeprecatedTestConfig) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(UrlRequest other) {
          if (other == null) {
            return;
          }
          if (other.HasProductId) {
            ProductId = other.ProductId;
          }
          relativeFilePaths_.Add(other.relativeFilePaths_);
          if (other.HasDeprecatedTestConfig) {
            DeprecatedTestConfig = other.DeprecatedTestConfig;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 18: {
                relativeFilePaths_.AddEntriesFrom(input, _repeated_relativeFilePaths_codec);
                break;
              }
              case 24: {
                DeprecatedTestConfig = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 18: {
                relativeFilePaths_.AddEntriesFrom(ref input, _repeated_relativeFilePaths_codec);
                break;
              }
              case 24: {
                DeprecatedTestConfig = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class GetBatchDownloadUrlsRsp : pb::IMessage<GetBatchDownloadUrlsRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBatchDownloadUrlsRsp> _parser = new pb::MessageParser<GetBatchDownloadUrlsRsp>(() => new GetBatchDownloadUrlsRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetBatchDownloadUrlsRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBatchDownloadUrlsRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBatchDownloadUrlsRsp(GetBatchDownloadUrlsRsp other) : this() {
      _hasBits0 = other._hasBits0;
      urlResponses_ = other.urlResponses_.Clone();
      ttlSeconds_ = other.ttlSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBatchDownloadUrlsRsp Clone() {
      return new GetBatchDownloadUrlsRsp(this);
    }

    /// <summary>Field number for the "url_responses" field.</summary>
    public const int UrlResponsesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.UrlResponse> _repeated_urlResponses_codec
        = pb::FieldCodec.ForMessage(10, global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.UrlResponse.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.UrlResponse> urlResponses_ = new pbc::RepeatedField<global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.UrlResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.UrlResponse> UrlResponses {
      get { return urlResponses_; }
    }

    /// <summary>Field number for the "ttl_seconds" field.</summary>
    public const int TtlSecondsFieldNumber = 2;
    private readonly static uint TtlSecondsDefaultValue = 0;

    private uint ttlSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TtlSeconds {
      get { if ((_hasBits0 & 1) != 0) { return ttlSeconds_; } else { return TtlSecondsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ttlSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "ttl_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTtlSeconds {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ttl_seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTtlSeconds() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetBatchDownloadUrlsRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetBatchDownloadUrlsRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!urlResponses_.Equals(other.urlResponses_)) return false;
      if (TtlSeconds != other.TtlSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= urlResponses_.GetHashCode();
      if (HasTtlSeconds) hash ^= TtlSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      urlResponses_.WriteTo(output, _repeated_urlResponses_codec);
      if (HasTtlSeconds) {
        output.WriteRawTag(16);
        output.WriteUInt32(TtlSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      urlResponses_.WriteTo(ref output, _repeated_urlResponses_codec);
      if (HasTtlSeconds) {
        output.WriteRawTag(16);
        output.WriteUInt32(TtlSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += urlResponses_.CalculateSize(_repeated_urlResponses_codec);
      if (HasTtlSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TtlSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetBatchDownloadUrlsRsp other) {
      if (other == null) {
        return;
      }
      urlResponses_.Add(other.urlResponses_);
      if (other.HasTtlSeconds) {
        TtlSeconds = other.TtlSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            urlResponses_.AddEntriesFrom(input, _repeated_urlResponses_codec);
            break;
          }
          case 16: {
            TtlSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            urlResponses_.AddEntriesFrom(ref input, _repeated_urlResponses_codec);
            break;
          }
          case 16: {
            TtlSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetBatchDownloadUrlsRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_ProductNotOwned")] ProductNotOwned = 2,
      }

      public sealed partial class UrlResponse : pb::IMessage<UrlResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UrlResponse> _parser = new pb::MessageParser<UrlResponse>(() => new UrlResponse());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<UrlResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UrlResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UrlResponse(UrlResponse other) : this() {
          _hasBits0 = other._hasBits0;
          result_ = other.result_;
          deprecatedDownloadUrls_ = other.deprecatedDownloadUrls_.Clone();
          downloadUrls_ = other.downloadUrls_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UrlResponse Clone() {
          return new UrlResponse(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private readonly static global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.Result.Success;

        private global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.Result result_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.Result Result {
          get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
          set {
            _hasBits0 |= 1;
            result_ = value;
          }
        }
        /// <summary>Gets whether the "result" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasResult {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "result" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearResult() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "deprecated_download_urls" field.</summary>
        public const int DeprecatedDownloadUrlsFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_deprecatedDownloadUrls_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> deprecatedDownloadUrls_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> DeprecatedDownloadUrls {
          get { return deprecatedDownloadUrls_; }
        }

        /// <summary>Field number for the "download_urls" field.</summary>
        public const int DownloadUrlsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.DownloadUrls> _repeated_downloadUrls_codec
            = pb::FieldCodec.ForMessage(26, global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.DownloadUrls.Parser);
        private readonly pbc::RepeatedField<global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.DownloadUrls> downloadUrls_ = new pbc::RepeatedField<global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.DownloadUrls>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.DownloadUrls> DownloadUrls {
          get { return downloadUrls_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as UrlResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(UrlResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Result != other.Result) return false;
          if(!deprecatedDownloadUrls_.Equals(other.deprecatedDownloadUrls_)) return false;
          if(!downloadUrls_.Equals(other.downloadUrls_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasResult) hash ^= Result.GetHashCode();
          hash ^= deprecatedDownloadUrls_.GetHashCode();
          hash ^= downloadUrls_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasResult) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Result);
          }
          deprecatedDownloadUrls_.WriteTo(output, _repeated_deprecatedDownloadUrls_codec);
          downloadUrls_.WriteTo(output, _repeated_downloadUrls_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasResult) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Result);
          }
          deprecatedDownloadUrls_.WriteTo(ref output, _repeated_deprecatedDownloadUrls_codec);
          downloadUrls_.WriteTo(ref output, _repeated_downloadUrls_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasResult) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
          }
          size += deprecatedDownloadUrls_.CalculateSize(_repeated_deprecatedDownloadUrls_codec);
          size += downloadUrls_.CalculateSize(_repeated_downloadUrls_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(UrlResponse other) {
          if (other == null) {
            return;
          }
          if (other.HasResult) {
            Result = other.Result;
          }
          deprecatedDownloadUrls_.Add(other.deprecatedDownloadUrls_);
          downloadUrls_.Add(other.downloadUrls_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Result = (global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.Result) input.ReadEnum();
                break;
              }
              case 18: {
                deprecatedDownloadUrls_.AddEntriesFrom(input, _repeated_deprecatedDownloadUrls_codec);
                break;
              }
              case 26: {
                downloadUrls_.AddEntriesFrom(input, _repeated_downloadUrls_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Result = (global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Types.Result) input.ReadEnum();
                break;
              }
              case 18: {
                deprecatedDownloadUrls_.AddEntriesFrom(ref input, _repeated_deprecatedDownloadUrls_codec);
                break;
              }
              case 26: {
                downloadUrls_.AddEntriesFrom(ref input, _repeated_downloadUrls_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class DownloadUrls : pb::IMessage<DownloadUrls>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DownloadUrls> _parser = new pb::MessageParser<DownloadUrls>(() => new DownloadUrls());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DownloadUrls> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.GetBatchDownloadUrlsRsp.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DownloadUrls() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DownloadUrls(DownloadUrls other) : this() {
          urls_ = other.urls_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DownloadUrls Clone() {
          return new DownloadUrls(this);
        }

        /// <summary>Field number for the "urls" field.</summary>
        public const int UrlsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_urls_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> urls_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Urls {
          get { return urls_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DownloadUrls);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DownloadUrls other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!urls_.Equals(other.urls_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= urls_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          urls_.WriteTo(output, _repeated_urls_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          urls_.WriteTo(ref output, _repeated_urls_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += urls_.CalculateSize(_repeated_urls_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DownloadUrls other) {
          if (other == null) {
            return;
          }
          urls_.Add(other.urls_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                urls_.AddEntriesFrom(input, _repeated_urls_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                urls_.AddEntriesFrom(ref input, _repeated_urls_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class DeprecatedGetLatestManifestsReq : pb::IMessage<DeprecatedGetLatestManifestsReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeprecatedGetLatestManifestsReq> _parser = new pb::MessageParser<DeprecatedGetLatestManifestsReq>(() => new DeprecatedGetLatestManifestsReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeprecatedGetLatestManifestsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetLatestManifestsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetLatestManifestsReq(DeprecatedGetLatestManifestsReq other) : this() {
      _hasBits0 = other._hasBits0;
      deprecatedProductIds_ = other.deprecatedProductIds_.Clone();
      deprecatedTestConfig_ = other.deprecatedTestConfig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetLatestManifestsReq Clone() {
      return new DeprecatedGetLatestManifestsReq(this);
    }

    /// <summary>Field number for the "deprecated_product_ids" field.</summary>
    public const int DeprecatedProductIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_deprecatedProductIds_codec
        = pb::FieldCodec.ForUInt32(8);
    private readonly pbc::RepeatedField<uint> deprecatedProductIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> DeprecatedProductIds {
      get { return deprecatedProductIds_; }
    }

    /// <summary>Field number for the "deprecated_test_config" field.</summary>
    public const int DeprecatedTestConfigFieldNumber = 2;
    private readonly static bool DeprecatedTestConfigDefaultValue = false;

    private bool deprecatedTestConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeprecatedTestConfig {
      get { if ((_hasBits0 & 1) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deprecatedTestConfig_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeprecatedTestConfig {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_test_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeprecatedTestConfig() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeprecatedGetLatestManifestsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeprecatedGetLatestManifestsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!deprecatedProductIds_.Equals(other.deprecatedProductIds_)) return false;
      if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= deprecatedProductIds_.GetHashCode();
      if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      deprecatedProductIds_.WriteTo(output, _repeated_deprecatedProductIds_codec);
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      deprecatedProductIds_.WriteTo(ref output, _repeated_deprecatedProductIds_codec);
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += deprecatedProductIds_.CalculateSize(_repeated_deprecatedProductIds_codec);
      if (HasDeprecatedTestConfig) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeprecatedGetLatestManifestsReq other) {
      if (other == null) {
        return;
      }
      deprecatedProductIds_.Add(other.deprecatedProductIds_);
      if (other.HasDeprecatedTestConfig) {
        DeprecatedTestConfig = other.DeprecatedTestConfig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            deprecatedProductIds_.AddEntriesFrom(input, _repeated_deprecatedProductIds_codec);
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            deprecatedProductIds_.AddEntriesFrom(ref input, _repeated_deprecatedProductIds_codec);
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeprecatedGetLatestManifestsRsp : pb::IMessage<DeprecatedGetLatestManifestsRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeprecatedGetLatestManifestsRsp> _parser = new pb::MessageParser<DeprecatedGetLatestManifestsRsp>(() => new DeprecatedGetLatestManifestsRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeprecatedGetLatestManifestsRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetLatestManifestsRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetLatestManifestsRsp(DeprecatedGetLatestManifestsRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      manifests_ = other.manifests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeprecatedGetLatestManifestsRsp Clone() {
      return new DeprecatedGetLatestManifestsRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Result.Success;

    private global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "manifests" field.</summary>
    public const int ManifestsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest> _repeated_manifests_codec
        = pb::FieldCodec.ForMessage(18, global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest> manifests_ = new pbc::RepeatedField<global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest> Manifests {
      get { return manifests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeprecatedGetLatestManifestsRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeprecatedGetLatestManifestsRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!manifests_.Equals(other.manifests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      hash ^= manifests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      manifests_.WriteTo(output, _repeated_manifests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      manifests_.WriteTo(ref output, _repeated_manifests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += manifests_.CalculateSize(_repeated_manifests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeprecatedGetLatestManifestsRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      manifests_.Add(other.manifests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            manifests_.AddEntriesFrom(input, _repeated_manifests_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            manifests_.AddEntriesFrom(ref input, _repeated_manifests_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DeprecatedGetLatestManifestsRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_ServerError")] ServerError = 2,
      }

      public sealed partial class Manifest : pb::IMessage<Manifest>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Manifest> _parser = new pb::MessageParser<Manifest>(() => new Manifest());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Manifest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Manifest() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Manifest(Manifest other) : this() {
          _hasBits0 = other._hasBits0;
          result_ = other.result_;
          productId_ = other.productId_;
          manifest_ = other.manifest_;
          deprecatedTestConfig_ = other.deprecatedTestConfig_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Manifest Clone() {
          return new Manifest(this);
        }

        /// <summary>Field number for the "result" field.</summary>
        public const int ResultFieldNumber = 1;
        private readonly static global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest.Types.Result ResultDefaultValue = global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest.Types.Result.Success;

        private global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest.Types.Result result_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest.Types.Result Result {
          get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
          set {
            _hasBits0 |= 1;
            result_ = value;
          }
        }
        /// <summary>Gets whether the "result" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasResult {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "result" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearResult() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "product_id" field.</summary>
        public const int ProductIdFieldNumber = 2;
        private readonly static uint ProductIdDefaultValue = 0;

        private uint productId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProductId {
          get { if ((_hasBits0 & 2) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            productId_ = value;
          }
        }
        /// <summary>Gets whether the "product_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProductId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "product_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProductId() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "manifest" field.</summary>
        public const int Manifest_FieldNumber = 3;
        private readonly static string Manifest_DefaultValue = "";

        private string manifest_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Manifest_ {
          get { return manifest_ ?? Manifest_DefaultValue; }
          set {
            manifest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "manifest" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasManifest_ {
          get { return manifest_ != null; }
        }
        /// <summary>Clears the value of the "manifest" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearManifest_() {
          manifest_ = null;
        }

        /// <summary>Field number for the "deprecated_test_config" field.</summary>
        public const int DeprecatedTestConfigFieldNumber = 4;
        private readonly static bool DeprecatedTestConfigDefaultValue = false;

        private bool deprecatedTestConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool DeprecatedTestConfig {
          get { if ((_hasBits0 & 4) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
          set {
            _hasBits0 |= 4;
            deprecatedTestConfig_ = value;
          }
        }
        /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDeprecatedTestConfig {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "deprecated_test_config" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDeprecatedTestConfig() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Manifest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Manifest other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Result != other.Result) return false;
          if (ProductId != other.ProductId) return false;
          if (Manifest_ != other.Manifest_) return false;
          if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasResult) hash ^= Result.GetHashCode();
          if (HasProductId) hash ^= ProductId.GetHashCode();
          if (HasManifest_) hash ^= Manifest_.GetHashCode();
          if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasResult) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Result);
          }
          if (HasProductId) {
            output.WriteRawTag(16);
            output.WriteUInt32(ProductId);
          }
          if (HasManifest_) {
            output.WriteRawTag(26);
            output.WriteString(Manifest_);
          }
          if (HasDeprecatedTestConfig) {
            output.WriteRawTag(32);
            output.WriteBool(DeprecatedTestConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasResult) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Result);
          }
          if (HasProductId) {
            output.WriteRawTag(16);
            output.WriteUInt32(ProductId);
          }
          if (HasManifest_) {
            output.WriteRawTag(26);
            output.WriteString(Manifest_);
          }
          if (HasDeprecatedTestConfig) {
            output.WriteRawTag(32);
            output.WriteBool(DeprecatedTestConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasResult) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
          }
          if (HasProductId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
          }
          if (HasManifest_) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Manifest_);
          }
          if (HasDeprecatedTestConfig) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Manifest other) {
          if (other == null) {
            return;
          }
          if (other.HasResult) {
            Result = other.Result;
          }
          if (other.HasProductId) {
            ProductId = other.ProductId;
          }
          if (other.HasManifest_) {
            Manifest_ = other.Manifest_;
          }
          if (other.HasDeprecatedTestConfig) {
            DeprecatedTestConfig = other.DeprecatedTestConfig;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Result = (global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest.Types.Result) input.ReadEnum();
                break;
              }
              case 16: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 26: {
                Manifest_ = input.ReadString();
                break;
              }
              case 32: {
                DeprecatedTestConfig = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Result = (global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp.Types.Manifest.Types.Result) input.ReadEnum();
                break;
              }
              case 16: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 26: {
                Manifest_ = input.ReadString();
                break;
              }
              case 32: {
                DeprecatedTestConfig = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Manifest message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum Result {
            [pbr::OriginalName("Result_Success")] Success = 1,
            [pbr::OriginalName("Result_NotFound")] NotFound = 2,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class GetProductConfigReq : pb::IMessage<GetProductConfigReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetProductConfigReq> _parser = new pb::MessageParser<GetProductConfigReq>(() => new GetProductConfigReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetProductConfigReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetProductConfigReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetProductConfigReq(GetProductConfigReq other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      deprecatedTestConfig_ = other.deprecatedTestConfig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetProductConfigReq Clone() {
      return new GetProductConfigReq(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "deprecated_test_config" field.</summary>
    public const int DeprecatedTestConfigFieldNumber = 2;
    private readonly static bool DeprecatedTestConfigDefaultValue = false;

    private bool deprecatedTestConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeprecatedTestConfig {
      get { if ((_hasBits0 & 2) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
      set {
        _hasBits0 |= 2;
        deprecatedTestConfig_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeprecatedTestConfig {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_test_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeprecatedTestConfig() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetProductConfigReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetProductConfigReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasDeprecatedTestConfig) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetProductConfigReq other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasDeprecatedTestConfig) {
        DeprecatedTestConfig = other.DeprecatedTestConfig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetProductConfigRsp : pb::IMessage<GetProductConfigRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetProductConfigRsp> _parser = new pb::MessageParser<GetProductConfigRsp>(() => new GetProductConfigRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetProductConfigRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetProductConfigRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetProductConfigRsp(GetProductConfigRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      deprecatedTestConfig_ = other.deprecatedTestConfig_;
      configuration_ = other.configuration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetProductConfigRsp Clone() {
      return new GetProductConfigRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.GetProductConfigRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.GetProductConfigRsp.Types.Result.Success;

    private global::Uplay.Ownership.GetProductConfigRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetProductConfigRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "deprecated_test_config" field.</summary>
    public const int DeprecatedTestConfigFieldNumber = 2;
    private readonly static bool DeprecatedTestConfigDefaultValue = false;

    private bool deprecatedTestConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeprecatedTestConfig {
      get { if ((_hasBits0 & 2) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
      set {
        _hasBits0 |= 2;
        deprecatedTestConfig_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeprecatedTestConfig {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_test_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeprecatedTestConfig() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "configuration" field.</summary>
    public const int ConfigurationFieldNumber = 3;
    private readonly static string ConfigurationDefaultValue = "";

    private string configuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Configuration {
      get { return configuration_ ?? ConfigurationDefaultValue; }
      set {
        configuration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "configuration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConfiguration {
      get { return configuration_ != null; }
    }
    /// <summary>Clears the value of the "configuration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfiguration() {
      configuration_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetProductConfigRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetProductConfigRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
      if (Configuration != other.Configuration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
      if (HasConfiguration) hash ^= Configuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (HasConfiguration) {
        output.WriteRawTag(26);
        output.WriteString(Configuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (HasConfiguration) {
        output.WriteRawTag(26);
        output.WriteString(Configuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasDeprecatedTestConfig) {
        size += 1 + 1;
      }
      if (HasConfiguration) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Configuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetProductConfigRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasDeprecatedTestConfig) {
        DeprecatedTestConfig = other.DeprecatedTestConfig;
      }
      if (other.HasConfiguration) {
        Configuration = other.Configuration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.GetProductConfigRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
          case 26: {
            Configuration = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.GetProductConfigRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
          case 26: {
            Configuration = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetProductConfigRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_NotFound")] NotFound = 2,
        [pbr::OriginalName("Result_InternalServerError")] InternalServerError = 3,
      }

    }
    #endregion

  }

  public sealed partial class SwitchProductBranchReq : pb::IMessage<SwitchProductBranchReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchProductBranchReq> _parser = new pb::MessageParser<SwitchProductBranchReq>(() => new SwitchProductBranchReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchProductBranchReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchProductBranchReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchProductBranchReq(SwitchProductBranchReq other) : this() {
      specifiedBranch_ = other.specifiedBranch_ != null ? other.specifiedBranch_.Clone() : null;
      defaultBranch_ = other.defaultBranch_ != null ? other.defaultBranch_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchProductBranchReq Clone() {
      return new SwitchProductBranchReq(this);
    }

    /// <summary>Field number for the "specified_branch" field.</summary>
    public const int SpecifiedBranchFieldNumber = 1;
    private global::Uplay.Ownership.SwitchProductBranchReq.Types.SpecifiedProductBranch specifiedBranch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.SwitchProductBranchReq.Types.SpecifiedProductBranch SpecifiedBranch {
      get { return specifiedBranch_; }
      set {
        specifiedBranch_ = value;
      }
    }

    /// <summary>Field number for the "default_branch" field.</summary>
    public const int DefaultBranchFieldNumber = 2;
    private global::Uplay.Ownership.SwitchProductBranchReq.Types.DefaultProductBranch defaultBranch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.SwitchProductBranchReq.Types.DefaultProductBranch DefaultBranch {
      get { return defaultBranch_; }
      set {
        defaultBranch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchProductBranchReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchProductBranchReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SpecifiedBranch, other.SpecifiedBranch)) return false;
      if (!object.Equals(DefaultBranch, other.DefaultBranch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (specifiedBranch_ != null) hash ^= SpecifiedBranch.GetHashCode();
      if (defaultBranch_ != null) hash ^= DefaultBranch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (specifiedBranch_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SpecifiedBranch);
      }
      if (defaultBranch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DefaultBranch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (specifiedBranch_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SpecifiedBranch);
      }
      if (defaultBranch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DefaultBranch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (specifiedBranch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecifiedBranch);
      }
      if (defaultBranch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultBranch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchProductBranchReq other) {
      if (other == null) {
        return;
      }
      if (other.specifiedBranch_ != null) {
        if (specifiedBranch_ == null) {
          SpecifiedBranch = new global::Uplay.Ownership.SwitchProductBranchReq.Types.SpecifiedProductBranch();
        }
        SpecifiedBranch.MergeFrom(other.SpecifiedBranch);
      }
      if (other.defaultBranch_ != null) {
        if (defaultBranch_ == null) {
          DefaultBranch = new global::Uplay.Ownership.SwitchProductBranchReq.Types.DefaultProductBranch();
        }
        DefaultBranch.MergeFrom(other.DefaultBranch);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (specifiedBranch_ == null) {
              SpecifiedBranch = new global::Uplay.Ownership.SwitchProductBranchReq.Types.SpecifiedProductBranch();
            }
            input.ReadMessage(SpecifiedBranch);
            break;
          }
          case 18: {
            if (defaultBranch_ == null) {
              DefaultBranch = new global::Uplay.Ownership.SwitchProductBranchReq.Types.DefaultProductBranch();
            }
            input.ReadMessage(DefaultBranch);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (specifiedBranch_ == null) {
              SpecifiedBranch = new global::Uplay.Ownership.SwitchProductBranchReq.Types.SpecifiedProductBranch();
            }
            input.ReadMessage(SpecifiedBranch);
            break;
          }
          case 18: {
            if (defaultBranch_ == null) {
              DefaultBranch = new global::Uplay.Ownership.SwitchProductBranchReq.Types.DefaultProductBranch();
            }
            input.ReadMessage(DefaultBranch);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SwitchProductBranchReq message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class SpecifiedProductBranch : pb::IMessage<SpecifiedProductBranch>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SpecifiedProductBranch> _parser = new pb::MessageParser<SpecifiedProductBranch>(() => new SpecifiedProductBranch());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SpecifiedProductBranch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.SwitchProductBranchReq.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SpecifiedProductBranch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SpecifiedProductBranch(SpecifiedProductBranch other) : this() {
          _hasBits0 = other._hasBits0;
          productId_ = other.productId_;
          branchId_ = other.branchId_;
          password_ = other.password_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SpecifiedProductBranch Clone() {
          return new SpecifiedProductBranch(this);
        }

        /// <summary>Field number for the "product_id" field.</summary>
        public const int ProductIdFieldNumber = 1;
        private readonly static uint ProductIdDefaultValue = 0;

        private uint productId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProductId {
          get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            productId_ = value;
          }
        }
        /// <summary>Gets whether the "product_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProductId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "product_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProductId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "branch_id" field.</summary>
        public const int BranchIdFieldNumber = 2;
        private readonly static uint BranchIdDefaultValue = 0;

        private uint branchId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint BranchId {
          get { if ((_hasBits0 & 2) != 0) { return branchId_; } else { return BranchIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            branchId_ = value;
          }
        }
        /// <summary>Gets whether the "branch_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBranchId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "branch_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBranchId() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "password" field.</summary>
        public const int PasswordFieldNumber = 3;
        private readonly static string PasswordDefaultValue = "";

        private string password_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Password {
          get { return password_ ?? PasswordDefaultValue; }
          set {
            password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "password" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPassword {
          get { return password_ != null; }
        }
        /// <summary>Clears the value of the "password" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPassword() {
          password_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SpecifiedProductBranch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SpecifiedProductBranch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProductId != other.ProductId) return false;
          if (BranchId != other.BranchId) return false;
          if (Password != other.Password) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasProductId) hash ^= ProductId.GetHashCode();
          if (HasBranchId) hash ^= BranchId.GetHashCode();
          if (HasPassword) hash ^= Password.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          if (HasBranchId) {
            output.WriteRawTag(16);
            output.WriteUInt32(BranchId);
          }
          if (HasPassword) {
            output.WriteRawTag(26);
            output.WriteString(Password);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          if (HasBranchId) {
            output.WriteRawTag(16);
            output.WriteUInt32(BranchId);
          }
          if (HasPassword) {
            output.WriteRawTag(26);
            output.WriteString(Password);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasProductId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
          }
          if (HasBranchId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BranchId);
          }
          if (HasPassword) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SpecifiedProductBranch other) {
          if (other == null) {
            return;
          }
          if (other.HasProductId) {
            ProductId = other.ProductId;
          }
          if (other.HasBranchId) {
            BranchId = other.BranchId;
          }
          if (other.HasPassword) {
            Password = other.Password;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 16: {
                BranchId = input.ReadUInt32();
                break;
              }
              case 26: {
                Password = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 16: {
                BranchId = input.ReadUInt32();
                break;
              }
              case 26: {
                Password = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class DefaultProductBranch : pb::IMessage<DefaultProductBranch>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DefaultProductBranch> _parser = new pb::MessageParser<DefaultProductBranch>(() => new DefaultProductBranch());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DefaultProductBranch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.SwitchProductBranchReq.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DefaultProductBranch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DefaultProductBranch(DefaultProductBranch other) : this() {
          _hasBits0 = other._hasBits0;
          productId_ = other.productId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DefaultProductBranch Clone() {
          return new DefaultProductBranch(this);
        }

        /// <summary>Field number for the "product_id" field.</summary>
        public const int ProductIdFieldNumber = 1;
        private readonly static uint ProductIdDefaultValue = 0;

        private uint productId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProductId {
          get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            productId_ = value;
          }
        }
        /// <summary>Gets whether the "product_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProductId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "product_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProductId() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DefaultProductBranch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DefaultProductBranch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProductId != other.ProductId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasProductId) hash ^= ProductId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasProductId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DefaultProductBranch other) {
          if (other == null) {
            return;
          }
          if (other.HasProductId) {
            ProductId = other.ProductId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class SwitchProductBranchRsp : pb::IMessage<SwitchProductBranchRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchProductBranchRsp> _parser = new pb::MessageParser<SwitchProductBranchRsp>(() => new SwitchProductBranchRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchProductBranchRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchProductBranchRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchProductBranchRsp(SwitchProductBranchRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      products_ = other.products_ != null ? other.products_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchProductBranchRsp Clone() {
      return new SwitchProductBranchRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.SwitchProductBranchRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.SwitchProductBranchRsp.Types.Result.Success;

    private global::Uplay.Ownership.SwitchProductBranchRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.SwitchProductBranchRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "products" field.</summary>
    public const int ProductsFieldNumber = 2;
    private global::Uplay.Ownership.OwnedGames products_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGames Products {
      get { return products_; }
      set {
        products_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchProductBranchRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchProductBranchRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(Products, other.Products)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (products_ != null) hash ^= Products.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (products_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Products);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (products_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Products);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (products_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Products);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchProductBranchRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.products_ != null) {
        if (products_ == null) {
          Products = new global::Uplay.Ownership.OwnedGames();
        }
        Products.MergeFrom(other.Products);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.SwitchProductBranchRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (products_ == null) {
              Products = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(Products);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.SwitchProductBranchRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (products_ == null) {
              Products = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(Products);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SwitchProductBranchRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_Denied")] Denied = 2,
      }

    }
    #endregion

  }

  public sealed partial class UnlockProductBranchReq : pb::IMessage<UnlockProductBranchReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnlockProductBranchReq> _parser = new pb::MessageParser<UnlockProductBranchReq>(() => new UnlockProductBranchReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnlockProductBranchReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockProductBranchReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockProductBranchReq(UnlockProductBranchReq other) : this() {
      branch_ = other.branch_ != null ? other.branch_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockProductBranchReq Clone() {
      return new UnlockProductBranchReq(this);
    }

    /// <summary>Field number for the "branch" field.</summary>
    public const int BranchFieldNumber = 1;
    private global::Uplay.Ownership.UnlockProductBranchReq.Types.ProductBranch branch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.UnlockProductBranchReq.Types.ProductBranch Branch {
      get { return branch_; }
      set {
        branch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnlockProductBranchReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnlockProductBranchReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Branch, other.Branch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (branch_ != null) hash ^= Branch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (branch_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Branch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (branch_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Branch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (branch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Branch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnlockProductBranchReq other) {
      if (other == null) {
        return;
      }
      if (other.branch_ != null) {
        if (branch_ == null) {
          Branch = new global::Uplay.Ownership.UnlockProductBranchReq.Types.ProductBranch();
        }
        Branch.MergeFrom(other.Branch);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (branch_ == null) {
              Branch = new global::Uplay.Ownership.UnlockProductBranchReq.Types.ProductBranch();
            }
            input.ReadMessage(Branch);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (branch_ == null) {
              Branch = new global::Uplay.Ownership.UnlockProductBranchReq.Types.ProductBranch();
            }
            input.ReadMessage(Branch);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UnlockProductBranchReq message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class ProductBranch : pb::IMessage<ProductBranch>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ProductBranch> _parser = new pb::MessageParser<ProductBranch>(() => new ProductBranch());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ProductBranch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.UnlockProductBranchReq.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranch(ProductBranch other) : this() {
          _hasBits0 = other._hasBits0;
          productId_ = other.productId_;
          password_ = other.password_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranch Clone() {
          return new ProductBranch(this);
        }

        /// <summary>Field number for the "product_id" field.</summary>
        public const int ProductIdFieldNumber = 1;
        private readonly static uint ProductIdDefaultValue = 0;

        private uint productId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProductId {
          get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            productId_ = value;
          }
        }
        /// <summary>Gets whether the "product_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProductId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "product_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProductId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "password" field.</summary>
        public const int PasswordFieldNumber = 2;
        private readonly static string PasswordDefaultValue = "";

        private string password_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Password {
          get { return password_ ?? PasswordDefaultValue; }
          set {
            password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "password" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPassword {
          get { return password_ != null; }
        }
        /// <summary>Clears the value of the "password" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPassword() {
          password_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ProductBranch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ProductBranch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProductId != other.ProductId) return false;
          if (Password != other.Password) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasProductId) hash ^= ProductId.GetHashCode();
          if (HasPassword) hash ^= Password.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          if (HasPassword) {
            output.WriteRawTag(18);
            output.WriteString(Password);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasProductId) {
            output.WriteRawTag(8);
            output.WriteUInt32(ProductId);
          }
          if (HasPassword) {
            output.WriteRawTag(18);
            output.WriteString(Password);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasProductId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
          }
          if (HasPassword) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ProductBranch other) {
          if (other == null) {
            return;
          }
          if (other.HasProductId) {
            ProductId = other.ProductId;
          }
          if (other.HasPassword) {
            Password = other.Password;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 18: {
                Password = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ProductId = input.ReadUInt32();
                break;
              }
              case 18: {
                Password = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class UnlockProductBranchRsp : pb::IMessage<UnlockProductBranchRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnlockProductBranchRsp> _parser = new pb::MessageParser<UnlockProductBranchRsp>(() => new UnlockProductBranchRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnlockProductBranchRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockProductBranchRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockProductBranchRsp(UnlockProductBranchRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      branch_ = other.branch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockProductBranchRsp Clone() {
      return new UnlockProductBranchRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.UnlockProductBranchRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.UnlockProductBranchRsp.Types.Result.Success;

    private global::Uplay.Ownership.UnlockProductBranchRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.UnlockProductBranchRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "branch" field.</summary>
    public const int BranchFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Uplay.Ownership.UnlockProductBranchRsp.Types.ProductBranch> _repeated_branch_codec
        = pb::FieldCodec.ForMessage(18, global::Uplay.Ownership.UnlockProductBranchRsp.Types.ProductBranch.Parser);
    private readonly pbc::RepeatedField<global::Uplay.Ownership.UnlockProductBranchRsp.Types.ProductBranch> branch_ = new pbc::RepeatedField<global::Uplay.Ownership.UnlockProductBranchRsp.Types.ProductBranch>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Uplay.Ownership.UnlockProductBranchRsp.Types.ProductBranch> Branch {
      get { return branch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnlockProductBranchRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnlockProductBranchRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!branch_.Equals(other.branch_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      hash ^= branch_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      branch_.WriteTo(output, _repeated_branch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      branch_.WriteTo(ref output, _repeated_branch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += branch_.CalculateSize(_repeated_branch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnlockProductBranchRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      branch_.Add(other.branch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.UnlockProductBranchRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            branch_.AddEntriesFrom(input, _repeated_branch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.UnlockProductBranchRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            branch_.AddEntriesFrom(ref input, _repeated_branch_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UnlockProductBranchRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 1,
        [pbr::OriginalName("Result_Denied")] Denied = 2,
      }

      public sealed partial class ProductBranch : pb::IMessage<ProductBranch>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ProductBranch> _parser = new pb::MessageParser<ProductBranch>(() => new ProductBranch());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ProductBranch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Uplay.Ownership.UnlockProductBranchRsp.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranch(ProductBranch other) : this() {
          _hasBits0 = other._hasBits0;
          branchId_ = other.branchId_;
          branchName_ = other.branchName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ProductBranch Clone() {
          return new ProductBranch(this);
        }

        /// <summary>Field number for the "branch_id" field.</summary>
        public const int BranchIdFieldNumber = 1;
        private readonly static uint BranchIdDefaultValue = 0;

        private uint branchId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint BranchId {
          get { if ((_hasBits0 & 1) != 0) { return branchId_; } else { return BranchIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            branchId_ = value;
          }
        }
        /// <summary>Gets whether the "branch_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBranchId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "branch_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBranchId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "branch_name" field.</summary>
        public const int BranchNameFieldNumber = 2;
        private readonly static string BranchNameDefaultValue = "";

        private string branchName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string BranchName {
          get { return branchName_ ?? BranchNameDefaultValue; }
          set {
            branchName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "branch_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBranchName {
          get { return branchName_ != null; }
        }
        /// <summary>Clears the value of the "branch_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBranchName() {
          branchName_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ProductBranch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ProductBranch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BranchId != other.BranchId) return false;
          if (BranchName != other.BranchName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasBranchId) hash ^= BranchId.GetHashCode();
          if (HasBranchName) hash ^= BranchName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasBranchId) {
            output.WriteRawTag(8);
            output.WriteUInt32(BranchId);
          }
          if (HasBranchName) {
            output.WriteRawTag(18);
            output.WriteString(BranchName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasBranchId) {
            output.WriteRawTag(8);
            output.WriteUInt32(BranchId);
          }
          if (HasBranchName) {
            output.WriteRawTag(18);
            output.WriteString(BranchName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasBranchId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BranchId);
          }
          if (HasBranchName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BranchName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ProductBranch other) {
          if (other == null) {
            return;
          }
          if (other.HasBranchId) {
            BranchId = other.BranchId;
          }
          if (other.HasBranchName) {
            BranchName = other.BranchName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                BranchId = input.ReadUInt32();
                break;
              }
              case 18: {
                BranchName = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                BranchId = input.ReadUInt32();
                break;
              }
              case 18: {
                BranchName = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class GetUplayPCTicketReq : pb::IMessage<GetUplayPCTicketReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUplayPCTicketReq> _parser = new pb::MessageParser<GetUplayPCTicketReq>(() => new GetUplayPCTicketReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUplayPCTicketReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUplayPCTicketReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUplayPCTicketReq(GetUplayPCTicketReq other) : this() {
      _hasBits0 = other._hasBits0;
      uplayId_ = other.uplayId_;
      platform_ = other.platform_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUplayPCTicketReq Clone() {
      return new GetUplayPCTicketReq(this);
    }

    /// <summary>Field number for the "uplay_id" field.</summary>
    public const int UplayIdFieldNumber = 1;
    private readonly static uint UplayIdDefaultValue = 0;

    private uint uplayId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UplayId {
      get { if ((_hasBits0 & 1) != 0) { return uplayId_; } else { return UplayIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uplayId_ = value;
      }
    }
    /// <summary>Gets whether the "uplay_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUplayId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uplay_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUplayId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 2;
    private readonly static global::Uplay.Ownership.GetUplayPCTicketReq.Types.Platform PlatformDefaultValue = global::Uplay.Ownership.GetUplayPCTicketReq.Types.Platform.Normal;

    private global::Uplay.Ownership.GetUplayPCTicketReq.Types.Platform platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetUplayPCTicketReq.Types.Platform Platform {
      get { if ((_hasBits0 & 2) != 0) { return platform_; } else { return PlatformDefaultValue; } }
      set {
        _hasBits0 |= 2;
        platform_ = value;
      }
    }
    /// <summary>Gets whether the "platform" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlatform {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "platform" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatform() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUplayPCTicketReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUplayPCTicketReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UplayId != other.UplayId) return false;
      if (Platform != other.Platform) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUplayId) hash ^= UplayId.GetHashCode();
      if (HasPlatform) hash ^= Platform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUplayId) {
        output.WriteRawTag(8);
        output.WriteUInt32(UplayId);
      }
      if (HasPlatform) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Platform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUplayId) {
        output.WriteRawTag(8);
        output.WriteUInt32(UplayId);
      }
      if (HasPlatform) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Platform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUplayId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UplayId);
      }
      if (HasPlatform) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Platform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUplayPCTicketReq other) {
      if (other == null) {
        return;
      }
      if (other.HasUplayId) {
        UplayId = other.UplayId;
      }
      if (other.HasPlatform) {
        Platform = other.Platform;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UplayId = input.ReadUInt32();
            break;
          }
          case 16: {
            Platform = (global::Uplay.Ownership.GetUplayPCTicketReq.Types.Platform) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UplayId = input.ReadUInt32();
            break;
          }
          case 16: {
            Platform = (global::Uplay.Ownership.GetUplayPCTicketReq.Types.Platform) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetUplayPCTicketReq message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Platform {
        [pbr::OriginalName("Normal")] Normal = 0,
        [pbr::OriginalName("Luna")] Luna = 1,
        [pbr::OriginalName("GFN")] Gfn = 2,
      }

    }
    #endregion

  }

  public sealed partial class GetUplayPCTicketRsp : pb::IMessage<GetUplayPCTicketRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUplayPCTicketRsp> _parser = new pb::MessageParser<GetUplayPCTicketRsp>(() => new GetUplayPCTicketRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUplayPCTicketRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUplayPCTicketRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUplayPCTicketRsp(GetUplayPCTicketRsp other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      uplayPcTicket_ = other.uplayPcTicket_;
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUplayPCTicketRsp Clone() {
      return new GetUplayPCTicketRsp(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uplay_pc_ticket" field.</summary>
    public const int UplayPcTicketFieldNumber = 2;
    private readonly static string UplayPcTicketDefaultValue = "";

    private string uplayPcTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UplayPcTicket {
      get { return uplayPcTicket_ ?? UplayPcTicketDefaultValue; }
      set {
        uplayPcTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uplay_pc_ticket" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUplayPcTicket {
      get { return uplayPcTicket_ != null; }
    }
    /// <summary>Clears the value of the "uplay_pc_ticket" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUplayPcTicket() {
      uplayPcTicket_ = null;
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 3;
    private readonly static global::Uplay.Ownership.GetUplayPCTicketRsp.Types.ErrorCode ErrorCodeDefaultValue = global::Uplay.Ownership.GetUplayPCTicketRsp.Types.ErrorCode.Unknown;

    private global::Uplay.Ownership.GetUplayPCTicketRsp.Types.ErrorCode errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetUplayPCTicketRsp.Types.ErrorCode ErrorCode {
      get { if ((_hasBits0 & 2) != 0) { return errorCode_; } else { return ErrorCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        errorCode_ = value;
      }
    }
    /// <summary>Gets whether the "error_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "error_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorCode() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUplayPCTicketRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUplayPCTicketRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (UplayPcTicket != other.UplayPcTicket) return false;
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (HasUplayPcTicket) hash ^= UplayPcTicket.GetHashCode();
      if (HasErrorCode) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasUplayPcTicket) {
        output.WriteRawTag(18);
        output.WriteString(UplayPcTicket);
      }
      if (HasErrorCode) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasUplayPcTicket) {
        output.WriteRawTag(18);
        output.WriteString(UplayPcTicket);
      }
      if (HasErrorCode) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (HasUplayPcTicket) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UplayPcTicket);
      }
      if (HasErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUplayPCTicketRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      if (other.HasUplayPcTicket) {
        UplayPcTicket = other.UplayPcTicket;
      }
      if (other.HasErrorCode) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            UplayPcTicket = input.ReadString();
            break;
          }
          case 24: {
            ErrorCode = (global::Uplay.Ownership.GetUplayPCTicketRsp.Types.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            UplayPcTicket = input.ReadString();
            break;
          }
          case 24: {
            ErrorCode = (global::Uplay.Ownership.GetUplayPCTicketRsp.Types.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetUplayPCTicketRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ErrorCode {
        [pbr::OriginalName("ErrorCode_Unknown")] Unknown = 1,
        [pbr::OriginalName("ErrorCode_ProductNotOwned")] ProductNotOwned = 2,
        [pbr::OriginalName("ErrorCode_ProductSuspended")] ProductSuspended = 3,
        [pbr::OriginalName("ErrorCode_ProductSubscriptionLocked")] ProductSubscriptionLocked = 4,
        [pbr::OriginalName("ErrorCode_ProductNotReleased")] ProductNotReleased = 5,
      }

    }
    #endregion

  }

  public sealed partial class UplayCoreGameInitializedPush : pb::IMessage<UplayCoreGameInitializedPush>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UplayCoreGameInitializedPush> _parser = new pb::MessageParser<UplayCoreGameInitializedPush>(() => new UplayCoreGameInitializedPush());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UplayCoreGameInitializedPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UplayCoreGameInitializedPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UplayCoreGameInitializedPush(UplayCoreGameInitializedPush other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      productId_ = other.productId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UplayCoreGameInitializedPush Clone() {
      return new UplayCoreGameInitializedPush(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 2;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 2) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UplayCoreGameInitializedPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UplayCoreGameInitializedPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ProductId != other.ProductId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasProductId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasProductId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UplayCoreGameInitializedPush other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RetryUplayCoreInitializeReq : pb::IMessage<RetryUplayCoreInitializeReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RetryUplayCoreInitializeReq> _parser = new pb::MessageParser<RetryUplayCoreInitializeReq>(() => new RetryUplayCoreInitializeReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RetryUplayCoreInitializeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RetryUplayCoreInitializeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RetryUplayCoreInitializeReq(RetryUplayCoreInitializeReq other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_.Clone();
      deprecatedTestConfig_ = other.deprecatedTestConfig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RetryUplayCoreInitializeReq Clone() {
      return new RetryUplayCoreInitializeReq(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_productId_codec
        = pb::FieldCodec.ForUInt32(8);
    private readonly pbc::RepeatedField<uint> productId_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ProductId {
      get { return productId_; }
    }

    /// <summary>Field number for the "deprecated_test_config" field.</summary>
    public const int DeprecatedTestConfigFieldNumber = 2;
    private readonly static bool DeprecatedTestConfigDefaultValue = false;

    private bool deprecatedTestConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeprecatedTestConfig {
      get { if ((_hasBits0 & 1) != 0) { return deprecatedTestConfig_; } else { return DeprecatedTestConfigDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deprecatedTestConfig_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_test_config" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeprecatedTestConfig {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_test_config" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeprecatedTestConfig() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RetryUplayCoreInitializeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RetryUplayCoreInitializeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!productId_.Equals(other.productId_)) return false;
      if (DeprecatedTestConfig != other.DeprecatedTestConfig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= productId_.GetHashCode();
      if (HasDeprecatedTestConfig) hash ^= DeprecatedTestConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      productId_.WriteTo(output, _repeated_productId_codec);
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      productId_.WriteTo(ref output, _repeated_productId_codec);
      if (HasDeprecatedTestConfig) {
        output.WriteRawTag(16);
        output.WriteBool(DeprecatedTestConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += productId_.CalculateSize(_repeated_productId_codec);
      if (HasDeprecatedTestConfig) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RetryUplayCoreInitializeReq other) {
      if (other == null) {
        return;
      }
      productId_.Add(other.productId_);
      if (other.HasDeprecatedTestConfig) {
        DeprecatedTestConfig = other.DeprecatedTestConfig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            productId_.AddEntriesFrom(input, _repeated_productId_codec);
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            productId_.AddEntriesFrom(ref input, _repeated_productId_codec);
            break;
          }
          case 16: {
            DeprecatedTestConfig = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConsumeOwnershipReq : pb::IMessage<ConsumeOwnershipReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConsumeOwnershipReq> _parser = new pb::MessageParser<ConsumeOwnershipReq>(() => new ConsumeOwnershipReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConsumeOwnershipReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumeOwnershipReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumeOwnershipReq(ConsumeOwnershipReq other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      quantity_ = other.quantity_;
      transactionId_ = other.transactionId_;
      gameProductId_ = other.gameProductId_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumeOwnershipReq Clone() {
      return new ConsumeOwnershipReq(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private readonly static uint QuantityDefaultValue = 0;

    private uint quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quantity {
      get { if ((_hasBits0 & 2) != 0) { return quantity_; } else { return QuantityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        quantity_ = value;
      }
    }
    /// <summary>Gets whether the "quantity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuantity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "quantity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuantity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 3;
    private readonly static string TransactionIdDefaultValue = "";

    private string transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TransactionId {
      get { return transactionId_ ?? TransactionIdDefaultValue; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTransactionId {
      get { return transactionId_ != null; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTransactionId() {
      transactionId_ = null;
    }

    /// <summary>Field number for the "game_product_id" field.</summary>
    public const int GameProductIdFieldNumber = 4;
    private readonly static uint GameProductIdDefaultValue = 0;

    private uint gameProductId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameProductId {
      get { if ((_hasBits0 & 4) != 0) { return gameProductId_; } else { return GameProductIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gameProductId_ = value;
      }
    }
    /// <summary>Gets whether the "game_product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameProductId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "game_product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameProductId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 5;
    private readonly static string SignatureDefaultValue = "";

    private string signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignature() {
      signature_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConsumeOwnershipReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConsumeOwnershipReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (Quantity != other.Quantity) return false;
      if (TransactionId != other.TransactionId) return false;
      if (GameProductId != other.GameProductId) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasQuantity) hash ^= Quantity.GetHashCode();
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (HasGameProductId) hash ^= GameProductId.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasQuantity) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quantity);
      }
      if (HasTransactionId) {
        output.WriteRawTag(26);
        output.WriteString(TransactionId);
      }
      if (HasGameProductId) {
        output.WriteRawTag(32);
        output.WriteUInt32(GameProductId);
      }
      if (HasSignature) {
        output.WriteRawTag(42);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasQuantity) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quantity);
      }
      if (HasTransactionId) {
        output.WriteRawTag(26);
        output.WriteString(TransactionId);
      }
      if (HasGameProductId) {
        output.WriteRawTag(32);
        output.WriteUInt32(GameProductId);
      }
      if (HasSignature) {
        output.WriteRawTag(42);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasQuantity) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (HasGameProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameProductId);
      }
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConsumeOwnershipReq other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasQuantity) {
        Quantity = other.Quantity;
      }
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      if (other.HasGameProductId) {
        GameProductId = other.GameProductId;
      }
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 26: {
            TransactionId = input.ReadString();
            break;
          }
          case 32: {
            GameProductId = input.ReadUInt32();
            break;
          }
          case 42: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 26: {
            TransactionId = input.ReadString();
            break;
          }
          case 32: {
            GameProductId = input.ReadUInt32();
            break;
          }
          case 42: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConsumeOwnershipRsp : pb::IMessage<ConsumeOwnershipRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConsumeOwnershipRsp> _parser = new pb::MessageParser<ConsumeOwnershipRsp>(() => new ConsumeOwnershipRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConsumeOwnershipRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumeOwnershipRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumeOwnershipRsp(ConsumeOwnershipRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumeOwnershipRsp Clone() {
      return new ConsumeOwnershipRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.ConsumeOwnershipRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.ConsumeOwnershipRsp.Types.Result.Ok;

    private global::Uplay.Ownership.ConsumeOwnershipRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.ConsumeOwnershipRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private readonly static string SignatureDefaultValue = "";

    private string signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignature() {
      signature_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConsumeOwnershipRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConsumeOwnershipRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasSignature) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasSignature) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConsumeOwnershipRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.ConsumeOwnershipRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.ConsumeOwnershipRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ConsumeOwnershipRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Ok")] Ok = 0,
        [pbr::OriginalName("Result_NotEnoughItems")] NotEnoughItems = 1,
        [pbr::OriginalName("Result_Failed")] Failed = 2,
      }

    }
    #endregion

  }

  public sealed partial class GetGameTokenReq : pb::IMessage<GetGameTokenReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetGameTokenReq> _parser = new pb::MessageParser<GetGameTokenReq>(() => new GetGameTokenReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetGameTokenReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTokenReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTokenReq(GetGameTokenReq other) : this() {
      _hasBits0 = other._hasBits0;
      activationToken_ = other.activationToken_;
      productId_ = other.productId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTokenReq Clone() {
      return new GetGameTokenReq(this);
    }

    /// <summary>Field number for the "activation_token" field.</summary>
    public const int ActivationTokenFieldNumber = 1;
    private readonly static pb::ByteString ActivationTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString activationToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ActivationToken {
      get { return activationToken_ ?? ActivationTokenDefaultValue; }
      set {
        activationToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "activation_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivationToken {
      get { return activationToken_ != null; }
    }
    /// <summary>Clears the value of the "activation_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivationToken() {
      activationToken_ = null;
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 2;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetGameTokenReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetGameTokenReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivationToken != other.ActivationToken) return false;
      if (ProductId != other.ProductId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasActivationToken) hash ^= ActivationToken.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasActivationToken) {
        output.WriteRawTag(10);
        output.WriteBytes(ActivationToken);
      }
      if (HasProductId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasActivationToken) {
        output.WriteRawTag(10);
        output.WriteBytes(ActivationToken);
      }
      if (HasProductId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasActivationToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ActivationToken);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetGameTokenReq other) {
      if (other == null) {
        return;
      }
      if (other.HasActivationToken) {
        ActivationToken = other.ActivationToken;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivationToken = input.ReadBytes();
            break;
          }
          case 16: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ActivationToken = input.ReadBytes();
            break;
          }
          case 16: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetGameTokenRsp : pb::IMessage<GetGameTokenRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetGameTokenRsp> _parser = new pb::MessageParser<GetGameTokenRsp>(() => new GetGameTokenRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetGameTokenRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTokenRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTokenRsp(GetGameTokenRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      gameToken_ = other.gameToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTokenRsp Clone() {
      return new GetGameTokenRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.GetGameTokenRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.GetGameTokenRsp.Types.Result.Success;

    private global::Uplay.Ownership.GetGameTokenRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetGameTokenRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_token" field.</summary>
    public const int GameTokenFieldNumber = 2;
    private readonly static pb::ByteString GameTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString gameToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString GameToken {
      get { return gameToken_ ?? GameTokenDefaultValue; }
      set {
        gameToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameToken {
      get { return gameToken_ != null; }
    }
    /// <summary>Clears the value of the "game_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameToken() {
      gameToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetGameTokenRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetGameTokenRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (GameToken != other.GameToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasGameToken) hash ^= GameToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasGameToken) {
        output.WriteRawTag(18);
        output.WriteBytes(GameToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasGameToken) {
        output.WriteRawTag(18);
        output.WriteBytes(GameToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasGameToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(GameToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetGameTokenRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasGameToken) {
        GameToken = other.GameToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.GetGameTokenRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            GameToken = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.GetGameTokenRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            GameToken = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetGameTokenRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 0,
        [pbr::OriginalName("Result_NotOwned")] NotOwned = 1,
        [pbr::OriginalName("Result_Failure")] Failure = 2,
        [pbr::OriginalName("Result_ExceededActivations")] ExceededActivations = 3,
        [pbr::OriginalName("Result_TimeOut")] TimeOut = 4,
        [pbr::OriginalName("Result_ServerError")] ServerError = 5,
      }

    }
    #endregion

  }

  public sealed partial class GetGameTimeTicketReq : pb::IMessage<GetGameTimeTicketReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetGameTimeTicketReq> _parser = new pb::MessageParser<GetGameTimeTicketReq>(() => new GetGameTimeTicketReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetGameTimeTicketReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTimeTicketReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTimeTicketReq(GetGameTimeTicketReq other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      requestTicket_ = other.requestTicket_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTimeTicketReq Clone() {
      return new GetGameTimeTicketReq(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "request_ticket" field.</summary>
    public const int RequestTicketFieldNumber = 2;
    private readonly static pb::ByteString RequestTicketDefaultValue = pb::ByteString.Empty;

    private pb::ByteString requestTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RequestTicket {
      get { return requestTicket_ ?? RequestTicketDefaultValue; }
      set {
        requestTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "request_ticket" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestTicket {
      get { return requestTicket_ != null; }
    }
    /// <summary>Clears the value of the "request_ticket" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestTicket() {
      requestTicket_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetGameTimeTicketReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetGameTimeTicketReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (RequestTicket != other.RequestTicket) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasRequestTicket) hash ^= RequestTicket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasRequestTicket) {
        output.WriteRawTag(18);
        output.WriteBytes(RequestTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (HasRequestTicket) {
        output.WriteRawTag(18);
        output.WriteBytes(RequestTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (HasRequestTicket) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RequestTicket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetGameTimeTicketReq other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasRequestTicket) {
        RequestTicket = other.RequestTicket;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            RequestTicket = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
          case 18: {
            RequestTicket = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetGameTimeTicketRsp : pb::IMessage<GetGameTimeTicketRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetGameTimeTicketRsp> _parser = new pb::MessageParser<GetGameTimeTicketRsp>(() => new GetGameTimeTicketRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetGameTimeTicketRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTimeTicketRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTimeTicketRsp(GetGameTimeTicketRsp other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      timeTicket_ = other.timeTicket_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameTimeTicketRsp Clone() {
      return new GetGameTimeTicketRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Uplay.Ownership.GetGameTimeTicketRsp.Types.Result ResultDefaultValue = global::Uplay.Ownership.GetGameTimeTicketRsp.Types.Result.Success;

    private global::Uplay.Ownership.GetGameTimeTicketRsp.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetGameTimeTicketRsp.Types.Result Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "time_ticket" field.</summary>
    public const int TimeTicketFieldNumber = 2;
    private readonly static pb::ByteString TimeTicketDefaultValue = pb::ByteString.Empty;

    private pb::ByteString timeTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TimeTicket {
      get { return timeTicket_ ?? TimeTicketDefaultValue; }
      set {
        timeTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "time_ticket" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeTicket {
      get { return timeTicket_ != null; }
    }
    /// <summary>Clears the value of the "time_ticket" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeTicket() {
      timeTicket_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetGameTimeTicketRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetGameTimeTicketRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (TimeTicket != other.TimeTicket) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasTimeTicket) hash ^= TimeTicket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasTimeTicket) {
        output.WriteRawTag(18);
        output.WriteBytes(TimeTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasTimeTicket) {
        output.WriteRawTag(18);
        output.WriteBytes(TimeTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasTimeTicket) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TimeTicket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetGameTimeTicketRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasTimeTicket) {
        TimeTicket = other.TimeTicket;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.GetGameTimeTicketRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            TimeTicket = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Uplay.Ownership.GetGameTimeTicketRsp.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            TimeTicket = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetGameTimeTicketRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("Result_Success")] Success = 0,
        [pbr::OriginalName("Result_NotOwned")] NotOwned = 1,
        [pbr::OriginalName("Result_Failure")] Failure = 2,
        [pbr::OriginalName("Result_TimeOut")] TimeOut = 3,
        [pbr::OriginalName("Result_ServerError")] ServerError = 4,
      }

    }
    #endregion

  }

  public sealed partial class GetGameWithdrawalRightsReq : pb::IMessage<GetGameWithdrawalRightsReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetGameWithdrawalRightsReq> _parser = new pb::MessageParser<GetGameWithdrawalRightsReq>(() => new GetGameWithdrawalRightsReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetGameWithdrawalRightsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameWithdrawalRightsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameWithdrawalRightsReq(GetGameWithdrawalRightsReq other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameWithdrawalRightsReq Clone() {
      return new GetGameWithdrawalRightsReq(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetGameWithdrawalRightsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetGameWithdrawalRightsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetGameWithdrawalRightsReq other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetGameWithdrawalRightsRsp : pb::IMessage<GetGameWithdrawalRightsRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetGameWithdrawalRightsRsp> _parser = new pb::MessageParser<GetGameWithdrawalRightsRsp>(() => new GetGameWithdrawalRightsRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetGameWithdrawalRightsRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameWithdrawalRightsRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameWithdrawalRightsRsp(GetGameWithdrawalRightsRsp other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      withdrawalRights_ = other.withdrawalRights_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetGameWithdrawalRightsRsp Clone() {
      return new GetGameWithdrawalRightsRsp(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "withdrawal_rights" field.</summary>
    public const int WithdrawalRightsFieldNumber = 2;
    private readonly static bool WithdrawalRightsDefaultValue = false;

    private bool withdrawalRights_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithdrawalRights {
      get { if ((_hasBits0 & 2) != 0) { return withdrawalRights_; } else { return WithdrawalRightsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        withdrawalRights_ = value;
      }
    }
    /// <summary>Gets whether the "withdrawal_rights" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWithdrawalRights {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "withdrawal_rights" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWithdrawalRights() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetGameWithdrawalRightsRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetGameWithdrawalRightsRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (WithdrawalRights != other.WithdrawalRights) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (HasWithdrawalRights) hash ^= WithdrawalRights.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasWithdrawalRights) {
        output.WriteRawTag(16);
        output.WriteBool(WithdrawalRights);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasWithdrawalRights) {
        output.WriteRawTag(16);
        output.WriteBool(WithdrawalRights);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (HasWithdrawalRights) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetGameWithdrawalRightsRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      if (other.HasWithdrawalRights) {
        WithdrawalRights = other.WithdrawalRights;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            WithdrawalRights = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            WithdrawalRights = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WaiveGameWithdrawalRightsReq : pb::IMessage<WaiveGameWithdrawalRightsReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WaiveGameWithdrawalRightsReq> _parser = new pb::MessageParser<WaiveGameWithdrawalRightsReq>(() => new WaiveGameWithdrawalRightsReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WaiveGameWithdrawalRightsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaiveGameWithdrawalRightsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaiveGameWithdrawalRightsReq(WaiveGameWithdrawalRightsReq other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaiveGameWithdrawalRightsReq Clone() {
      return new WaiveGameWithdrawalRightsReq(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WaiveGameWithdrawalRightsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WaiveGameWithdrawalRightsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WaiveGameWithdrawalRightsReq other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WaiveGameWithdrawalRightsRsp : pb::IMessage<WaiveGameWithdrawalRightsRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WaiveGameWithdrawalRightsRsp> _parser = new pb::MessageParser<WaiveGameWithdrawalRightsRsp>(() => new WaiveGameWithdrawalRightsRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WaiveGameWithdrawalRightsRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaiveGameWithdrawalRightsRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaiveGameWithdrawalRightsRsp(WaiveGameWithdrawalRightsRsp other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaiveGameWithdrawalRightsRsp Clone() {
      return new WaiveGameWithdrawalRightsRsp(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WaiveGameWithdrawalRightsRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WaiveGameWithdrawalRightsRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WaiveGameWithdrawalRightsRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SignOwnershipReq : pb::IMessage<SignOwnershipReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SignOwnershipReq> _parser = new pb::MessageParser<SignOwnershipReq>(() => new SignOwnershipReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SignOwnershipReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignOwnershipReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignOwnershipReq(SignOwnershipReq other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignOwnershipReq Clone() {
      return new SignOwnershipReq(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SignOwnershipReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SignOwnershipReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SignOwnershipReq other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SignOwnershipRsp : pb::IMessage<SignOwnershipRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SignOwnershipRsp> _parser = new pb::MessageParser<SignOwnershipRsp>(() => new SignOwnershipRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SignOwnershipRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignOwnershipRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignOwnershipRsp(SignOwnershipRsp other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      branchId_ = other.branchId_;
      expiration_ = other.expiration_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SignOwnershipRsp Clone() {
      return new SignOwnershipRsp(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "branch_id" field.</summary>
    public const int BranchIdFieldNumber = 2;
    private readonly static uint BranchIdDefaultValue = 0;

    private uint branchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BranchId {
      get { if ((_hasBits0 & 2) != 0) { return branchId_; } else { return BranchIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        branchId_ = value;
      }
    }
    /// <summary>Gets whether the "branch_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBranchId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "branch_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBranchId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "expiration" field.</summary>
    public const int ExpirationFieldNumber = 3;
    private readonly static ulong ExpirationDefaultValue = 0UL;

    private ulong expiration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Expiration {
      get { if ((_hasBits0 & 4) != 0) { return expiration_; } else { return ExpirationDefaultValue; } }
      set {
        _hasBits0 |= 4;
        expiration_ = value;
      }
    }
    /// <summary>Gets whether the "expiration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpiration {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "expiration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpiration() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 4;
    private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

    private pb::ByteString signature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Signature {
      get { return signature_ ?? SignatureDefaultValue; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signature" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSignature {
      get { return signature_ != null; }
    }
    /// <summary>Clears the value of the "signature" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignature() {
      signature_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SignOwnershipRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SignOwnershipRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (BranchId != other.BranchId) return false;
      if (Expiration != other.Expiration) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (HasBranchId) hash ^= BranchId.GetHashCode();
      if (HasExpiration) hash ^= Expiration.GetHashCode();
      if (HasSignature) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasBranchId) {
        output.WriteRawTag(16);
        output.WriteUInt32(BranchId);
      }
      if (HasExpiration) {
        output.WriteRawTag(24);
        output.WriteUInt64(Expiration);
      }
      if (HasSignature) {
        output.WriteRawTag(34);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasBranchId) {
        output.WriteRawTag(16);
        output.WriteUInt32(BranchId);
      }
      if (HasExpiration) {
        output.WriteRawTag(24);
        output.WriteUInt64(Expiration);
      }
      if (HasSignature) {
        output.WriteRawTag(34);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (HasBranchId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BranchId);
      }
      if (HasExpiration) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Expiration);
      }
      if (HasSignature) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SignOwnershipRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      if (other.HasBranchId) {
        BranchId = other.BranchId;
      }
      if (other.HasExpiration) {
        Expiration = other.Expiration;
      }
      if (other.HasSignature) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            BranchId = input.ReadUInt32();
            break;
          }
          case 24: {
            Expiration = input.ReadUInt64();
            break;
          }
          case 34: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            BranchId = input.ReadUInt32();
            break;
          }
          case 24: {
            Expiration = input.ReadUInt64();
            break;
          }
          case 34: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OwnershipTokenReq : pb::IMessage<OwnershipTokenReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OwnershipTokenReq> _parser = new pb::MessageParser<OwnershipTokenReq>(() => new OwnershipTokenReq());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OwnershipTokenReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnershipTokenReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnershipTokenReq(OwnershipTokenReq other) : this() {
      _hasBits0 = other._hasBits0;
      productId_ = other.productId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnershipTokenReq Clone() {
      return new OwnershipTokenReq(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private readonly static uint ProductIdDefaultValue = 0;

    private uint productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProductId {
      get { if ((_hasBits0 & 1) != 0) { return productId_; } else { return ProductIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        productId_ = value;
      }
    }
    /// <summary>Gets whether the "product_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProductId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "product_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProductId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OwnershipTokenReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OwnershipTokenReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProductId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OwnershipTokenReq other) {
      if (other == null) {
        return;
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProductId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OwnershipTokenRsp : pb::IMessage<OwnershipTokenRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OwnershipTokenRsp> _parser = new pb::MessageParser<OwnershipTokenRsp>(() => new OwnershipTokenRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OwnershipTokenRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnershipTokenRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnershipTokenRsp(OwnershipTokenRsp other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      token_ = other.token_;
      expiration_ = other.expiration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnershipTokenRsp Clone() {
      return new OwnershipTokenRsp(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "expiration" field.</summary>
    public const int ExpirationFieldNumber = 3;
    private readonly static ulong ExpirationDefaultValue = 0UL;

    private ulong expiration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Expiration {
      get { if ((_hasBits0 & 2) != 0) { return expiration_; } else { return ExpirationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        expiration_ = value;
      }
    }
    /// <summary>Gets whether the "expiration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpiration {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "expiration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpiration() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OwnershipTokenRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OwnershipTokenRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Token != other.Token) return false;
      if (Expiration != other.Expiration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasExpiration) hash ^= Expiration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasExpiration) {
        output.WriteRawTag(24);
        output.WriteUInt64(Expiration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasToken) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (HasExpiration) {
        output.WriteRawTag(24);
        output.WriteUInt64(Expiration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasExpiration) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Expiration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OwnershipTokenRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasExpiration) {
        Expiration = other.Expiration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            Expiration = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            Expiration = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegisterTemporaryOwnershipReq : pb::IMessage<RegisterTemporaryOwnershipReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterTemporaryOwnershipReq> _parser = new pb::MessageParser<RegisterTemporaryOwnershipReq>(() => new RegisterTemporaryOwnershipReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterTemporaryOwnershipReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTemporaryOwnershipReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTemporaryOwnershipReq(RegisterTemporaryOwnershipReq other) : this() {
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTemporaryOwnershipReq Clone() {
      return new RegisterTemporaryOwnershipReq(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterTemporaryOwnershipReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterTemporaryOwnershipReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterTemporaryOwnershipReq other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegisterTemporaryOwnershipRsp : pb::IMessage<RegisterTemporaryOwnershipRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterTemporaryOwnershipRsp> _parser = new pb::MessageParser<RegisterTemporaryOwnershipRsp>(() => new RegisterTemporaryOwnershipRsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterTemporaryOwnershipRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTemporaryOwnershipRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTemporaryOwnershipRsp(RegisterTemporaryOwnershipRsp other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      errorMsg_ = other.errorMsg_;
      productIds_ = other.productIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTemporaryOwnershipRsp Clone() {
      return new RegisterTemporaryOwnershipRsp(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "error_msg" field.</summary>
    public const int ErrorMsgFieldNumber = 2;
    private readonly static string ErrorMsgDefaultValue = "";

    private string errorMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorMsg {
      get { return errorMsg_ ?? ErrorMsgDefaultValue; }
      set {
        errorMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "error_msg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasErrorMsg {
      get { return errorMsg_ != null; }
    }
    /// <summary>Clears the value of the "error_msg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearErrorMsg() {
      errorMsg_ = null;
    }

    /// <summary>Field number for the "product_ids" field.</summary>
    public const int ProductIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_productIds_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> productIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ProductIds {
      get { return productIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterTemporaryOwnershipRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterTemporaryOwnershipRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ErrorMsg != other.ErrorMsg) return false;
      if(!productIds_.Equals(other.productIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (HasErrorMsg) hash ^= ErrorMsg.GetHashCode();
      hash ^= productIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasErrorMsg) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMsg);
      }
      productIds_.WriteTo(output, _repeated_productIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (HasErrorMsg) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMsg);
      }
      productIds_.WriteTo(ref output, _repeated_productIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (HasErrorMsg) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMsg);
      }
      size += productIds_.CalculateSize(_repeated_productIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterTemporaryOwnershipRsp other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      if (other.HasErrorMsg) {
        ErrorMsg = other.ErrorMsg;
      }
      productIds_.Add(other.productIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            ErrorMsg = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            productIds_.AddEntriesFrom(input, _repeated_productIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            ErrorMsg = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            productIds_.AddEntriesFrom(ref input, _repeated_productIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Req : pb::IMessage<Req>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Req> _parser = new pb::MessageParser<Req>(() => new Req());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Req> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Req() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Req(Req other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      initializeReq_ = other.initializeReq_ != null ? other.initializeReq_.Clone() : null;
      registerOwnershipReq_ = other.registerOwnershipReq_ != null ? other.registerOwnershipReq_.Clone() : null;
      registerOwnershipByCdKeyReq_ = other.registerOwnershipByCdKeyReq_ != null ? other.registerOwnershipByCdKeyReq_.Clone() : null;
      deprecatedGetProductFromCdKeyReq_ = other.deprecatedGetProductFromCdKeyReq_ != null ? other.deprecatedGetProductFromCdKeyReq_.Clone() : null;
      getProductConfigReq_ = other.getProductConfigReq_ != null ? other.getProductConfigReq_.Clone() : null;
      deprecatedGetLatestManifestsReq_ = other.deprecatedGetLatestManifestsReq_ != null ? other.deprecatedGetLatestManifestsReq_.Clone() : null;
      getBatchDownloadUrlsReq_ = other.getBatchDownloadUrlsReq_ != null ? other.getBatchDownloadUrlsReq_.Clone() : null;
      getUplayPcTicketReq_ = other.getUplayPcTicketReq_ != null ? other.getUplayPcTicketReq_.Clone() : null;
      retryUplayCoreInitializeReq_ = other.retryUplayCoreInitializeReq_ != null ? other.retryUplayCoreInitializeReq_.Clone() : null;
      consumeOwnershipReq_ = other.consumeOwnershipReq_ != null ? other.consumeOwnershipReq_.Clone() : null;
      switchProductBranchReq_ = other.switchProductBranchReq_ != null ? other.switchProductBranchReq_.Clone() : null;
      unlockProductBranchReq_ = other.unlockProductBranchReq_ != null ? other.unlockProductBranchReq_.Clone() : null;
      registerOwnershipSteamPopReq_ = other.registerOwnershipSteamPopReq_ != null ? other.registerOwnershipSteamPopReq_.Clone() : null;
      registerOwnershipFromOculusReq_ = other.registerOwnershipFromOculusReq_ != null ? other.registerOwnershipFromOculusReq_.Clone() : null;
      getGameTokenReq_ = other.getGameTokenReq_ != null ? other.getGameTokenReq_.Clone() : null;
      claimKeystorageKeyReq_ = other.claimKeystorageKeyReq_ != null ? other.claimKeystorageKeyReq_.Clone() : null;
      getGameTimeTicketReq_ = other.getGameTimeTicketReq_ != null ? other.getGameTimeTicketReq_.Clone() : null;
      getGameWithdrawalRightsReq_ = other.getGameWithdrawalRightsReq_ != null ? other.getGameWithdrawalRightsReq_.Clone() : null;
      waiveGameWithdrawalRightsReq_ = other.waiveGameWithdrawalRightsReq_ != null ? other.waiveGameWithdrawalRightsReq_.Clone() : null;
      signOwnershipReq_ = other.signOwnershipReq_ != null ? other.signOwnershipReq_.Clone() : null;
      registerOwnershipFromWegameReq_ = other.registerOwnershipFromWegameReq_ != null ? other.registerOwnershipFromWegameReq_.Clone() : null;
      ownershipTokenReq_ = other.ownershipTokenReq_ != null ? other.ownershipTokenReq_.Clone() : null;
      registerTemporaryOwnershipReq_ = other.registerTemporaryOwnershipReq_ != null ? other.registerTemporaryOwnershipReq_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Req Clone() {
      return new Req(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "initialize_req" field.</summary>
    public const int InitializeReqFieldNumber = 2;
    private global::Uplay.Ownership.InitializeReq initializeReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.InitializeReq InitializeReq {
      get { return initializeReq_; }
      set {
        initializeReq_ = value;
      }
    }

    /// <summary>Field number for the "register_ownership_req" field.</summary>
    public const int RegisterOwnershipReqFieldNumber = 3;
    private global::Uplay.Ownership.RegisterOwnershipReq registerOwnershipReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipReq RegisterOwnershipReq {
      get { return registerOwnershipReq_; }
      set {
        registerOwnershipReq_ = value;
      }
    }

    /// <summary>Field number for the "register_ownership_by_cd_key_req" field.</summary>
    public const int RegisterOwnershipByCdKeyReqFieldNumber = 5;
    private global::Uplay.Ownership.RegisterOwnershipByCdKeyReq registerOwnershipByCdKeyReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipByCdKeyReq RegisterOwnershipByCdKeyReq {
      get { return registerOwnershipByCdKeyReq_; }
      set {
        registerOwnershipByCdKeyReq_ = value;
      }
    }

    /// <summary>Field number for the "deprecated_get_product_from_cd_key_req" field.</summary>
    public const int DeprecatedGetProductFromCdKeyReqFieldNumber = 6;
    private global::Uplay.Ownership.DeprecatedGetProductFromCdKeyReq deprecatedGetProductFromCdKeyReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.DeprecatedGetProductFromCdKeyReq DeprecatedGetProductFromCdKeyReq {
      get { return deprecatedGetProductFromCdKeyReq_; }
      set {
        deprecatedGetProductFromCdKeyReq_ = value;
      }
    }

    /// <summary>Field number for the "get_product_config_req" field.</summary>
    public const int GetProductConfigReqFieldNumber = 9;
    private global::Uplay.Ownership.GetProductConfigReq getProductConfigReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetProductConfigReq GetProductConfigReq {
      get { return getProductConfigReq_; }
      set {
        getProductConfigReq_ = value;
      }
    }

    /// <summary>Field number for the "deprecated_get_latest_manifests_req" field.</summary>
    public const int DeprecatedGetLatestManifestsReqFieldNumber = 10;
    private global::Uplay.Ownership.DeprecatedGetLatestManifestsReq deprecatedGetLatestManifestsReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.DeprecatedGetLatestManifestsReq DeprecatedGetLatestManifestsReq {
      get { return deprecatedGetLatestManifestsReq_; }
      set {
        deprecatedGetLatestManifestsReq_ = value;
      }
    }

    /// <summary>Field number for the "get_batch_download_urls_req" field.</summary>
    public const int GetBatchDownloadUrlsReqFieldNumber = 12;
    private global::Uplay.Ownership.GetBatchDownloadUrlsReq getBatchDownloadUrlsReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetBatchDownloadUrlsReq GetBatchDownloadUrlsReq {
      get { return getBatchDownloadUrlsReq_; }
      set {
        getBatchDownloadUrlsReq_ = value;
      }
    }

    /// <summary>Field number for the "get_uplay_pc_ticket_req" field.</summary>
    public const int GetUplayPcTicketReqFieldNumber = 14;
    private global::Uplay.Ownership.GetUplayPCTicketReq getUplayPcTicketReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetUplayPCTicketReq GetUplayPcTicketReq {
      get { return getUplayPcTicketReq_; }
      set {
        getUplayPcTicketReq_ = value;
      }
    }

    /// <summary>Field number for the "retry_uplay_core_initialize_req" field.</summary>
    public const int RetryUplayCoreInitializeReqFieldNumber = 15;
    private global::Uplay.Ownership.RetryUplayCoreInitializeReq retryUplayCoreInitializeReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RetryUplayCoreInitializeReq RetryUplayCoreInitializeReq {
      get { return retryUplayCoreInitializeReq_; }
      set {
        retryUplayCoreInitializeReq_ = value;
      }
    }

    /// <summary>Field number for the "consume_ownership_req" field.</summary>
    public const int ConsumeOwnershipReqFieldNumber = 16;
    private global::Uplay.Ownership.ConsumeOwnershipReq consumeOwnershipReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.ConsumeOwnershipReq ConsumeOwnershipReq {
      get { return consumeOwnershipReq_; }
      set {
        consumeOwnershipReq_ = value;
      }
    }

    /// <summary>Field number for the "switch_product_branch_req" field.</summary>
    public const int SwitchProductBranchReqFieldNumber = 17;
    private global::Uplay.Ownership.SwitchProductBranchReq switchProductBranchReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.SwitchProductBranchReq SwitchProductBranchReq {
      get { return switchProductBranchReq_; }
      set {
        switchProductBranchReq_ = value;
      }
    }

    /// <summary>Field number for the "unlock_product_branch_req" field.</summary>
    public const int UnlockProductBranchReqFieldNumber = 18;
    private global::Uplay.Ownership.UnlockProductBranchReq unlockProductBranchReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.UnlockProductBranchReq UnlockProductBranchReq {
      get { return unlockProductBranchReq_; }
      set {
        unlockProductBranchReq_ = value;
      }
    }

    /// <summary>Field number for the "register_ownership_steam_pop_req" field.</summary>
    public const int RegisterOwnershipSteamPopReqFieldNumber = 19;
    private global::Uplay.Ownership.RegisterOwnershipSteamPopReq registerOwnershipSteamPopReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipSteamPopReq RegisterOwnershipSteamPopReq {
      get { return registerOwnershipSteamPopReq_; }
      set {
        registerOwnershipSteamPopReq_ = value;
      }
    }

    /// <summary>Field number for the "register_ownership_from_oculus_req" field.</summary>
    public const int RegisterOwnershipFromOculusReqFieldNumber = 20;
    private global::Uplay.Ownership.RegisterOwnershipFromOculusReq registerOwnershipFromOculusReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipFromOculusReq RegisterOwnershipFromOculusReq {
      get { return registerOwnershipFromOculusReq_; }
      set {
        registerOwnershipFromOculusReq_ = value;
      }
    }

    /// <summary>Field number for the "get_game_token_req" field.</summary>
    public const int GetGameTokenReqFieldNumber = 21;
    private global::Uplay.Ownership.GetGameTokenReq getGameTokenReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetGameTokenReq GetGameTokenReq {
      get { return getGameTokenReq_; }
      set {
        getGameTokenReq_ = value;
      }
    }

    /// <summary>Field number for the "claim_keystorage_key_req" field.</summary>
    public const int ClaimKeystorageKeyReqFieldNumber = 22;
    private global::Uplay.Ownership.ClaimKeystorageKeyReq claimKeystorageKeyReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.ClaimKeystorageKeyReq ClaimKeystorageKeyReq {
      get { return claimKeystorageKeyReq_; }
      set {
        claimKeystorageKeyReq_ = value;
      }
    }

    /// <summary>Field number for the "get_game_time_ticket_req" field.</summary>
    public const int GetGameTimeTicketReqFieldNumber = 23;
    private global::Uplay.Ownership.GetGameTimeTicketReq getGameTimeTicketReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetGameTimeTicketReq GetGameTimeTicketReq {
      get { return getGameTimeTicketReq_; }
      set {
        getGameTimeTicketReq_ = value;
      }
    }

    /// <summary>Field number for the "get_game_withdrawal_rights_req" field.</summary>
    public const int GetGameWithdrawalRightsReqFieldNumber = 24;
    private global::Uplay.Ownership.GetGameWithdrawalRightsReq getGameWithdrawalRightsReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetGameWithdrawalRightsReq GetGameWithdrawalRightsReq {
      get { return getGameWithdrawalRightsReq_; }
      set {
        getGameWithdrawalRightsReq_ = value;
      }
    }

    /// <summary>Field number for the "waive_game_withdrawal_rights_req" field.</summary>
    public const int WaiveGameWithdrawalRightsReqFieldNumber = 25;
    private global::Uplay.Ownership.WaiveGameWithdrawalRightsReq waiveGameWithdrawalRightsReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.WaiveGameWithdrawalRightsReq WaiveGameWithdrawalRightsReq {
      get { return waiveGameWithdrawalRightsReq_; }
      set {
        waiveGameWithdrawalRightsReq_ = value;
      }
    }

    /// <summary>Field number for the "sign_ownership_req" field.</summary>
    public const int SignOwnershipReqFieldNumber = 26;
    private global::Uplay.Ownership.SignOwnershipReq signOwnershipReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.SignOwnershipReq SignOwnershipReq {
      get { return signOwnershipReq_; }
      set {
        signOwnershipReq_ = value;
      }
    }

    /// <summary>Field number for the "register_ownership_from_wegame_req" field.</summary>
    public const int RegisterOwnershipFromWegameReqFieldNumber = 27;
    private global::Uplay.Ownership.RegisterOwnershipFromWeGameReq registerOwnershipFromWegameReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipFromWeGameReq RegisterOwnershipFromWegameReq {
      get { return registerOwnershipFromWegameReq_; }
      set {
        registerOwnershipFromWegameReq_ = value;
      }
    }

    /// <summary>Field number for the "ownership_token_req" field.</summary>
    public const int OwnershipTokenReqFieldNumber = 28;
    private global::Uplay.Ownership.OwnershipTokenReq ownershipTokenReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnershipTokenReq OwnershipTokenReq {
      get { return ownershipTokenReq_; }
      set {
        ownershipTokenReq_ = value;
      }
    }

    /// <summary>Field number for the "register_temporary_ownership_req" field.</summary>
    public const int RegisterTemporaryOwnershipReqFieldNumber = 29;
    private global::Uplay.Ownership.RegisterTemporaryOwnershipReq registerTemporaryOwnershipReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterTemporaryOwnershipReq RegisterTemporaryOwnershipReq {
      get { return registerTemporaryOwnershipReq_; }
      set {
        registerTemporaryOwnershipReq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Req);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Req other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(InitializeReq, other.InitializeReq)) return false;
      if (!object.Equals(RegisterOwnershipReq, other.RegisterOwnershipReq)) return false;
      if (!object.Equals(RegisterOwnershipByCdKeyReq, other.RegisterOwnershipByCdKeyReq)) return false;
      if (!object.Equals(DeprecatedGetProductFromCdKeyReq, other.DeprecatedGetProductFromCdKeyReq)) return false;
      if (!object.Equals(GetProductConfigReq, other.GetProductConfigReq)) return false;
      if (!object.Equals(DeprecatedGetLatestManifestsReq, other.DeprecatedGetLatestManifestsReq)) return false;
      if (!object.Equals(GetBatchDownloadUrlsReq, other.GetBatchDownloadUrlsReq)) return false;
      if (!object.Equals(GetUplayPcTicketReq, other.GetUplayPcTicketReq)) return false;
      if (!object.Equals(RetryUplayCoreInitializeReq, other.RetryUplayCoreInitializeReq)) return false;
      if (!object.Equals(ConsumeOwnershipReq, other.ConsumeOwnershipReq)) return false;
      if (!object.Equals(SwitchProductBranchReq, other.SwitchProductBranchReq)) return false;
      if (!object.Equals(UnlockProductBranchReq, other.UnlockProductBranchReq)) return false;
      if (!object.Equals(RegisterOwnershipSteamPopReq, other.RegisterOwnershipSteamPopReq)) return false;
      if (!object.Equals(RegisterOwnershipFromOculusReq, other.RegisterOwnershipFromOculusReq)) return false;
      if (!object.Equals(GetGameTokenReq, other.GetGameTokenReq)) return false;
      if (!object.Equals(ClaimKeystorageKeyReq, other.ClaimKeystorageKeyReq)) return false;
      if (!object.Equals(GetGameTimeTicketReq, other.GetGameTimeTicketReq)) return false;
      if (!object.Equals(GetGameWithdrawalRightsReq, other.GetGameWithdrawalRightsReq)) return false;
      if (!object.Equals(WaiveGameWithdrawalRightsReq, other.WaiveGameWithdrawalRightsReq)) return false;
      if (!object.Equals(SignOwnershipReq, other.SignOwnershipReq)) return false;
      if (!object.Equals(RegisterOwnershipFromWegameReq, other.RegisterOwnershipFromWegameReq)) return false;
      if (!object.Equals(OwnershipTokenReq, other.OwnershipTokenReq)) return false;
      if (!object.Equals(RegisterTemporaryOwnershipReq, other.RegisterTemporaryOwnershipReq)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (initializeReq_ != null) hash ^= InitializeReq.GetHashCode();
      if (registerOwnershipReq_ != null) hash ^= RegisterOwnershipReq.GetHashCode();
      if (registerOwnershipByCdKeyReq_ != null) hash ^= RegisterOwnershipByCdKeyReq.GetHashCode();
      if (deprecatedGetProductFromCdKeyReq_ != null) hash ^= DeprecatedGetProductFromCdKeyReq.GetHashCode();
      if (getProductConfigReq_ != null) hash ^= GetProductConfigReq.GetHashCode();
      if (deprecatedGetLatestManifestsReq_ != null) hash ^= DeprecatedGetLatestManifestsReq.GetHashCode();
      if (getBatchDownloadUrlsReq_ != null) hash ^= GetBatchDownloadUrlsReq.GetHashCode();
      if (getUplayPcTicketReq_ != null) hash ^= GetUplayPcTicketReq.GetHashCode();
      if (retryUplayCoreInitializeReq_ != null) hash ^= RetryUplayCoreInitializeReq.GetHashCode();
      if (consumeOwnershipReq_ != null) hash ^= ConsumeOwnershipReq.GetHashCode();
      if (switchProductBranchReq_ != null) hash ^= SwitchProductBranchReq.GetHashCode();
      if (unlockProductBranchReq_ != null) hash ^= UnlockProductBranchReq.GetHashCode();
      if (registerOwnershipSteamPopReq_ != null) hash ^= RegisterOwnershipSteamPopReq.GetHashCode();
      if (registerOwnershipFromOculusReq_ != null) hash ^= RegisterOwnershipFromOculusReq.GetHashCode();
      if (getGameTokenReq_ != null) hash ^= GetGameTokenReq.GetHashCode();
      if (claimKeystorageKeyReq_ != null) hash ^= ClaimKeystorageKeyReq.GetHashCode();
      if (getGameTimeTicketReq_ != null) hash ^= GetGameTimeTicketReq.GetHashCode();
      if (getGameWithdrawalRightsReq_ != null) hash ^= GetGameWithdrawalRightsReq.GetHashCode();
      if (waiveGameWithdrawalRightsReq_ != null) hash ^= WaiveGameWithdrawalRightsReq.GetHashCode();
      if (signOwnershipReq_ != null) hash ^= SignOwnershipReq.GetHashCode();
      if (registerOwnershipFromWegameReq_ != null) hash ^= RegisterOwnershipFromWegameReq.GetHashCode();
      if (ownershipTokenReq_ != null) hash ^= OwnershipTokenReq.GetHashCode();
      if (registerTemporaryOwnershipReq_ != null) hash ^= RegisterTemporaryOwnershipReq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (initializeReq_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InitializeReq);
      }
      if (registerOwnershipReq_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegisterOwnershipReq);
      }
      if (registerOwnershipByCdKeyReq_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RegisterOwnershipByCdKeyReq);
      }
      if (deprecatedGetProductFromCdKeyReq_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DeprecatedGetProductFromCdKeyReq);
      }
      if (getProductConfigReq_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(GetProductConfigReq);
      }
      if (deprecatedGetLatestManifestsReq_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(DeprecatedGetLatestManifestsReq);
      }
      if (getBatchDownloadUrlsReq_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GetBatchDownloadUrlsReq);
      }
      if (getUplayPcTicketReq_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(GetUplayPcTicketReq);
      }
      if (retryUplayCoreInitializeReq_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(RetryUplayCoreInitializeReq);
      }
      if (consumeOwnershipReq_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ConsumeOwnershipReq);
      }
      if (switchProductBranchReq_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(SwitchProductBranchReq);
      }
      if (unlockProductBranchReq_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(UnlockProductBranchReq);
      }
      if (registerOwnershipSteamPopReq_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(RegisterOwnershipSteamPopReq);
      }
      if (registerOwnershipFromOculusReq_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RegisterOwnershipFromOculusReq);
      }
      if (getGameTokenReq_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(GetGameTokenReq);
      }
      if (claimKeystorageKeyReq_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(ClaimKeystorageKeyReq);
      }
      if (getGameTimeTicketReq_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(GetGameTimeTicketReq);
      }
      if (getGameWithdrawalRightsReq_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(GetGameWithdrawalRightsReq);
      }
      if (waiveGameWithdrawalRightsReq_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(WaiveGameWithdrawalRightsReq);
      }
      if (signOwnershipReq_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(SignOwnershipReq);
      }
      if (registerOwnershipFromWegameReq_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(RegisterOwnershipFromWegameReq);
      }
      if (ownershipTokenReq_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(OwnershipTokenReq);
      }
      if (registerTemporaryOwnershipReq_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(RegisterTemporaryOwnershipReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (initializeReq_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InitializeReq);
      }
      if (registerOwnershipReq_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegisterOwnershipReq);
      }
      if (registerOwnershipByCdKeyReq_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RegisterOwnershipByCdKeyReq);
      }
      if (deprecatedGetProductFromCdKeyReq_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DeprecatedGetProductFromCdKeyReq);
      }
      if (getProductConfigReq_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(GetProductConfigReq);
      }
      if (deprecatedGetLatestManifestsReq_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(DeprecatedGetLatestManifestsReq);
      }
      if (getBatchDownloadUrlsReq_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GetBatchDownloadUrlsReq);
      }
      if (getUplayPcTicketReq_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(GetUplayPcTicketReq);
      }
      if (retryUplayCoreInitializeReq_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(RetryUplayCoreInitializeReq);
      }
      if (consumeOwnershipReq_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ConsumeOwnershipReq);
      }
      if (switchProductBranchReq_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(SwitchProductBranchReq);
      }
      if (unlockProductBranchReq_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(UnlockProductBranchReq);
      }
      if (registerOwnershipSteamPopReq_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(RegisterOwnershipSteamPopReq);
      }
      if (registerOwnershipFromOculusReq_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(RegisterOwnershipFromOculusReq);
      }
      if (getGameTokenReq_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(GetGameTokenReq);
      }
      if (claimKeystorageKeyReq_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(ClaimKeystorageKeyReq);
      }
      if (getGameTimeTicketReq_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(GetGameTimeTicketReq);
      }
      if (getGameWithdrawalRightsReq_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(GetGameWithdrawalRightsReq);
      }
      if (waiveGameWithdrawalRightsReq_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(WaiveGameWithdrawalRightsReq);
      }
      if (signOwnershipReq_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(SignOwnershipReq);
      }
      if (registerOwnershipFromWegameReq_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(RegisterOwnershipFromWegameReq);
      }
      if (ownershipTokenReq_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(OwnershipTokenReq);
      }
      if (registerTemporaryOwnershipReq_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(RegisterTemporaryOwnershipReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (initializeReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitializeReq);
      }
      if (registerOwnershipReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterOwnershipReq);
      }
      if (registerOwnershipByCdKeyReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterOwnershipByCdKeyReq);
      }
      if (deprecatedGetProductFromCdKeyReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeprecatedGetProductFromCdKeyReq);
      }
      if (getProductConfigReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetProductConfigReq);
      }
      if (deprecatedGetLatestManifestsReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeprecatedGetLatestManifestsReq);
      }
      if (getBatchDownloadUrlsReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBatchDownloadUrlsReq);
      }
      if (getUplayPcTicketReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetUplayPcTicketReq);
      }
      if (retryUplayCoreInitializeReq_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetryUplayCoreInitializeReq);
      }
      if (consumeOwnershipReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ConsumeOwnershipReq);
      }
      if (switchProductBranchReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SwitchProductBranchReq);
      }
      if (unlockProductBranchReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnlockProductBranchReq);
      }
      if (registerOwnershipSteamPopReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterOwnershipSteamPopReq);
      }
      if (registerOwnershipFromOculusReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterOwnershipFromOculusReq);
      }
      if (getGameTokenReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetGameTokenReq);
      }
      if (claimKeystorageKeyReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClaimKeystorageKeyReq);
      }
      if (getGameTimeTicketReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetGameTimeTicketReq);
      }
      if (getGameWithdrawalRightsReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetGameWithdrawalRightsReq);
      }
      if (waiveGameWithdrawalRightsReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WaiveGameWithdrawalRightsReq);
      }
      if (signOwnershipReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SignOwnershipReq);
      }
      if (registerOwnershipFromWegameReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterOwnershipFromWegameReq);
      }
      if (ownershipTokenReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OwnershipTokenReq);
      }
      if (registerTemporaryOwnershipReq_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterTemporaryOwnershipReq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Req other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.initializeReq_ != null) {
        if (initializeReq_ == null) {
          InitializeReq = new global::Uplay.Ownership.InitializeReq();
        }
        InitializeReq.MergeFrom(other.InitializeReq);
      }
      if (other.registerOwnershipReq_ != null) {
        if (registerOwnershipReq_ == null) {
          RegisterOwnershipReq = new global::Uplay.Ownership.RegisterOwnershipReq();
        }
        RegisterOwnershipReq.MergeFrom(other.RegisterOwnershipReq);
      }
      if (other.registerOwnershipByCdKeyReq_ != null) {
        if (registerOwnershipByCdKeyReq_ == null) {
          RegisterOwnershipByCdKeyReq = new global::Uplay.Ownership.RegisterOwnershipByCdKeyReq();
        }
        RegisterOwnershipByCdKeyReq.MergeFrom(other.RegisterOwnershipByCdKeyReq);
      }
      if (other.deprecatedGetProductFromCdKeyReq_ != null) {
        if (deprecatedGetProductFromCdKeyReq_ == null) {
          DeprecatedGetProductFromCdKeyReq = new global::Uplay.Ownership.DeprecatedGetProductFromCdKeyReq();
        }
        DeprecatedGetProductFromCdKeyReq.MergeFrom(other.DeprecatedGetProductFromCdKeyReq);
      }
      if (other.getProductConfigReq_ != null) {
        if (getProductConfigReq_ == null) {
          GetProductConfigReq = new global::Uplay.Ownership.GetProductConfigReq();
        }
        GetProductConfigReq.MergeFrom(other.GetProductConfigReq);
      }
      if (other.deprecatedGetLatestManifestsReq_ != null) {
        if (deprecatedGetLatestManifestsReq_ == null) {
          DeprecatedGetLatestManifestsReq = new global::Uplay.Ownership.DeprecatedGetLatestManifestsReq();
        }
        DeprecatedGetLatestManifestsReq.MergeFrom(other.DeprecatedGetLatestManifestsReq);
      }
      if (other.getBatchDownloadUrlsReq_ != null) {
        if (getBatchDownloadUrlsReq_ == null) {
          GetBatchDownloadUrlsReq = new global::Uplay.Ownership.GetBatchDownloadUrlsReq();
        }
        GetBatchDownloadUrlsReq.MergeFrom(other.GetBatchDownloadUrlsReq);
      }
      if (other.getUplayPcTicketReq_ != null) {
        if (getUplayPcTicketReq_ == null) {
          GetUplayPcTicketReq = new global::Uplay.Ownership.GetUplayPCTicketReq();
        }
        GetUplayPcTicketReq.MergeFrom(other.GetUplayPcTicketReq);
      }
      if (other.retryUplayCoreInitializeReq_ != null) {
        if (retryUplayCoreInitializeReq_ == null) {
          RetryUplayCoreInitializeReq = new global::Uplay.Ownership.RetryUplayCoreInitializeReq();
        }
        RetryUplayCoreInitializeReq.MergeFrom(other.RetryUplayCoreInitializeReq);
      }
      if (other.consumeOwnershipReq_ != null) {
        if (consumeOwnershipReq_ == null) {
          ConsumeOwnershipReq = new global::Uplay.Ownership.ConsumeOwnershipReq();
        }
        ConsumeOwnershipReq.MergeFrom(other.ConsumeOwnershipReq);
      }
      if (other.switchProductBranchReq_ != null) {
        if (switchProductBranchReq_ == null) {
          SwitchProductBranchReq = new global::Uplay.Ownership.SwitchProductBranchReq();
        }
        SwitchProductBranchReq.MergeFrom(other.SwitchProductBranchReq);
      }
      if (other.unlockProductBranchReq_ != null) {
        if (unlockProductBranchReq_ == null) {
          UnlockProductBranchReq = new global::Uplay.Ownership.UnlockProductBranchReq();
        }
        UnlockProductBranchReq.MergeFrom(other.UnlockProductBranchReq);
      }
      if (other.registerOwnershipSteamPopReq_ != null) {
        if (registerOwnershipSteamPopReq_ == null) {
          RegisterOwnershipSteamPopReq = new global::Uplay.Ownership.RegisterOwnershipSteamPopReq();
        }
        RegisterOwnershipSteamPopReq.MergeFrom(other.RegisterOwnershipSteamPopReq);
      }
      if (other.registerOwnershipFromOculusReq_ != null) {
        if (registerOwnershipFromOculusReq_ == null) {
          RegisterOwnershipFromOculusReq = new global::Uplay.Ownership.RegisterOwnershipFromOculusReq();
        }
        RegisterOwnershipFromOculusReq.MergeFrom(other.RegisterOwnershipFromOculusReq);
      }
      if (other.getGameTokenReq_ != null) {
        if (getGameTokenReq_ == null) {
          GetGameTokenReq = new global::Uplay.Ownership.GetGameTokenReq();
        }
        GetGameTokenReq.MergeFrom(other.GetGameTokenReq);
      }
      if (other.claimKeystorageKeyReq_ != null) {
        if (claimKeystorageKeyReq_ == null) {
          ClaimKeystorageKeyReq = new global::Uplay.Ownership.ClaimKeystorageKeyReq();
        }
        ClaimKeystorageKeyReq.MergeFrom(other.ClaimKeystorageKeyReq);
      }
      if (other.getGameTimeTicketReq_ != null) {
        if (getGameTimeTicketReq_ == null) {
          GetGameTimeTicketReq = new global::Uplay.Ownership.GetGameTimeTicketReq();
        }
        GetGameTimeTicketReq.MergeFrom(other.GetGameTimeTicketReq);
      }
      if (other.getGameWithdrawalRightsReq_ != null) {
        if (getGameWithdrawalRightsReq_ == null) {
          GetGameWithdrawalRightsReq = new global::Uplay.Ownership.GetGameWithdrawalRightsReq();
        }
        GetGameWithdrawalRightsReq.MergeFrom(other.GetGameWithdrawalRightsReq);
      }
      if (other.waiveGameWithdrawalRightsReq_ != null) {
        if (waiveGameWithdrawalRightsReq_ == null) {
          WaiveGameWithdrawalRightsReq = new global::Uplay.Ownership.WaiveGameWithdrawalRightsReq();
        }
        WaiveGameWithdrawalRightsReq.MergeFrom(other.WaiveGameWithdrawalRightsReq);
      }
      if (other.signOwnershipReq_ != null) {
        if (signOwnershipReq_ == null) {
          SignOwnershipReq = new global::Uplay.Ownership.SignOwnershipReq();
        }
        SignOwnershipReq.MergeFrom(other.SignOwnershipReq);
      }
      if (other.registerOwnershipFromWegameReq_ != null) {
        if (registerOwnershipFromWegameReq_ == null) {
          RegisterOwnershipFromWegameReq = new global::Uplay.Ownership.RegisterOwnershipFromWeGameReq();
        }
        RegisterOwnershipFromWegameReq.MergeFrom(other.RegisterOwnershipFromWegameReq);
      }
      if (other.ownershipTokenReq_ != null) {
        if (ownershipTokenReq_ == null) {
          OwnershipTokenReq = new global::Uplay.Ownership.OwnershipTokenReq();
        }
        OwnershipTokenReq.MergeFrom(other.OwnershipTokenReq);
      }
      if (other.registerTemporaryOwnershipReq_ != null) {
        if (registerTemporaryOwnershipReq_ == null) {
          RegisterTemporaryOwnershipReq = new global::Uplay.Ownership.RegisterTemporaryOwnershipReq();
        }
        RegisterTemporaryOwnershipReq.MergeFrom(other.RegisterTemporaryOwnershipReq);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (initializeReq_ == null) {
              InitializeReq = new global::Uplay.Ownership.InitializeReq();
            }
            input.ReadMessage(InitializeReq);
            break;
          }
          case 26: {
            if (registerOwnershipReq_ == null) {
              RegisterOwnershipReq = new global::Uplay.Ownership.RegisterOwnershipReq();
            }
            input.ReadMessage(RegisterOwnershipReq);
            break;
          }
          case 42: {
            if (registerOwnershipByCdKeyReq_ == null) {
              RegisterOwnershipByCdKeyReq = new global::Uplay.Ownership.RegisterOwnershipByCdKeyReq();
            }
            input.ReadMessage(RegisterOwnershipByCdKeyReq);
            break;
          }
          case 50: {
            if (deprecatedGetProductFromCdKeyReq_ == null) {
              DeprecatedGetProductFromCdKeyReq = new global::Uplay.Ownership.DeprecatedGetProductFromCdKeyReq();
            }
            input.ReadMessage(DeprecatedGetProductFromCdKeyReq);
            break;
          }
          case 74: {
            if (getProductConfigReq_ == null) {
              GetProductConfigReq = new global::Uplay.Ownership.GetProductConfigReq();
            }
            input.ReadMessage(GetProductConfigReq);
            break;
          }
          case 82: {
            if (deprecatedGetLatestManifestsReq_ == null) {
              DeprecatedGetLatestManifestsReq = new global::Uplay.Ownership.DeprecatedGetLatestManifestsReq();
            }
            input.ReadMessage(DeprecatedGetLatestManifestsReq);
            break;
          }
          case 98: {
            if (getBatchDownloadUrlsReq_ == null) {
              GetBatchDownloadUrlsReq = new global::Uplay.Ownership.GetBatchDownloadUrlsReq();
            }
            input.ReadMessage(GetBatchDownloadUrlsReq);
            break;
          }
          case 114: {
            if (getUplayPcTicketReq_ == null) {
              GetUplayPcTicketReq = new global::Uplay.Ownership.GetUplayPCTicketReq();
            }
            input.ReadMessage(GetUplayPcTicketReq);
            break;
          }
          case 122: {
            if (retryUplayCoreInitializeReq_ == null) {
              RetryUplayCoreInitializeReq = new global::Uplay.Ownership.RetryUplayCoreInitializeReq();
            }
            input.ReadMessage(RetryUplayCoreInitializeReq);
            break;
          }
          case 130: {
            if (consumeOwnershipReq_ == null) {
              ConsumeOwnershipReq = new global::Uplay.Ownership.ConsumeOwnershipReq();
            }
            input.ReadMessage(ConsumeOwnershipReq);
            break;
          }
          case 138: {
            if (switchProductBranchReq_ == null) {
              SwitchProductBranchReq = new global::Uplay.Ownership.SwitchProductBranchReq();
            }
            input.ReadMessage(SwitchProductBranchReq);
            break;
          }
          case 146: {
            if (unlockProductBranchReq_ == null) {
              UnlockProductBranchReq = new global::Uplay.Ownership.UnlockProductBranchReq();
            }
            input.ReadMessage(UnlockProductBranchReq);
            break;
          }
          case 154: {
            if (registerOwnershipSteamPopReq_ == null) {
              RegisterOwnershipSteamPopReq = new global::Uplay.Ownership.RegisterOwnershipSteamPopReq();
            }
            input.ReadMessage(RegisterOwnershipSteamPopReq);
            break;
          }
          case 162: {
            if (registerOwnershipFromOculusReq_ == null) {
              RegisterOwnershipFromOculusReq = new global::Uplay.Ownership.RegisterOwnershipFromOculusReq();
            }
            input.ReadMessage(RegisterOwnershipFromOculusReq);
            break;
          }
          case 170: {
            if (getGameTokenReq_ == null) {
              GetGameTokenReq = new global::Uplay.Ownership.GetGameTokenReq();
            }
            input.ReadMessage(GetGameTokenReq);
            break;
          }
          case 178: {
            if (claimKeystorageKeyReq_ == null) {
              ClaimKeystorageKeyReq = new global::Uplay.Ownership.ClaimKeystorageKeyReq();
            }
            input.ReadMessage(ClaimKeystorageKeyReq);
            break;
          }
          case 186: {
            if (getGameTimeTicketReq_ == null) {
              GetGameTimeTicketReq = new global::Uplay.Ownership.GetGameTimeTicketReq();
            }
            input.ReadMessage(GetGameTimeTicketReq);
            break;
          }
          case 194: {
            if (getGameWithdrawalRightsReq_ == null) {
              GetGameWithdrawalRightsReq = new global::Uplay.Ownership.GetGameWithdrawalRightsReq();
            }
            input.ReadMessage(GetGameWithdrawalRightsReq);
            break;
          }
          case 202: {
            if (waiveGameWithdrawalRightsReq_ == null) {
              WaiveGameWithdrawalRightsReq = new global::Uplay.Ownership.WaiveGameWithdrawalRightsReq();
            }
            input.ReadMessage(WaiveGameWithdrawalRightsReq);
            break;
          }
          case 210: {
            if (signOwnershipReq_ == null) {
              SignOwnershipReq = new global::Uplay.Ownership.SignOwnershipReq();
            }
            input.ReadMessage(SignOwnershipReq);
            break;
          }
          case 218: {
            if (registerOwnershipFromWegameReq_ == null) {
              RegisterOwnershipFromWegameReq = new global::Uplay.Ownership.RegisterOwnershipFromWeGameReq();
            }
            input.ReadMessage(RegisterOwnershipFromWegameReq);
            break;
          }
          case 226: {
            if (ownershipTokenReq_ == null) {
              OwnershipTokenReq = new global::Uplay.Ownership.OwnershipTokenReq();
            }
            input.ReadMessage(OwnershipTokenReq);
            break;
          }
          case 234: {
            if (registerTemporaryOwnershipReq_ == null) {
              RegisterTemporaryOwnershipReq = new global::Uplay.Ownership.RegisterTemporaryOwnershipReq();
            }
            input.ReadMessage(RegisterTemporaryOwnershipReq);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (initializeReq_ == null) {
              InitializeReq = new global::Uplay.Ownership.InitializeReq();
            }
            input.ReadMessage(InitializeReq);
            break;
          }
          case 26: {
            if (registerOwnershipReq_ == null) {
              RegisterOwnershipReq = new global::Uplay.Ownership.RegisterOwnershipReq();
            }
            input.ReadMessage(RegisterOwnershipReq);
            break;
          }
          case 42: {
            if (registerOwnershipByCdKeyReq_ == null) {
              RegisterOwnershipByCdKeyReq = new global::Uplay.Ownership.RegisterOwnershipByCdKeyReq();
            }
            input.ReadMessage(RegisterOwnershipByCdKeyReq);
            break;
          }
          case 50: {
            if (deprecatedGetProductFromCdKeyReq_ == null) {
              DeprecatedGetProductFromCdKeyReq = new global::Uplay.Ownership.DeprecatedGetProductFromCdKeyReq();
            }
            input.ReadMessage(DeprecatedGetProductFromCdKeyReq);
            break;
          }
          case 74: {
            if (getProductConfigReq_ == null) {
              GetProductConfigReq = new global::Uplay.Ownership.GetProductConfigReq();
            }
            input.ReadMessage(GetProductConfigReq);
            break;
          }
          case 82: {
            if (deprecatedGetLatestManifestsReq_ == null) {
              DeprecatedGetLatestManifestsReq = new global::Uplay.Ownership.DeprecatedGetLatestManifestsReq();
            }
            input.ReadMessage(DeprecatedGetLatestManifestsReq);
            break;
          }
          case 98: {
            if (getBatchDownloadUrlsReq_ == null) {
              GetBatchDownloadUrlsReq = new global::Uplay.Ownership.GetBatchDownloadUrlsReq();
            }
            input.ReadMessage(GetBatchDownloadUrlsReq);
            break;
          }
          case 114: {
            if (getUplayPcTicketReq_ == null) {
              GetUplayPcTicketReq = new global::Uplay.Ownership.GetUplayPCTicketReq();
            }
            input.ReadMessage(GetUplayPcTicketReq);
            break;
          }
          case 122: {
            if (retryUplayCoreInitializeReq_ == null) {
              RetryUplayCoreInitializeReq = new global::Uplay.Ownership.RetryUplayCoreInitializeReq();
            }
            input.ReadMessage(RetryUplayCoreInitializeReq);
            break;
          }
          case 130: {
            if (consumeOwnershipReq_ == null) {
              ConsumeOwnershipReq = new global::Uplay.Ownership.ConsumeOwnershipReq();
            }
            input.ReadMessage(ConsumeOwnershipReq);
            break;
          }
          case 138: {
            if (switchProductBranchReq_ == null) {
              SwitchProductBranchReq = new global::Uplay.Ownership.SwitchProductBranchReq();
            }
            input.ReadMessage(SwitchProductBranchReq);
            break;
          }
          case 146: {
            if (unlockProductBranchReq_ == null) {
              UnlockProductBranchReq = new global::Uplay.Ownership.UnlockProductBranchReq();
            }
            input.ReadMessage(UnlockProductBranchReq);
            break;
          }
          case 154: {
            if (registerOwnershipSteamPopReq_ == null) {
              RegisterOwnershipSteamPopReq = new global::Uplay.Ownership.RegisterOwnershipSteamPopReq();
            }
            input.ReadMessage(RegisterOwnershipSteamPopReq);
            break;
          }
          case 162: {
            if (registerOwnershipFromOculusReq_ == null) {
              RegisterOwnershipFromOculusReq = new global::Uplay.Ownership.RegisterOwnershipFromOculusReq();
            }
            input.ReadMessage(RegisterOwnershipFromOculusReq);
            break;
          }
          case 170: {
            if (getGameTokenReq_ == null) {
              GetGameTokenReq = new global::Uplay.Ownership.GetGameTokenReq();
            }
            input.ReadMessage(GetGameTokenReq);
            break;
          }
          case 178: {
            if (claimKeystorageKeyReq_ == null) {
              ClaimKeystorageKeyReq = new global::Uplay.Ownership.ClaimKeystorageKeyReq();
            }
            input.ReadMessage(ClaimKeystorageKeyReq);
            break;
          }
          case 186: {
            if (getGameTimeTicketReq_ == null) {
              GetGameTimeTicketReq = new global::Uplay.Ownership.GetGameTimeTicketReq();
            }
            input.ReadMessage(GetGameTimeTicketReq);
            break;
          }
          case 194: {
            if (getGameWithdrawalRightsReq_ == null) {
              GetGameWithdrawalRightsReq = new global::Uplay.Ownership.GetGameWithdrawalRightsReq();
            }
            input.ReadMessage(GetGameWithdrawalRightsReq);
            break;
          }
          case 202: {
            if (waiveGameWithdrawalRightsReq_ == null) {
              WaiveGameWithdrawalRightsReq = new global::Uplay.Ownership.WaiveGameWithdrawalRightsReq();
            }
            input.ReadMessage(WaiveGameWithdrawalRightsReq);
            break;
          }
          case 210: {
            if (signOwnershipReq_ == null) {
              SignOwnershipReq = new global::Uplay.Ownership.SignOwnershipReq();
            }
            input.ReadMessage(SignOwnershipReq);
            break;
          }
          case 218: {
            if (registerOwnershipFromWegameReq_ == null) {
              RegisterOwnershipFromWegameReq = new global::Uplay.Ownership.RegisterOwnershipFromWeGameReq();
            }
            input.ReadMessage(RegisterOwnershipFromWegameReq);
            break;
          }
          case 226: {
            if (ownershipTokenReq_ == null) {
              OwnershipTokenReq = new global::Uplay.Ownership.OwnershipTokenReq();
            }
            input.ReadMessage(OwnershipTokenReq);
            break;
          }
          case 234: {
            if (registerTemporaryOwnershipReq_ == null) {
              RegisterTemporaryOwnershipReq = new global::Uplay.Ownership.RegisterTemporaryOwnershipReq();
            }
            input.ReadMessage(RegisterTemporaryOwnershipReq);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Rsp : pb::IMessage<Rsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Rsp> _parser = new pb::MessageParser<Rsp>(() => new Rsp());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Rsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Rsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Rsp(Rsp other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      initializeRsp_ = other.initializeRsp_ != null ? other.initializeRsp_.Clone() : null;
      registerOwnershipRsp_ = other.registerOwnershipRsp_ != null ? other.registerOwnershipRsp_.Clone() : null;
      deprecatedGetProductFromCdKeyRsp_ = other.deprecatedGetProductFromCdKeyRsp_ != null ? other.deprecatedGetProductFromCdKeyRsp_.Clone() : null;
      getProductConfigRsp_ = other.getProductConfigRsp_ != null ? other.getProductConfigRsp_.Clone() : null;
      deprecatedGetLatestManifestsRsp_ = other.deprecatedGetLatestManifestsRsp_ != null ? other.deprecatedGetLatestManifestsRsp_.Clone() : null;
      getBatchDownloadUrlsRsp_ = other.getBatchDownloadUrlsRsp_ != null ? other.getBatchDownloadUrlsRsp_.Clone() : null;
      getUplayPcTicketRsp_ = other.getUplayPcTicketRsp_ != null ? other.getUplayPcTicketRsp_.Clone() : null;
      consumeOwnershipRsp_ = other.consumeOwnershipRsp_ != null ? other.consumeOwnershipRsp_.Clone() : null;
      switchProductBranchRsp_ = other.switchProductBranchRsp_ != null ? other.switchProductBranchRsp_.Clone() : null;
      unlockProductBranchRsp_ = other.unlockProductBranchRsp_ != null ? other.unlockProductBranchRsp_.Clone() : null;
      registerOwnershipSteamPopRsp_ = other.registerOwnershipSteamPopRsp_ != null ? other.registerOwnershipSteamPopRsp_.Clone() : null;
      registerOwnershipFromOculusRsp_ = other.registerOwnershipFromOculusRsp_ != null ? other.registerOwnershipFromOculusRsp_.Clone() : null;
      getGameTokenRsp_ = other.getGameTokenRsp_ != null ? other.getGameTokenRsp_.Clone() : null;
      claimKeystorageKeyRsp_ = other.claimKeystorageKeyRsp_ != null ? other.claimKeystorageKeyRsp_.Clone() : null;
      getGameTimeTicketRsp_ = other.getGameTimeTicketRsp_ != null ? other.getGameTimeTicketRsp_.Clone() : null;
      getGameWithdrawalRightsRsp_ = other.getGameWithdrawalRightsRsp_ != null ? other.getGameWithdrawalRightsRsp_.Clone() : null;
      waiveGameWithdrawalRightsRsp_ = other.waiveGameWithdrawalRightsRsp_ != null ? other.waiveGameWithdrawalRightsRsp_.Clone() : null;
      signOwnershipRsp_ = other.signOwnershipRsp_ != null ? other.signOwnershipRsp_.Clone() : null;
      registerOwnershipFromWegameRsp_ = other.registerOwnershipFromWegameRsp_ != null ? other.registerOwnershipFromWegameRsp_.Clone() : null;
      ownershipTokenRsp_ = other.ownershipTokenRsp_ != null ? other.ownershipTokenRsp_.Clone() : null;
      registerTemporaryOwnershipRsp_ = other.registerTemporaryOwnershipRsp_ != null ? other.registerTemporaryOwnershipRsp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Rsp Clone() {
      return new Rsp(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "initialize_rsp" field.</summary>
    public const int InitializeRspFieldNumber = 2;
    private global::Uplay.Ownership.InitializeRsp initializeRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.InitializeRsp InitializeRsp {
      get { return initializeRsp_; }
      set {
        initializeRsp_ = value;
      }
    }

    /// <summary>Field number for the "register_ownership_rsp" field.</summary>
    public const int RegisterOwnershipRspFieldNumber = 3;
    private global::Uplay.Ownership.RegisterOwnershipRsp registerOwnershipRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipRsp RegisterOwnershipRsp {
      get { return registerOwnershipRsp_; }
      set {
        registerOwnershipRsp_ = value;
      }
    }

    /// <summary>Field number for the "deprecated_get_product_from_cd_key_rsp" field.</summary>
    public const int DeprecatedGetProductFromCdKeyRspFieldNumber = 5;
    private global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp deprecatedGetProductFromCdKeyRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp DeprecatedGetProductFromCdKeyRsp {
      get { return deprecatedGetProductFromCdKeyRsp_; }
      set {
        deprecatedGetProductFromCdKeyRsp_ = value;
      }
    }

    /// <summary>Field number for the "get_product_config_rsp" field.</summary>
    public const int GetProductConfigRspFieldNumber = 9;
    private global::Uplay.Ownership.GetProductConfigRsp getProductConfigRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetProductConfigRsp GetProductConfigRsp {
      get { return getProductConfigRsp_; }
      set {
        getProductConfigRsp_ = value;
      }
    }

    /// <summary>Field number for the "deprecated_get_latest_manifests_rsp" field.</summary>
    public const int DeprecatedGetLatestManifestsRspFieldNumber = 10;
    private global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp deprecatedGetLatestManifestsRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp DeprecatedGetLatestManifestsRsp {
      get { return deprecatedGetLatestManifestsRsp_; }
      set {
        deprecatedGetLatestManifestsRsp_ = value;
      }
    }

    /// <summary>Field number for the "get_batch_download_urls_rsp" field.</summary>
    public const int GetBatchDownloadUrlsRspFieldNumber = 12;
    private global::Uplay.Ownership.GetBatchDownloadUrlsRsp getBatchDownloadUrlsRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetBatchDownloadUrlsRsp GetBatchDownloadUrlsRsp {
      get { return getBatchDownloadUrlsRsp_; }
      set {
        getBatchDownloadUrlsRsp_ = value;
      }
    }

    /// <summary>Field number for the "get_uplay_pc_ticket_rsp" field.</summary>
    public const int GetUplayPcTicketRspFieldNumber = 13;
    private global::Uplay.Ownership.GetUplayPCTicketRsp getUplayPcTicketRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetUplayPCTicketRsp GetUplayPcTicketRsp {
      get { return getUplayPcTicketRsp_; }
      set {
        getUplayPcTicketRsp_ = value;
      }
    }

    /// <summary>Field number for the "consume_ownership_rsp" field.</summary>
    public const int ConsumeOwnershipRspFieldNumber = 15;
    private global::Uplay.Ownership.ConsumeOwnershipRsp consumeOwnershipRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.ConsumeOwnershipRsp ConsumeOwnershipRsp {
      get { return consumeOwnershipRsp_; }
      set {
        consumeOwnershipRsp_ = value;
      }
    }

    /// <summary>Field number for the "switch_product_branch_rsp" field.</summary>
    public const int SwitchProductBranchRspFieldNumber = 16;
    private global::Uplay.Ownership.SwitchProductBranchRsp switchProductBranchRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.SwitchProductBranchRsp SwitchProductBranchRsp {
      get { return switchProductBranchRsp_; }
      set {
        switchProductBranchRsp_ = value;
      }
    }

    /// <summary>Field number for the "unlock_product_branch_rsp" field.</summary>
    public const int UnlockProductBranchRspFieldNumber = 17;
    private global::Uplay.Ownership.UnlockProductBranchRsp unlockProductBranchRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.UnlockProductBranchRsp UnlockProductBranchRsp {
      get { return unlockProductBranchRsp_; }
      set {
        unlockProductBranchRsp_ = value;
      }
    }

    /// <summary>Field number for the "register_ownership_steam_pop_rsp" field.</summary>
    public const int RegisterOwnershipSteamPopRspFieldNumber = 18;
    private global::Uplay.Ownership.RegisterOwnershipSteamPopRsp registerOwnershipSteamPopRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipSteamPopRsp RegisterOwnershipSteamPopRsp {
      get { return registerOwnershipSteamPopRsp_; }
      set {
        registerOwnershipSteamPopRsp_ = value;
      }
    }

    /// <summary>Field number for the "register_ownership_from_oculus_rsp" field.</summary>
    public const int RegisterOwnershipFromOculusRspFieldNumber = 19;
    private global::Uplay.Ownership.RegisterOwnershipFromOculusRsp registerOwnershipFromOculusRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipFromOculusRsp RegisterOwnershipFromOculusRsp {
      get { return registerOwnershipFromOculusRsp_; }
      set {
        registerOwnershipFromOculusRsp_ = value;
      }
    }

    /// <summary>Field number for the "get_game_token_rsp" field.</summary>
    public const int GetGameTokenRspFieldNumber = 20;
    private global::Uplay.Ownership.GetGameTokenRsp getGameTokenRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetGameTokenRsp GetGameTokenRsp {
      get { return getGameTokenRsp_; }
      set {
        getGameTokenRsp_ = value;
      }
    }

    /// <summary>Field number for the "claim_keystorage_key_rsp" field.</summary>
    public const int ClaimKeystorageKeyRspFieldNumber = 21;
    private global::Uplay.Ownership.ClaimKeystorageKeyRsp claimKeystorageKeyRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.ClaimKeystorageKeyRsp ClaimKeystorageKeyRsp {
      get { return claimKeystorageKeyRsp_; }
      set {
        claimKeystorageKeyRsp_ = value;
      }
    }

    /// <summary>Field number for the "get_game_time_ticket_rsp" field.</summary>
    public const int GetGameTimeTicketRspFieldNumber = 22;
    private global::Uplay.Ownership.GetGameTimeTicketRsp getGameTimeTicketRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetGameTimeTicketRsp GetGameTimeTicketRsp {
      get { return getGameTimeTicketRsp_; }
      set {
        getGameTimeTicketRsp_ = value;
      }
    }

    /// <summary>Field number for the "get_game_withdrawal_rights_rsp" field.</summary>
    public const int GetGameWithdrawalRightsRspFieldNumber = 23;
    private global::Uplay.Ownership.GetGameWithdrawalRightsRsp getGameWithdrawalRightsRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.GetGameWithdrawalRightsRsp GetGameWithdrawalRightsRsp {
      get { return getGameWithdrawalRightsRsp_; }
      set {
        getGameWithdrawalRightsRsp_ = value;
      }
    }

    /// <summary>Field number for the "waive_game_withdrawal_rights_rsp" field.</summary>
    public const int WaiveGameWithdrawalRightsRspFieldNumber = 24;
    private global::Uplay.Ownership.WaiveGameWithdrawalRightsRsp waiveGameWithdrawalRightsRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.WaiveGameWithdrawalRightsRsp WaiveGameWithdrawalRightsRsp {
      get { return waiveGameWithdrawalRightsRsp_; }
      set {
        waiveGameWithdrawalRightsRsp_ = value;
      }
    }

    /// <summary>Field number for the "sign_ownership_rsp" field.</summary>
    public const int SignOwnershipRspFieldNumber = 25;
    private global::Uplay.Ownership.SignOwnershipRsp signOwnershipRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.SignOwnershipRsp SignOwnershipRsp {
      get { return signOwnershipRsp_; }
      set {
        signOwnershipRsp_ = value;
      }
    }

    /// <summary>Field number for the "register_ownership_from_wegame_rsp" field.</summary>
    public const int RegisterOwnershipFromWegameRspFieldNumber = 26;
    private global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp registerOwnershipFromWegameRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp RegisterOwnershipFromWegameRsp {
      get { return registerOwnershipFromWegameRsp_; }
      set {
        registerOwnershipFromWegameRsp_ = value;
      }
    }

    /// <summary>Field number for the "ownership_token_rsp" field.</summary>
    public const int OwnershipTokenRspFieldNumber = 27;
    private global::Uplay.Ownership.OwnershipTokenRsp ownershipTokenRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnershipTokenRsp OwnershipTokenRsp {
      get { return ownershipTokenRsp_; }
      set {
        ownershipTokenRsp_ = value;
      }
    }

    /// <summary>Field number for the "register_temporary_ownership_rsp" field.</summary>
    public const int RegisterTemporaryOwnershipRspFieldNumber = 28;
    private global::Uplay.Ownership.RegisterTemporaryOwnershipRsp registerTemporaryOwnershipRsp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.RegisterTemporaryOwnershipRsp RegisterTemporaryOwnershipRsp {
      get { return registerTemporaryOwnershipRsp_; }
      set {
        registerTemporaryOwnershipRsp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Rsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Rsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(InitializeRsp, other.InitializeRsp)) return false;
      if (!object.Equals(RegisterOwnershipRsp, other.RegisterOwnershipRsp)) return false;
      if (!object.Equals(DeprecatedGetProductFromCdKeyRsp, other.DeprecatedGetProductFromCdKeyRsp)) return false;
      if (!object.Equals(GetProductConfigRsp, other.GetProductConfigRsp)) return false;
      if (!object.Equals(DeprecatedGetLatestManifestsRsp, other.DeprecatedGetLatestManifestsRsp)) return false;
      if (!object.Equals(GetBatchDownloadUrlsRsp, other.GetBatchDownloadUrlsRsp)) return false;
      if (!object.Equals(GetUplayPcTicketRsp, other.GetUplayPcTicketRsp)) return false;
      if (!object.Equals(ConsumeOwnershipRsp, other.ConsumeOwnershipRsp)) return false;
      if (!object.Equals(SwitchProductBranchRsp, other.SwitchProductBranchRsp)) return false;
      if (!object.Equals(UnlockProductBranchRsp, other.UnlockProductBranchRsp)) return false;
      if (!object.Equals(RegisterOwnershipSteamPopRsp, other.RegisterOwnershipSteamPopRsp)) return false;
      if (!object.Equals(RegisterOwnershipFromOculusRsp, other.RegisterOwnershipFromOculusRsp)) return false;
      if (!object.Equals(GetGameTokenRsp, other.GetGameTokenRsp)) return false;
      if (!object.Equals(ClaimKeystorageKeyRsp, other.ClaimKeystorageKeyRsp)) return false;
      if (!object.Equals(GetGameTimeTicketRsp, other.GetGameTimeTicketRsp)) return false;
      if (!object.Equals(GetGameWithdrawalRightsRsp, other.GetGameWithdrawalRightsRsp)) return false;
      if (!object.Equals(WaiveGameWithdrawalRightsRsp, other.WaiveGameWithdrawalRightsRsp)) return false;
      if (!object.Equals(SignOwnershipRsp, other.SignOwnershipRsp)) return false;
      if (!object.Equals(RegisterOwnershipFromWegameRsp, other.RegisterOwnershipFromWegameRsp)) return false;
      if (!object.Equals(OwnershipTokenRsp, other.OwnershipTokenRsp)) return false;
      if (!object.Equals(RegisterTemporaryOwnershipRsp, other.RegisterTemporaryOwnershipRsp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (initializeRsp_ != null) hash ^= InitializeRsp.GetHashCode();
      if (registerOwnershipRsp_ != null) hash ^= RegisterOwnershipRsp.GetHashCode();
      if (deprecatedGetProductFromCdKeyRsp_ != null) hash ^= DeprecatedGetProductFromCdKeyRsp.GetHashCode();
      if (getProductConfigRsp_ != null) hash ^= GetProductConfigRsp.GetHashCode();
      if (deprecatedGetLatestManifestsRsp_ != null) hash ^= DeprecatedGetLatestManifestsRsp.GetHashCode();
      if (getBatchDownloadUrlsRsp_ != null) hash ^= GetBatchDownloadUrlsRsp.GetHashCode();
      if (getUplayPcTicketRsp_ != null) hash ^= GetUplayPcTicketRsp.GetHashCode();
      if (consumeOwnershipRsp_ != null) hash ^= ConsumeOwnershipRsp.GetHashCode();
      if (switchProductBranchRsp_ != null) hash ^= SwitchProductBranchRsp.GetHashCode();
      if (unlockProductBranchRsp_ != null) hash ^= UnlockProductBranchRsp.GetHashCode();
      if (registerOwnershipSteamPopRsp_ != null) hash ^= RegisterOwnershipSteamPopRsp.GetHashCode();
      if (registerOwnershipFromOculusRsp_ != null) hash ^= RegisterOwnershipFromOculusRsp.GetHashCode();
      if (getGameTokenRsp_ != null) hash ^= GetGameTokenRsp.GetHashCode();
      if (claimKeystorageKeyRsp_ != null) hash ^= ClaimKeystorageKeyRsp.GetHashCode();
      if (getGameTimeTicketRsp_ != null) hash ^= GetGameTimeTicketRsp.GetHashCode();
      if (getGameWithdrawalRightsRsp_ != null) hash ^= GetGameWithdrawalRightsRsp.GetHashCode();
      if (waiveGameWithdrawalRightsRsp_ != null) hash ^= WaiveGameWithdrawalRightsRsp.GetHashCode();
      if (signOwnershipRsp_ != null) hash ^= SignOwnershipRsp.GetHashCode();
      if (registerOwnershipFromWegameRsp_ != null) hash ^= RegisterOwnershipFromWegameRsp.GetHashCode();
      if (ownershipTokenRsp_ != null) hash ^= OwnershipTokenRsp.GetHashCode();
      if (registerTemporaryOwnershipRsp_ != null) hash ^= RegisterTemporaryOwnershipRsp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (initializeRsp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InitializeRsp);
      }
      if (registerOwnershipRsp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegisterOwnershipRsp);
      }
      if (deprecatedGetProductFromCdKeyRsp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DeprecatedGetProductFromCdKeyRsp);
      }
      if (getProductConfigRsp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(GetProductConfigRsp);
      }
      if (deprecatedGetLatestManifestsRsp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(DeprecatedGetLatestManifestsRsp);
      }
      if (getBatchDownloadUrlsRsp_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GetBatchDownloadUrlsRsp);
      }
      if (getUplayPcTicketRsp_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(GetUplayPcTicketRsp);
      }
      if (consumeOwnershipRsp_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ConsumeOwnershipRsp);
      }
      if (switchProductBranchRsp_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(SwitchProductBranchRsp);
      }
      if (unlockProductBranchRsp_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(UnlockProductBranchRsp);
      }
      if (registerOwnershipSteamPopRsp_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RegisterOwnershipSteamPopRsp);
      }
      if (registerOwnershipFromOculusRsp_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(RegisterOwnershipFromOculusRsp);
      }
      if (getGameTokenRsp_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GetGameTokenRsp);
      }
      if (claimKeystorageKeyRsp_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ClaimKeystorageKeyRsp);
      }
      if (getGameTimeTicketRsp_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(GetGameTimeTicketRsp);
      }
      if (getGameWithdrawalRightsRsp_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(GetGameWithdrawalRightsRsp);
      }
      if (waiveGameWithdrawalRightsRsp_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(WaiveGameWithdrawalRightsRsp);
      }
      if (signOwnershipRsp_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(SignOwnershipRsp);
      }
      if (registerOwnershipFromWegameRsp_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(RegisterOwnershipFromWegameRsp);
      }
      if (ownershipTokenRsp_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(OwnershipTokenRsp);
      }
      if (registerTemporaryOwnershipRsp_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(RegisterTemporaryOwnershipRsp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (initializeRsp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InitializeRsp);
      }
      if (registerOwnershipRsp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegisterOwnershipRsp);
      }
      if (deprecatedGetProductFromCdKeyRsp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DeprecatedGetProductFromCdKeyRsp);
      }
      if (getProductConfigRsp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(GetProductConfigRsp);
      }
      if (deprecatedGetLatestManifestsRsp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(DeprecatedGetLatestManifestsRsp);
      }
      if (getBatchDownloadUrlsRsp_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(GetBatchDownloadUrlsRsp);
      }
      if (getUplayPcTicketRsp_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(GetUplayPcTicketRsp);
      }
      if (consumeOwnershipRsp_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ConsumeOwnershipRsp);
      }
      if (switchProductBranchRsp_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(SwitchProductBranchRsp);
      }
      if (unlockProductBranchRsp_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(UnlockProductBranchRsp);
      }
      if (registerOwnershipSteamPopRsp_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RegisterOwnershipSteamPopRsp);
      }
      if (registerOwnershipFromOculusRsp_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(RegisterOwnershipFromOculusRsp);
      }
      if (getGameTokenRsp_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GetGameTokenRsp);
      }
      if (claimKeystorageKeyRsp_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ClaimKeystorageKeyRsp);
      }
      if (getGameTimeTicketRsp_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(GetGameTimeTicketRsp);
      }
      if (getGameWithdrawalRightsRsp_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(GetGameWithdrawalRightsRsp);
      }
      if (waiveGameWithdrawalRightsRsp_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(WaiveGameWithdrawalRightsRsp);
      }
      if (signOwnershipRsp_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(SignOwnershipRsp);
      }
      if (registerOwnershipFromWegameRsp_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(RegisterOwnershipFromWegameRsp);
      }
      if (ownershipTokenRsp_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(OwnershipTokenRsp);
      }
      if (registerTemporaryOwnershipRsp_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(RegisterTemporaryOwnershipRsp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (initializeRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitializeRsp);
      }
      if (registerOwnershipRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterOwnershipRsp);
      }
      if (deprecatedGetProductFromCdKeyRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeprecatedGetProductFromCdKeyRsp);
      }
      if (getProductConfigRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetProductConfigRsp);
      }
      if (deprecatedGetLatestManifestsRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeprecatedGetLatestManifestsRsp);
      }
      if (getBatchDownloadUrlsRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBatchDownloadUrlsRsp);
      }
      if (getUplayPcTicketRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetUplayPcTicketRsp);
      }
      if (consumeOwnershipRsp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConsumeOwnershipRsp);
      }
      if (switchProductBranchRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SwitchProductBranchRsp);
      }
      if (unlockProductBranchRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnlockProductBranchRsp);
      }
      if (registerOwnershipSteamPopRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterOwnershipSteamPopRsp);
      }
      if (registerOwnershipFromOculusRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterOwnershipFromOculusRsp);
      }
      if (getGameTokenRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetGameTokenRsp);
      }
      if (claimKeystorageKeyRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClaimKeystorageKeyRsp);
      }
      if (getGameTimeTicketRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetGameTimeTicketRsp);
      }
      if (getGameWithdrawalRightsRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetGameWithdrawalRightsRsp);
      }
      if (waiveGameWithdrawalRightsRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WaiveGameWithdrawalRightsRsp);
      }
      if (signOwnershipRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SignOwnershipRsp);
      }
      if (registerOwnershipFromWegameRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterOwnershipFromWegameRsp);
      }
      if (ownershipTokenRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OwnershipTokenRsp);
      }
      if (registerTemporaryOwnershipRsp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterTemporaryOwnershipRsp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Rsp other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.initializeRsp_ != null) {
        if (initializeRsp_ == null) {
          InitializeRsp = new global::Uplay.Ownership.InitializeRsp();
        }
        InitializeRsp.MergeFrom(other.InitializeRsp);
      }
      if (other.registerOwnershipRsp_ != null) {
        if (registerOwnershipRsp_ == null) {
          RegisterOwnershipRsp = new global::Uplay.Ownership.RegisterOwnershipRsp();
        }
        RegisterOwnershipRsp.MergeFrom(other.RegisterOwnershipRsp);
      }
      if (other.deprecatedGetProductFromCdKeyRsp_ != null) {
        if (deprecatedGetProductFromCdKeyRsp_ == null) {
          DeprecatedGetProductFromCdKeyRsp = new global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp();
        }
        DeprecatedGetProductFromCdKeyRsp.MergeFrom(other.DeprecatedGetProductFromCdKeyRsp);
      }
      if (other.getProductConfigRsp_ != null) {
        if (getProductConfigRsp_ == null) {
          GetProductConfigRsp = new global::Uplay.Ownership.GetProductConfigRsp();
        }
        GetProductConfigRsp.MergeFrom(other.GetProductConfigRsp);
      }
      if (other.deprecatedGetLatestManifestsRsp_ != null) {
        if (deprecatedGetLatestManifestsRsp_ == null) {
          DeprecatedGetLatestManifestsRsp = new global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp();
        }
        DeprecatedGetLatestManifestsRsp.MergeFrom(other.DeprecatedGetLatestManifestsRsp);
      }
      if (other.getBatchDownloadUrlsRsp_ != null) {
        if (getBatchDownloadUrlsRsp_ == null) {
          GetBatchDownloadUrlsRsp = new global::Uplay.Ownership.GetBatchDownloadUrlsRsp();
        }
        GetBatchDownloadUrlsRsp.MergeFrom(other.GetBatchDownloadUrlsRsp);
      }
      if (other.getUplayPcTicketRsp_ != null) {
        if (getUplayPcTicketRsp_ == null) {
          GetUplayPcTicketRsp = new global::Uplay.Ownership.GetUplayPCTicketRsp();
        }
        GetUplayPcTicketRsp.MergeFrom(other.GetUplayPcTicketRsp);
      }
      if (other.consumeOwnershipRsp_ != null) {
        if (consumeOwnershipRsp_ == null) {
          ConsumeOwnershipRsp = new global::Uplay.Ownership.ConsumeOwnershipRsp();
        }
        ConsumeOwnershipRsp.MergeFrom(other.ConsumeOwnershipRsp);
      }
      if (other.switchProductBranchRsp_ != null) {
        if (switchProductBranchRsp_ == null) {
          SwitchProductBranchRsp = new global::Uplay.Ownership.SwitchProductBranchRsp();
        }
        SwitchProductBranchRsp.MergeFrom(other.SwitchProductBranchRsp);
      }
      if (other.unlockProductBranchRsp_ != null) {
        if (unlockProductBranchRsp_ == null) {
          UnlockProductBranchRsp = new global::Uplay.Ownership.UnlockProductBranchRsp();
        }
        UnlockProductBranchRsp.MergeFrom(other.UnlockProductBranchRsp);
      }
      if (other.registerOwnershipSteamPopRsp_ != null) {
        if (registerOwnershipSteamPopRsp_ == null) {
          RegisterOwnershipSteamPopRsp = new global::Uplay.Ownership.RegisterOwnershipSteamPopRsp();
        }
        RegisterOwnershipSteamPopRsp.MergeFrom(other.RegisterOwnershipSteamPopRsp);
      }
      if (other.registerOwnershipFromOculusRsp_ != null) {
        if (registerOwnershipFromOculusRsp_ == null) {
          RegisterOwnershipFromOculusRsp = new global::Uplay.Ownership.RegisterOwnershipFromOculusRsp();
        }
        RegisterOwnershipFromOculusRsp.MergeFrom(other.RegisterOwnershipFromOculusRsp);
      }
      if (other.getGameTokenRsp_ != null) {
        if (getGameTokenRsp_ == null) {
          GetGameTokenRsp = new global::Uplay.Ownership.GetGameTokenRsp();
        }
        GetGameTokenRsp.MergeFrom(other.GetGameTokenRsp);
      }
      if (other.claimKeystorageKeyRsp_ != null) {
        if (claimKeystorageKeyRsp_ == null) {
          ClaimKeystorageKeyRsp = new global::Uplay.Ownership.ClaimKeystorageKeyRsp();
        }
        ClaimKeystorageKeyRsp.MergeFrom(other.ClaimKeystorageKeyRsp);
      }
      if (other.getGameTimeTicketRsp_ != null) {
        if (getGameTimeTicketRsp_ == null) {
          GetGameTimeTicketRsp = new global::Uplay.Ownership.GetGameTimeTicketRsp();
        }
        GetGameTimeTicketRsp.MergeFrom(other.GetGameTimeTicketRsp);
      }
      if (other.getGameWithdrawalRightsRsp_ != null) {
        if (getGameWithdrawalRightsRsp_ == null) {
          GetGameWithdrawalRightsRsp = new global::Uplay.Ownership.GetGameWithdrawalRightsRsp();
        }
        GetGameWithdrawalRightsRsp.MergeFrom(other.GetGameWithdrawalRightsRsp);
      }
      if (other.waiveGameWithdrawalRightsRsp_ != null) {
        if (waiveGameWithdrawalRightsRsp_ == null) {
          WaiveGameWithdrawalRightsRsp = new global::Uplay.Ownership.WaiveGameWithdrawalRightsRsp();
        }
        WaiveGameWithdrawalRightsRsp.MergeFrom(other.WaiveGameWithdrawalRightsRsp);
      }
      if (other.signOwnershipRsp_ != null) {
        if (signOwnershipRsp_ == null) {
          SignOwnershipRsp = new global::Uplay.Ownership.SignOwnershipRsp();
        }
        SignOwnershipRsp.MergeFrom(other.SignOwnershipRsp);
      }
      if (other.registerOwnershipFromWegameRsp_ != null) {
        if (registerOwnershipFromWegameRsp_ == null) {
          RegisterOwnershipFromWegameRsp = new global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp();
        }
        RegisterOwnershipFromWegameRsp.MergeFrom(other.RegisterOwnershipFromWegameRsp);
      }
      if (other.ownershipTokenRsp_ != null) {
        if (ownershipTokenRsp_ == null) {
          OwnershipTokenRsp = new global::Uplay.Ownership.OwnershipTokenRsp();
        }
        OwnershipTokenRsp.MergeFrom(other.OwnershipTokenRsp);
      }
      if (other.registerTemporaryOwnershipRsp_ != null) {
        if (registerTemporaryOwnershipRsp_ == null) {
          RegisterTemporaryOwnershipRsp = new global::Uplay.Ownership.RegisterTemporaryOwnershipRsp();
        }
        RegisterTemporaryOwnershipRsp.MergeFrom(other.RegisterTemporaryOwnershipRsp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (initializeRsp_ == null) {
              InitializeRsp = new global::Uplay.Ownership.InitializeRsp();
            }
            input.ReadMessage(InitializeRsp);
            break;
          }
          case 26: {
            if (registerOwnershipRsp_ == null) {
              RegisterOwnershipRsp = new global::Uplay.Ownership.RegisterOwnershipRsp();
            }
            input.ReadMessage(RegisterOwnershipRsp);
            break;
          }
          case 42: {
            if (deprecatedGetProductFromCdKeyRsp_ == null) {
              DeprecatedGetProductFromCdKeyRsp = new global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp();
            }
            input.ReadMessage(DeprecatedGetProductFromCdKeyRsp);
            break;
          }
          case 74: {
            if (getProductConfigRsp_ == null) {
              GetProductConfigRsp = new global::Uplay.Ownership.GetProductConfigRsp();
            }
            input.ReadMessage(GetProductConfigRsp);
            break;
          }
          case 82: {
            if (deprecatedGetLatestManifestsRsp_ == null) {
              DeprecatedGetLatestManifestsRsp = new global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp();
            }
            input.ReadMessage(DeprecatedGetLatestManifestsRsp);
            break;
          }
          case 98: {
            if (getBatchDownloadUrlsRsp_ == null) {
              GetBatchDownloadUrlsRsp = new global::Uplay.Ownership.GetBatchDownloadUrlsRsp();
            }
            input.ReadMessage(GetBatchDownloadUrlsRsp);
            break;
          }
          case 106: {
            if (getUplayPcTicketRsp_ == null) {
              GetUplayPcTicketRsp = new global::Uplay.Ownership.GetUplayPCTicketRsp();
            }
            input.ReadMessage(GetUplayPcTicketRsp);
            break;
          }
          case 122: {
            if (consumeOwnershipRsp_ == null) {
              ConsumeOwnershipRsp = new global::Uplay.Ownership.ConsumeOwnershipRsp();
            }
            input.ReadMessage(ConsumeOwnershipRsp);
            break;
          }
          case 130: {
            if (switchProductBranchRsp_ == null) {
              SwitchProductBranchRsp = new global::Uplay.Ownership.SwitchProductBranchRsp();
            }
            input.ReadMessage(SwitchProductBranchRsp);
            break;
          }
          case 138: {
            if (unlockProductBranchRsp_ == null) {
              UnlockProductBranchRsp = new global::Uplay.Ownership.UnlockProductBranchRsp();
            }
            input.ReadMessage(UnlockProductBranchRsp);
            break;
          }
          case 146: {
            if (registerOwnershipSteamPopRsp_ == null) {
              RegisterOwnershipSteamPopRsp = new global::Uplay.Ownership.RegisterOwnershipSteamPopRsp();
            }
            input.ReadMessage(RegisterOwnershipSteamPopRsp);
            break;
          }
          case 154: {
            if (registerOwnershipFromOculusRsp_ == null) {
              RegisterOwnershipFromOculusRsp = new global::Uplay.Ownership.RegisterOwnershipFromOculusRsp();
            }
            input.ReadMessage(RegisterOwnershipFromOculusRsp);
            break;
          }
          case 162: {
            if (getGameTokenRsp_ == null) {
              GetGameTokenRsp = new global::Uplay.Ownership.GetGameTokenRsp();
            }
            input.ReadMessage(GetGameTokenRsp);
            break;
          }
          case 170: {
            if (claimKeystorageKeyRsp_ == null) {
              ClaimKeystorageKeyRsp = new global::Uplay.Ownership.ClaimKeystorageKeyRsp();
            }
            input.ReadMessage(ClaimKeystorageKeyRsp);
            break;
          }
          case 178: {
            if (getGameTimeTicketRsp_ == null) {
              GetGameTimeTicketRsp = new global::Uplay.Ownership.GetGameTimeTicketRsp();
            }
            input.ReadMessage(GetGameTimeTicketRsp);
            break;
          }
          case 186: {
            if (getGameWithdrawalRightsRsp_ == null) {
              GetGameWithdrawalRightsRsp = new global::Uplay.Ownership.GetGameWithdrawalRightsRsp();
            }
            input.ReadMessage(GetGameWithdrawalRightsRsp);
            break;
          }
          case 194: {
            if (waiveGameWithdrawalRightsRsp_ == null) {
              WaiveGameWithdrawalRightsRsp = new global::Uplay.Ownership.WaiveGameWithdrawalRightsRsp();
            }
            input.ReadMessage(WaiveGameWithdrawalRightsRsp);
            break;
          }
          case 202: {
            if (signOwnershipRsp_ == null) {
              SignOwnershipRsp = new global::Uplay.Ownership.SignOwnershipRsp();
            }
            input.ReadMessage(SignOwnershipRsp);
            break;
          }
          case 210: {
            if (registerOwnershipFromWegameRsp_ == null) {
              RegisterOwnershipFromWegameRsp = new global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp();
            }
            input.ReadMessage(RegisterOwnershipFromWegameRsp);
            break;
          }
          case 218: {
            if (ownershipTokenRsp_ == null) {
              OwnershipTokenRsp = new global::Uplay.Ownership.OwnershipTokenRsp();
            }
            input.ReadMessage(OwnershipTokenRsp);
            break;
          }
          case 226: {
            if (registerTemporaryOwnershipRsp_ == null) {
              RegisterTemporaryOwnershipRsp = new global::Uplay.Ownership.RegisterTemporaryOwnershipRsp();
            }
            input.ReadMessage(RegisterTemporaryOwnershipRsp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (initializeRsp_ == null) {
              InitializeRsp = new global::Uplay.Ownership.InitializeRsp();
            }
            input.ReadMessage(InitializeRsp);
            break;
          }
          case 26: {
            if (registerOwnershipRsp_ == null) {
              RegisterOwnershipRsp = new global::Uplay.Ownership.RegisterOwnershipRsp();
            }
            input.ReadMessage(RegisterOwnershipRsp);
            break;
          }
          case 42: {
            if (deprecatedGetProductFromCdKeyRsp_ == null) {
              DeprecatedGetProductFromCdKeyRsp = new global::Uplay.Ownership.DeprecatedGetProductFromCdKeyRsp();
            }
            input.ReadMessage(DeprecatedGetProductFromCdKeyRsp);
            break;
          }
          case 74: {
            if (getProductConfigRsp_ == null) {
              GetProductConfigRsp = new global::Uplay.Ownership.GetProductConfigRsp();
            }
            input.ReadMessage(GetProductConfigRsp);
            break;
          }
          case 82: {
            if (deprecatedGetLatestManifestsRsp_ == null) {
              DeprecatedGetLatestManifestsRsp = new global::Uplay.Ownership.DeprecatedGetLatestManifestsRsp();
            }
            input.ReadMessage(DeprecatedGetLatestManifestsRsp);
            break;
          }
          case 98: {
            if (getBatchDownloadUrlsRsp_ == null) {
              GetBatchDownloadUrlsRsp = new global::Uplay.Ownership.GetBatchDownloadUrlsRsp();
            }
            input.ReadMessage(GetBatchDownloadUrlsRsp);
            break;
          }
          case 106: {
            if (getUplayPcTicketRsp_ == null) {
              GetUplayPcTicketRsp = new global::Uplay.Ownership.GetUplayPCTicketRsp();
            }
            input.ReadMessage(GetUplayPcTicketRsp);
            break;
          }
          case 122: {
            if (consumeOwnershipRsp_ == null) {
              ConsumeOwnershipRsp = new global::Uplay.Ownership.ConsumeOwnershipRsp();
            }
            input.ReadMessage(ConsumeOwnershipRsp);
            break;
          }
          case 130: {
            if (switchProductBranchRsp_ == null) {
              SwitchProductBranchRsp = new global::Uplay.Ownership.SwitchProductBranchRsp();
            }
            input.ReadMessage(SwitchProductBranchRsp);
            break;
          }
          case 138: {
            if (unlockProductBranchRsp_ == null) {
              UnlockProductBranchRsp = new global::Uplay.Ownership.UnlockProductBranchRsp();
            }
            input.ReadMessage(UnlockProductBranchRsp);
            break;
          }
          case 146: {
            if (registerOwnershipSteamPopRsp_ == null) {
              RegisterOwnershipSteamPopRsp = new global::Uplay.Ownership.RegisterOwnershipSteamPopRsp();
            }
            input.ReadMessage(RegisterOwnershipSteamPopRsp);
            break;
          }
          case 154: {
            if (registerOwnershipFromOculusRsp_ == null) {
              RegisterOwnershipFromOculusRsp = new global::Uplay.Ownership.RegisterOwnershipFromOculusRsp();
            }
            input.ReadMessage(RegisterOwnershipFromOculusRsp);
            break;
          }
          case 162: {
            if (getGameTokenRsp_ == null) {
              GetGameTokenRsp = new global::Uplay.Ownership.GetGameTokenRsp();
            }
            input.ReadMessage(GetGameTokenRsp);
            break;
          }
          case 170: {
            if (claimKeystorageKeyRsp_ == null) {
              ClaimKeystorageKeyRsp = new global::Uplay.Ownership.ClaimKeystorageKeyRsp();
            }
            input.ReadMessage(ClaimKeystorageKeyRsp);
            break;
          }
          case 178: {
            if (getGameTimeTicketRsp_ == null) {
              GetGameTimeTicketRsp = new global::Uplay.Ownership.GetGameTimeTicketRsp();
            }
            input.ReadMessage(GetGameTimeTicketRsp);
            break;
          }
          case 186: {
            if (getGameWithdrawalRightsRsp_ == null) {
              GetGameWithdrawalRightsRsp = new global::Uplay.Ownership.GetGameWithdrawalRightsRsp();
            }
            input.ReadMessage(GetGameWithdrawalRightsRsp);
            break;
          }
          case 194: {
            if (waiveGameWithdrawalRightsRsp_ == null) {
              WaiveGameWithdrawalRightsRsp = new global::Uplay.Ownership.WaiveGameWithdrawalRightsRsp();
            }
            input.ReadMessage(WaiveGameWithdrawalRightsRsp);
            break;
          }
          case 202: {
            if (signOwnershipRsp_ == null) {
              SignOwnershipRsp = new global::Uplay.Ownership.SignOwnershipRsp();
            }
            input.ReadMessage(SignOwnershipRsp);
            break;
          }
          case 210: {
            if (registerOwnershipFromWegameRsp_ == null) {
              RegisterOwnershipFromWegameRsp = new global::Uplay.Ownership.RegisterOwnershipFromWeGameRsp();
            }
            input.ReadMessage(RegisterOwnershipFromWegameRsp);
            break;
          }
          case 218: {
            if (ownershipTokenRsp_ == null) {
              OwnershipTokenRsp = new global::Uplay.Ownership.OwnershipTokenRsp();
            }
            input.ReadMessage(OwnershipTokenRsp);
            break;
          }
          case 226: {
            if (registerTemporaryOwnershipRsp_ == null) {
              RegisterTemporaryOwnershipRsp = new global::Uplay.Ownership.RegisterTemporaryOwnershipRsp();
            }
            input.ReadMessage(RegisterTemporaryOwnershipRsp);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OwnedGamePush : pb::IMessage<OwnedGamePush>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OwnedGamePush> _parser = new pb::MessageParser<OwnedGamePush>(() => new OwnedGamePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OwnedGamePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGamePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGamePush(OwnedGamePush other) : this() {
      ownedGamesContainer_ = other.ownedGamesContainer_ != null ? other.ownedGamesContainer_.Clone() : null;
      ownedGames_ = other.ownedGames_ != null ? other.ownedGames_.Clone() : null;
      removedProducts_ = other.removedProducts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedGamePush Clone() {
      return new OwnedGamePush(this);
    }

    /// <summary>Field number for the "owned_games_container" field.</summary>
    public const int OwnedGamesContainerFieldNumber = 2;
    private global::Uplay.Ownership.OwnedGamesContainer ownedGamesContainer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGamesContainer OwnedGamesContainer {
      get { return ownedGamesContainer_; }
      set {
        ownedGamesContainer_ = value;
      }
    }

    /// <summary>Field number for the "owned_games" field.</summary>
    public const int OwnedGamesFieldNumber = 4;
    private global::Uplay.Ownership.OwnedGames ownedGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGames OwnedGames {
      get { return ownedGames_; }
      set {
        ownedGames_ = value;
      }
    }

    /// <summary>Field number for the "removed_products" field.</summary>
    public const int RemovedProductsFieldNumber = 5;
    private static readonly pb::FieldCodec<uint> _repeated_removedProducts_codec
        = pb::FieldCodec.ForUInt32(40);
    private readonly pbc::RepeatedField<uint> removedProducts_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> RemovedProducts {
      get { return removedProducts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OwnedGamePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OwnedGamePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OwnedGamesContainer, other.OwnedGamesContainer)) return false;
      if (!object.Equals(OwnedGames, other.OwnedGames)) return false;
      if(!removedProducts_.Equals(other.removedProducts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ownedGamesContainer_ != null) hash ^= OwnedGamesContainer.GetHashCode();
      if (ownedGames_ != null) hash ^= OwnedGames.GetHashCode();
      hash ^= removedProducts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ownedGamesContainer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OwnedGamesContainer);
      }
      if (ownedGames_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OwnedGames);
      }
      removedProducts_.WriteTo(output, _repeated_removedProducts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ownedGamesContainer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OwnedGamesContainer);
      }
      if (ownedGames_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OwnedGames);
      }
      removedProducts_.WriteTo(ref output, _repeated_removedProducts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ownedGamesContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGamesContainer);
      }
      if (ownedGames_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGames);
      }
      size += removedProducts_.CalculateSize(_repeated_removedProducts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OwnedGamePush other) {
      if (other == null) {
        return;
      }
      if (other.ownedGamesContainer_ != null) {
        if (ownedGamesContainer_ == null) {
          OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
        }
        OwnedGamesContainer.MergeFrom(other.OwnedGamesContainer);
      }
      if (other.ownedGames_ != null) {
        if (ownedGames_ == null) {
          OwnedGames = new global::Uplay.Ownership.OwnedGames();
        }
        OwnedGames.MergeFrom(other.OwnedGames);
      }
      removedProducts_.Add(other.removedProducts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (ownedGamesContainer_ == null) {
              OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
            }
            input.ReadMessage(OwnedGamesContainer);
            break;
          }
          case 34: {
            if (ownedGames_ == null) {
              OwnedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(OwnedGames);
            break;
          }
          case 42:
          case 40: {
            removedProducts_.AddEntriesFrom(input, _repeated_removedProducts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (ownedGamesContainer_ == null) {
              OwnedGamesContainer = new global::Uplay.Ownership.OwnedGamesContainer();
            }
            input.ReadMessage(OwnedGamesContainer);
            break;
          }
          case 34: {
            if (ownedGames_ == null) {
              OwnedGames = new global::Uplay.Ownership.OwnedGames();
            }
            input.ReadMessage(OwnedGames);
            break;
          }
          case 42:
          case 40: {
            removedProducts_.AddEntriesFrom(ref input, _repeated_removedProducts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubscriptionPush : pb::IMessage<SubscriptionPush>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscriptionPush> _parser = new pb::MessageParser<SubscriptionPush>(() => new SubscriptionPush());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscriptionPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscriptionPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscriptionPush(SubscriptionPush other) : this() {
      _hasBits0 = other._hasBits0;
      subscriptionState_ = other.subscriptionState_;
      subscriptionType_ = other.subscriptionType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscriptionPush Clone() {
      return new SubscriptionPush(this);
    }

    /// <summary>Field number for the "subscription_state" field.</summary>
    public const int SubscriptionStateFieldNumber = 1;
    private readonly static global::Uplay.Ownership.SubscriptionState SubscriptionStateDefaultValue = global::Uplay.Ownership.SubscriptionState.NoState;

    private global::Uplay.Ownership.SubscriptionState subscriptionState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.SubscriptionState SubscriptionState {
      get { if ((_hasBits0 & 1) != 0) { return subscriptionState_; } else { return SubscriptionStateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscriptionState_ = value;
      }
    }
    /// <summary>Gets whether the "subscription_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubscriptionState {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscription_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubscriptionState() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "subscription_type" field.</summary>
    public const int SubscriptionTypeFieldNumber = 2;
    private readonly static uint SubscriptionTypeDefaultValue = 0;

    private uint subscriptionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SubscriptionType {
      get { if ((_hasBits0 & 2) != 0) { return subscriptionType_; } else { return SubscriptionTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        subscriptionType_ = value;
      }
    }
    /// <summary>Gets whether the "subscription_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubscriptionType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "subscription_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubscriptionType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscriptionPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionState != other.SubscriptionState) return false;
      if (SubscriptionType != other.SubscriptionType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSubscriptionState) hash ^= SubscriptionState.GetHashCode();
      if (HasSubscriptionType) hash ^= SubscriptionType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSubscriptionState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionState);
      }
      if (HasSubscriptionType) {
        output.WriteRawTag(16);
        output.WriteUInt32(SubscriptionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSubscriptionState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionState);
      }
      if (HasSubscriptionType) {
        output.WriteRawTag(16);
        output.WriteUInt32(SubscriptionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSubscriptionState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionState);
      }
      if (HasSubscriptionType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubscriptionType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscriptionPush other) {
      if (other == null) {
        return;
      }
      if (other.HasSubscriptionState) {
        SubscriptionState = other.SubscriptionState;
      }
      if (other.HasSubscriptionType) {
        SubscriptionType = other.SubscriptionType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubscriptionState = (global::Uplay.Ownership.SubscriptionState) input.ReadEnum();
            break;
          }
          case 16: {
            SubscriptionType = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SubscriptionState = (global::Uplay.Ownership.SubscriptionState) input.ReadEnum();
            break;
          }
          case 16: {
            SubscriptionType = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Push : pb::IMessage<Push>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Push> _parser = new pb::MessageParser<Push>(() => new Push());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Push> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Push() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Push(Push other) : this() {
      ownedGamePush_ = other.ownedGamePush_ != null ? other.ownedGamePush_.Clone() : null;
      uplayCoreGameInitializedPush_ = other.uplayCoreGameInitializedPush_ != null ? other.uplayCoreGameInitializedPush_.Clone() : null;
      subscriptionPush_ = other.subscriptionPush_ != null ? other.subscriptionPush_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Push Clone() {
      return new Push(this);
    }

    /// <summary>Field number for the "owned_game_push" field.</summary>
    public const int OwnedGamePushFieldNumber = 1;
    private global::Uplay.Ownership.OwnedGamePush ownedGamePush_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.OwnedGamePush OwnedGamePush {
      get { return ownedGamePush_; }
      set {
        ownedGamePush_ = value;
      }
    }

    /// <summary>Field number for the "uplay_core_game_initialized_push" field.</summary>
    public const int UplayCoreGameInitializedPushFieldNumber = 2;
    private global::Uplay.Ownership.UplayCoreGameInitializedPush uplayCoreGameInitializedPush_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.UplayCoreGameInitializedPush UplayCoreGameInitializedPush {
      get { return uplayCoreGameInitializedPush_; }
      set {
        uplayCoreGameInitializedPush_ = value;
      }
    }

    /// <summary>Field number for the "subscription_push" field.</summary>
    public const int SubscriptionPushFieldNumber = 3;
    private global::Uplay.Ownership.SubscriptionPush subscriptionPush_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.SubscriptionPush SubscriptionPush {
      get { return subscriptionPush_; }
      set {
        subscriptionPush_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Push);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Push other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OwnedGamePush, other.OwnedGamePush)) return false;
      if (!object.Equals(UplayCoreGameInitializedPush, other.UplayCoreGameInitializedPush)) return false;
      if (!object.Equals(SubscriptionPush, other.SubscriptionPush)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ownedGamePush_ != null) hash ^= OwnedGamePush.GetHashCode();
      if (uplayCoreGameInitializedPush_ != null) hash ^= UplayCoreGameInitializedPush.GetHashCode();
      if (subscriptionPush_ != null) hash ^= SubscriptionPush.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ownedGamePush_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OwnedGamePush);
      }
      if (uplayCoreGameInitializedPush_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UplayCoreGameInitializedPush);
      }
      if (subscriptionPush_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscriptionPush);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ownedGamePush_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OwnedGamePush);
      }
      if (uplayCoreGameInitializedPush_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UplayCoreGameInitializedPush);
      }
      if (subscriptionPush_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscriptionPush);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ownedGamePush_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnedGamePush);
      }
      if (uplayCoreGameInitializedPush_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UplayCoreGameInitializedPush);
      }
      if (subscriptionPush_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionPush);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Push other) {
      if (other == null) {
        return;
      }
      if (other.ownedGamePush_ != null) {
        if (ownedGamePush_ == null) {
          OwnedGamePush = new global::Uplay.Ownership.OwnedGamePush();
        }
        OwnedGamePush.MergeFrom(other.OwnedGamePush);
      }
      if (other.uplayCoreGameInitializedPush_ != null) {
        if (uplayCoreGameInitializedPush_ == null) {
          UplayCoreGameInitializedPush = new global::Uplay.Ownership.UplayCoreGameInitializedPush();
        }
        UplayCoreGameInitializedPush.MergeFrom(other.UplayCoreGameInitializedPush);
      }
      if (other.subscriptionPush_ != null) {
        if (subscriptionPush_ == null) {
          SubscriptionPush = new global::Uplay.Ownership.SubscriptionPush();
        }
        SubscriptionPush.MergeFrom(other.SubscriptionPush);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ownedGamePush_ == null) {
              OwnedGamePush = new global::Uplay.Ownership.OwnedGamePush();
            }
            input.ReadMessage(OwnedGamePush);
            break;
          }
          case 18: {
            if (uplayCoreGameInitializedPush_ == null) {
              UplayCoreGameInitializedPush = new global::Uplay.Ownership.UplayCoreGameInitializedPush();
            }
            input.ReadMessage(UplayCoreGameInitializedPush);
            break;
          }
          case 26: {
            if (subscriptionPush_ == null) {
              SubscriptionPush = new global::Uplay.Ownership.SubscriptionPush();
            }
            input.ReadMessage(SubscriptionPush);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (ownedGamePush_ == null) {
              OwnedGamePush = new global::Uplay.Ownership.OwnedGamePush();
            }
            input.ReadMessage(OwnedGamePush);
            break;
          }
          case 18: {
            if (uplayCoreGameInitializedPush_ == null) {
              UplayCoreGameInitializedPush = new global::Uplay.Ownership.UplayCoreGameInitializedPush();
            }
            input.ReadMessage(UplayCoreGameInitializedPush);
            break;
          }
          case 26: {
            if (subscriptionPush_ == null) {
              SubscriptionPush = new global::Uplay.Ownership.SubscriptionPush();
            }
            input.ReadMessage(SubscriptionPush);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Upstream : pb::IMessage<Upstream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Upstream> _parser = new pb::MessageParser<Upstream>(() => new Upstream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Upstream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Upstream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Upstream(Upstream other) : this() {
      request_ = other.request_ != null ? other.request_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Upstream Clone() {
      return new Upstream(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    private global::Uplay.Ownership.Req request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.Req Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Upstream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Upstream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (request_ != null) hash ^= Request.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Upstream other) {
      if (other == null) {
        return;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Uplay.Ownership.Req();
        }
        Request.MergeFrom(other.Request);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::Uplay.Ownership.Req();
            }
            input.ReadMessage(Request);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::Uplay.Ownership.Req();
            }
            input.ReadMessage(Request);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Downstream : pb::IMessage<Downstream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Downstream> _parser = new pb::MessageParser<Downstream>(() => new Downstream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Downstream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Ownership.OwnershipReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downstream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downstream(Downstream other) : this() {
      response_ = other.response_ != null ? other.response_.Clone() : null;
      push_ = other.push_ != null ? other.push_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downstream Clone() {
      return new Downstream(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private global::Uplay.Ownership.Rsp response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.Rsp Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "push" field.</summary>
    public const int PushFieldNumber = 2;
    private global::Uplay.Ownership.Push push_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Ownership.Push Push {
      get { return push_; }
      set {
        push_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Downstream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Downstream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Response, other.Response)) return false;
      if (!object.Equals(Push, other.Push)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (response_ != null) hash ^= Response.GetHashCode();
      if (push_ != null) hash ^= Push.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (push_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Push);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (response_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Response);
      }
      if (push_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Push);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (push_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Push);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Downstream other) {
      if (other == null) {
        return;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::Uplay.Ownership.Rsp();
        }
        Response.MergeFrom(other.Response);
      }
      if (other.push_ != null) {
        if (push_ == null) {
          Push = new global::Uplay.Ownership.Push();
        }
        Push.MergeFrom(other.Push);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::Uplay.Ownership.Rsp();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            if (push_ == null) {
              Push = new global::Uplay.Ownership.Push();
            }
            input.ReadMessage(Push);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (response_ == null) {
              Response = new global::Uplay.Ownership.Rsp();
            }
            input.ReadMessage(Response);
            break;
          }
          case 18: {
            if (push_ == null) {
              Push = new global::Uplay.Ownership.Push();
            }
            input.ReadMessage(Push);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
